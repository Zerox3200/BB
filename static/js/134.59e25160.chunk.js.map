{"version":3,"file":"static/js/134.59e25160.chunk.js","mappings":"6NAWe,SAASA,IACpB,MAAOC,EAASC,IAAcC,EAAAA,EAAAA,WAAS,IAChCC,EAAOC,IAAYF,EAAAA,EAAAA,aACpB,mBAAEG,IAAuBC,EAAAA,EAAAA,YAAWC,EAAAA,GACpCC,GAAWC,EAAAA,EAAAA,MAGjB,IAAIC,EAAmBC,EAAAA,GAAW,CAC9BC,MAAOD,EAAAA,KAAaE,SAAS,qBAAqBD,MAAM,iBACxDE,SAAUH,EAAAA,KAAaE,SAAS,0BAwBpC,IAAIE,GAASC,EAAAA,EAAAA,IAAU,CACnBC,cAAe,CACXL,MAAO,GACPE,SAAU,IACXJ,mBAAkBQ,SAxBzBC,eAA2BC,GAEvB,OADAnB,GAAW,SACEoB,EAAAA,EAAMC,KAAK,mCAAoC,CACxDV,MAAOQ,EAAOR,MACdE,SAAUM,EAAON,WAClBS,MAAMC,IACLvB,GAAW,GACPuB,EAAIC,KAAKC,QACTC,EAAAA,EAAkBC,IAAI,QAASJ,EAAIC,KAAKC,OACxCrB,GAAmBwB,EAAAA,EAAAA,GAAUL,EAAIC,KAAKC,QACtClB,EAAS,kBAEbJ,EAASoB,EAAIC,KACP,IACPK,OAAOC,IACN3B,EAAS2B,GACT9B,GAAW,EAAM,GAEzB,IASA,OAAO+B,EAAAA,EAAAA,KAAAC,EAAAA,SAAA,CAAAC,UACHF,EAAAA,EAAAA,KAAA,WAASG,UAAU,QAAOD,UACtBE,EAAAA,EAAAA,MAAA,OAAKD,UAAU,cAAaD,SAAA,EACxBF,EAAAA,EAAAA,KAAA,MAAIG,UAAU,gBAAeD,SAAC,WAC9BE,EAAAA,EAAAA,MAAA,QAAMlB,SAAUH,EAAOsB,aAAaH,SAAA,EAIhCF,EAAAA,EAAAA,KAAA,SAAOM,QAAQ,QAAQH,UAAU,kBAAiBD,SAAC,WAEnDF,EAAAA,EAAAA,KAAA,SAAOG,UAAU,eAAeI,YAAY,QAAQC,OAAQzB,EAAO0B,WAC/DC,SAAU3B,EAAO4B,aAAcC,KAAK,QAAQC,KAAK,QAAQC,GAAG,UAC/D/B,EAAOgC,OAAOnC,OAASG,EAAOiC,QAAQpC,QACnCoB,EAAAA,EAAAA,KAAA,OAAKG,UAAU,+BAA8BD,SAAEnB,EAAOgC,OAAOnC,SAEjEoB,EAAAA,EAAAA,KAAA,SAAOM,QAAQ,WAAWH,UAAU,kBAAiBD,SAAC,cACtDF,EAAAA,EAAAA,KAAA,SAAOG,UAAU,eAAeI,YAAY,WAAWC,OAAQzB,EAAO0B,WAClEC,SAAU3B,EAAO4B,aAAcC,KAAK,WAAWC,KAAK,WAAWC,GAAG,aAErE/B,EAAOgC,OAAOjC,UAAYC,EAAOiC,QAAQlC,WACtCkB,EAAAA,EAAAA,KAAA,OAAKG,UAAU,+BAA8BD,SAAEnB,EAAOgC,OAAOjC,WAGhEd,GAAUgC,EAAAA,EAAAA,KAAA,UAAQY,KAAK,SAAST,UAAU,8BAA6BD,UACpEF,EAAAA,EAAAA,KAAA,KAAGG,UAAU,+BAEXH,EAAAA,EAAAA,KAAA,UAAQY,KAAK,SACXK,WAAYlC,EAAOmC,SAAWnC,EAAOoC,OAAQhB,UAAU,+BAA8BD,SAAC,UAC7F/B,IAAS6B,EAAAA,EAAAA,KAAA,OAAKG,UAAU,+BAA8BD,SAAE/B,aAO7E,C","sources":["pages/Admin/Login/Login.jsx"],"sourcesContent":["import React, { useContext, useState } from 'react'\r\nimport { useFormik } from 'formik'\r\nimport * as Yup from 'yup'\r\nimport \"./Login.scss\"\r\nimport axios from 'axios'\r\nimport { reactLocalStorage } from 'reactjs-localstorage'\r\nimport { useNavigate } from 'react-router-dom'\r\nimport { UserContext } from '../../../Context/UserContext'\r\nimport { jwtDecode } from 'jwt-decode'\r\n\r\n// .matches(/^[A-Z][\\w @]{5,8}$/, \"invalid password ex(Ahmed123)\")\r\nexport default function Login() {\r\n    const [loading, setloading] = useState(false);\r\n    const [Error, setError] = useState();\r\n    const { setUserInformation } = useContext(UserContext);\r\n    const navigate = useNavigate();\r\n\r\n    // yup validation \r\n    let validationSchema = Yup.object({\r\n        email: Yup.string().required(\"email is required\").email('invalid email'),\r\n        password: Yup.string().required(\"password is required\"),\r\n    })\r\n\r\n    // callApi \r\n    async function loginsubmit(values) {\r\n        setloading(true)\r\n        return await axios.post(\"http://localhost:3000/auth/login\", {\r\n            email: values.email,\r\n            password: values.password\r\n        }).then((res) => {\r\n            setloading(false);\r\n            if (res.data.token) {\r\n                reactLocalStorage.set(\"token\", res.data.token);\r\n                setUserInformation(jwtDecode(res.data.token))\r\n                navigate(\"/DashApps2030\")\r\n            }\r\n            setError(res.data)\r\n            return;\r\n        }).catch((err) => {\r\n            setError(err)\r\n            setloading(false);\r\n        })\r\n    }\r\n    // Fromik \r\n    let formik = useFormik({\r\n        initialValues: {\r\n            email: \"\",\r\n            password: \"\"\r\n        }, validationSchema, onSubmit: loginsubmit\r\n    })\r\n\r\n    return <>\r\n        <section className=\"Login\">\r\n            <div className=\"login-main \">\r\n                <h1 className='font-color h2'>Login</h1>\r\n                <form onSubmit={formik.handleSubmit}>\r\n\r\n                    {/* {apiError && <div className=\"alert alert-danger\">{apiError}</div>} */}\r\n\r\n                    <label htmlFor=\"email\" className='form-label mt-3'>Email</label>\r\n\r\n                    <input className='form-control' placeholder='Email' onBlur={formik.handleBlur}\r\n                        onChange={formik.handleChange} type=\"email\" name='email' id='email' />\r\n                    {formik.errors.email && formik.touched.email &&\r\n                        <div className=\"alert alert-danger py-2 mt-2\">{formik.errors.email}</div>}\r\n\r\n                    <label htmlFor=\"password\" className='form-label mt-3'>Password</label>\r\n                    <input className='form-control' placeholder='Password' onBlur={formik.handleBlur}\r\n                        onChange={formik.handleChange} type=\"password\" name='password' id='password' />\r\n\r\n                    {formik.errors.password && formik.touched.password &&\r\n                        <div className=\"alert alert-danger py-2 mt-2\">{formik.errors.password}</div>}\r\n\r\n\r\n                    {loading ? <button type='button' className='btn bg-main text-light mt-2'>\r\n                        <i className='fas fa-spinner fa-spin '></i>\r\n                    </button>\r\n                        : <button type='submit'\r\n                            disabled={!(formik.isValid && formik.dirty)} className='btn  bg-main text-light mt-2'>Login</button>}\r\n                    {Error && <div className=\"alert alert-danger py-2 mt-2\">{Error}</div>}\r\n                </form>\r\n\r\n            </div>\r\n\r\n        </section>\r\n    </>\r\n}\r\n"],"names":["Login","loading","setloading","useState","Error","setError","setUserInformation","useContext","UserContext","navigate","useNavigate","validationSchema","Yup","email","required","password","formik","useFormik","initialValues","onSubmit","async","values","axios","post","then","res","data","token","reactLocalStorage","set","jwtDecode","catch","err","_jsx","_Fragment","children","className","_jsxs","handleSubmit","htmlFor","placeholder","onBlur","handleBlur","onChange","handleChange","type","name","id","errors","touched","disabled","isValid","dirty"],"sourceRoot":""}