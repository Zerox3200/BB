{"version":3,"file":"static/js/134.918efc77.chunk.js","mappings":"2KAMe,SAASA,IACpB,MAAOC,EAASC,IAAcC,EAAAA,EAAAA,WAAS,GAGvC,IAAIC,EAAmBC,EAAAA,GAAW,CAC9BC,MAAOD,EAAAA,KAAaE,SAAS,qBAAqBD,MAAM,iBACxDE,SAAUH,EAAAA,KAAaE,SAAS,wBAAwBE,QAAQ,qBAAsB,mCAQ1F,IAAIC,GAASC,EAAAA,EAAAA,IAAU,CACnBC,cAAe,CACXN,MAAO,GACPE,SAAU,IACXJ,mBAAkBS,SARzBC,eAA2BC,GACvBb,GAAW,EACf,IASA,OAAOc,EAAAA,EAAAA,KAAAC,EAAAA,SAAA,CAAAC,UACHF,EAAAA,EAAAA,KAAA,WAASG,UAAU,QAAOD,UACtBE,EAAAA,EAAAA,MAAA,OAAKD,UAAU,cAAaD,SAAA,EACxBF,EAAAA,EAAAA,KAAA,MAAIG,UAAU,gBAAeD,SAAC,WAC9BE,EAAAA,EAAAA,MAAA,QAAMP,SAAUH,EAAOW,aAAaH,SAAA,EAIhCF,EAAAA,EAAAA,KAAA,SAAOM,QAAQ,QAAQH,UAAU,gBACjCH,EAAAA,EAAAA,KAAA,SAAOG,UAAU,eAAeI,OAAQb,EAAOc,WAAYC,SAAUf,EAAOgB,aAAcC,KAAK,QAAQC,KAAK,QAAQC,GAAG,UACtHnB,EAAOoB,OAAOxB,QACXU,EAAAA,EAAAA,KAAA,OAAKG,UAAU,+BAA8BD,SAAER,EAAOoB,OAAOxB,SAEjEU,EAAAA,EAAAA,KAAA,SAAOM,QAAQ,WAAWH,UAAU,gBACpCH,EAAAA,EAAAA,KAAA,SAAOG,UAAU,eAAeI,OAAQb,EAAOc,WAAYC,SAAUf,EAAOgB,aAAcC,KAAK,WAAWC,KAAK,WAAWC,GAAG,aAC5HnB,EAAOoB,OAAOtB,UAAYE,EAAOqB,QAAQvB,WACtCQ,EAAAA,EAAAA,KAAA,OAAKG,UAAU,+BAA8BD,SAAER,EAAOoB,OAAOtB,WAEhEP,GAAUe,EAAAA,EAAAA,KAAA,UAAQW,KAAK,SAASR,UAAU,8BAA6BD,UACpEF,EAAAA,EAAAA,KAAA,KAAGG,UAAU,+BACLH,EAAAA,EAAAA,KAAA,UAAQW,KAAK,SACrBK,WAAYtB,EAAOuB,SAAWvB,EAAOwB,OAAQf,UAAU,8BAA6BD,SAAC,mBAO7G,C","sources":["pages/Admin/Login/Login.jsx"],"sourcesContent":["import React, { useState } from 'react'\r\nimport { useFormik } from 'formik'\r\nimport * as Yup from 'yup'\r\nimport \"./Login.scss\"\r\n\r\n\r\nexport default function Login() {\r\n    const [loading, setloading] = useState(false)\r\n\r\n    // yup validation \r\n    let validationSchema = Yup.object({\r\n        email: Yup.string().required(\"email is required\").email('invalid email'),\r\n        password: Yup.string().required(\"password is required\").matches(/^[A-Z][\\w @]{5,8}$/, \"invalid password ex(Ahmed123)\"),\r\n    })\r\n\r\n    // callApi \r\n    async function loginsubmit(values) {\r\n        setloading(true)\r\n    }\r\n    // Fromik \r\n    let formik = useFormik({\r\n        initialValues: {\r\n            email: \"\",\r\n            password: \"\"\r\n        }, validationSchema, onSubmit: loginsubmit\r\n    })\r\n\r\n    return <>\r\n        <section className=\"Login\">\r\n            <div className=\"login-main \">\r\n                <h1 className='font-color h2'>Login</h1>\r\n                <form onSubmit={formik.handleSubmit}>\r\n\r\n                    {/* {apiError && <div className=\"alert alert-danger\">{apiError}</div>} */}\r\n\r\n                    <label htmlFor=\"email\" className='form-label'></label>\r\n                    <input className='form-control' onBlur={formik.handleBlur} onChange={formik.handleChange} type=\"email\" name='email' id='email' />\r\n                    {formik.errors.email &&\r\n                        <div className=\"alert alert-danger py-2 mt-2\">{formik.errors.email}</div>}\r\n\r\n                    <label htmlFor=\"password\" className='form-label'></label>\r\n                    <input className='form-control' onBlur={formik.handleBlur} onChange={formik.handleChange} type=\"password\" name='password' id='password' />\r\n                    {formik.errors.password && formik.touched.password &&\r\n                        <div className=\"alert alert-danger py-2 mt-2\">{formik.errors.password}</div>}\r\n\r\n                    {loading ? <button type='button' className='btn bg-main text-light mt-2'>\r\n                        <i className='fas fa-spinner fa-spin '></i>\r\n                    </button> : <button type='submit'\r\n                        disabled={!(formik.isValid && formik.dirty)} className='btn bg-main text-light mt-2'>Login</button>}\r\n                </form>\r\n\r\n            </div>\r\n\r\n        </section>\r\n    </>\r\n}\r\n"],"names":["Login","loading","setloading","useState","validationSchema","Yup","email","required","password","matches","formik","useFormik","initialValues","onSubmit","async","values","_jsx","_Fragment","children","className","_jsxs","handleSubmit","htmlFor","onBlur","handleBlur","onChange","handleChange","type","name","id","errors","touched","disabled","isValid","dirty"],"sourceRoot":""}