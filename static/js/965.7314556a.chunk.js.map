{"version":3,"file":"static/js/965.7314556a.chunk.js","mappings":"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","sources":["components/CategoriesCrud/Add/AddCat.jsx","components/SubmitToast/SubmitToast.jsx"],"sourcesContent":["import { useFormik } from 'formik'\r\nimport React, { useState } from 'react'\r\nimport './AddCat.scss';\r\nimport * as Yup from 'yup'\r\nimport axios from 'axios';\r\nimport toast from 'react-hot-toast';\r\nimport SubmitToast from '../../SubmitToast/SubmitToast';\r\n\r\nexport default function AddCat() {\r\n    const [loading, setLoading] = useState(false);\r\n    const [Error, setError] = useState(null);\r\n\r\n    const validationSchema = Yup.object({\r\n        name: Yup.string().required(\"Category name is required\"),\r\n        catIcon: Yup.mixed()\r\n            .test(\"File_Type\", \"Category image should be svg only!!\", (value) =>\r\n                value && ['image/svg+xml'].includes(value.type))\r\n            .test(\"File_Size\", \"Image size should be less than 200 KB\",\r\n                (value) => value && value.size <= 200 * 1024).required(\"Category Image \")\r\n    });\r\n\r\n    const AddCategory = async (values) => {\r\n        setLoading(true);\r\n        const CatFormData = new FormData();\r\n        CatFormData.append('name', values.name);\r\n        CatFormData.append('catIcon', values.catIcon);\r\n        await axios.post(\"http://localhost:3000/Categories/CreateCat\", CatFormData, {\r\n            headers: {\r\n                token: localStorage.getItem(\"token\")\r\n            }\r\n        }).then((res) => {\r\n            if (res.data.success) {\r\n                setError(null)\r\n                setLoading(false);\r\n                toast(<SubmitToast Message='Category Added Successfully' />);\r\n            } else if (!res.data.success) {\r\n                setError(res.data.Message)\r\n                setLoading(false)\r\n            }\r\n        }).catch((err) => {\r\n            setLoading(false);\r\n            setError(err.message);\r\n        });\r\n    }\r\n\r\n    const Formik = useFormik({\r\n        initialValues: {\r\n            name: \"\",\r\n            catIcon: \"\"\r\n        }, validationSchema\r\n        , onSubmit: AddCategory\r\n    });\r\n    const HandleIcon = (event) => {\r\n        const IconImage = event.target.files[0];\r\n        Formik.setFieldValue(\"catIcon\", IconImage)\r\n    }\r\n\r\n    return <>\r\n        <form className='CatForm' onSubmit={Formik.handleSubmit}>\r\n            <h1 className='h5 form-label mt-4 font-color'>Add Categoty</h1>\r\n            {Error === null ? null : <div className=\"alert alert-danger py-2 mt-2\">{Error}</div>}\r\n            <div className=\"Add_Cat d-flex flex-column\">\r\n                <label htmlFor=\"CatName\" className='form-label mt-3 font-color'>Category Name</label>\r\n                <input type=\"text\" name=\"name\" className='form-control' id='CatName'\r\n                    onChange={Formik.handleChange} onBlur={Formik.handleBlur} />\r\n                {Formik.errors.name && Formik.touched.name ?\r\n                    <div className=\"alert alert-danger py-2 mt-2\">{Formik.errors.name}</div> : null}\r\n            </div>\r\n\r\n            <div className=\"Add_Cat_Image d-flex flex-column\">\r\n                <label htmlFor=\"CatImage\" className='form-label mt-3 font-color'>Category Name</label>\r\n                <input type=\"file\" name=\"catIcon\" className='form-control' id='CatImage'\r\n                    onChange={HandleIcon} />\r\n                {Formik.errors.catIcon && Formik.touched.catIcon ?\r\n                    <div className=\"alert alert-danger py-2 mt-2\">{Formik.errors.catIcon}</div> : null}\r\n            </div>\r\n            {loading ? <button type='button' className='btn bg-main text-light mt-3'>\r\n                <i className='fas fa-spinner fa-spin '></i>\r\n            </button> : <button className='btn bg-main text-light mt-3'>Add Category</button>}\r\n\r\n        </form>\r\n    </>\r\n}\r\n","import React from 'react'\r\n\r\nexport default function SubmitToast({ Message }) {\r\n    return <>\r\n        <article className='d-flex justify-content-center column-gap-4'>\r\n            <h1 className='m-0'>{Message}</h1>\r\n        </article>\r\n    </>\r\n}\r\n"],"names":["AddCat","loading","setLoading","useState","Error","setError","validationSchema","Yup","name","required","catIcon","test","value","includes","type","size","Formik","useFormik","initialValues","onSubmit","async","CatFormData","FormData","append","values","axios","post","headers","token","localStorage","getItem","then","res","data","success","toast","_jsx","SubmitToast","Message","catch","err","message","_Fragment","children","_jsxs","className","handleSubmit","htmlFor","id","onChange","handleChange","onBlur","handleBlur","errors","touched","event","IconImage","target","files","setFieldValue","_ref"],"sourceRoot":""}