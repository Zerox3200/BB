{"version":3,"file":"static/js/880.9ac5555f.chunk.js","mappings":"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","sources":["../node_modules/framer-motion/dist/es/context/LayoutGroupContext.mjs","../node_modules/framer-motion/dist/es/context/MotionConfigContext.mjs","../node_modules/framer-motion/dist/es/context/PresenceContext.mjs","../node_modules/framer-motion/dist/es/frameloop/render-step.mjs","../node_modules/framer-motion/dist/es/frameloop/batcher.mjs","../node_modules/framer-motion/dist/es/frameloop/frame.mjs","../node_modules/framer-motion/dist/es/context/MotionContext/index.mjs","../node_modules/framer-motion/dist/es/context/LazyContext.mjs","../node_modules/framer-motion/dist/es/render/dom/utils/camel-to-dash.mjs","../node_modules/framer-motion/dist/es/animation/optimized-appear/data-id.mjs","../node_modules/framer-motion/dist/es/frameloop/microtask.mjs","../node_modules/framer-motion/dist/es/utils/is-ref-object.mjs","../node_modules/framer-motion/dist/es/motion/utils/use-motion-ref.mjs","../node_modules/framer-motion/dist/es/render/utils/is-variant-label.mjs","../node_modules/framer-motion/dist/es/animation/utils/is-animation-controls.mjs","../node_modules/framer-motion/dist/es/render/utils/variant-props.mjs","../node_modules/framer-motion/dist/es/render/utils/is-controlling-variants.mjs","../node_modules/framer-motion/dist/es/context/MotionContext/create.mjs","../node_modules/framer-motion/dist/es/context/MotionContext/utils.mjs","../node_modules/framer-motion/dist/es/motion/features/definitions.mjs","../node_modules/framer-motion/dist/es/context/SwitchLayoutGroupContext.mjs","../node_modules/framer-motion/dist/es/motion/utils/symbol.mjs","../node_modules/framer-motion/dist/es/motion/index.mjs","../node_modules/framer-motion/dist/es/motion/features/load-features.mjs","../node_modules/framer-motion/dist/es/motion/utils/use-visual-element.mjs","../node_modules/framer-motion/dist/es/render/dom/motion-proxy.mjs","../node_modules/framer-motion/dist/es/render/svg/lowercase-elements.mjs","../node_modules/framer-motion/dist/es/render/dom/utils/is-svg-component.mjs","../node_modules/framer-motion/dist/es/projection/styles/scale-correction.mjs","../node_modules/framer-motion/dist/es/render/html/utils/transform.mjs","../node_modules/framer-motion/dist/es/motion/utils/is-forced-motion-value.mjs","../node_modules/framer-motion/dist/es/value/utils/is-motion-value.mjs","../node_modules/framer-motion/dist/es/render/html/utils/build-transform.mjs","../node_modules/framer-motion/dist/es/render/dom/utils/is-css-variable.mjs","../node_modules/framer-motion/dist/es/render/dom/value-types/get-as-type.mjs","../node_modules/framer-motion/dist/es/utils/clamp.mjs","../node_modules/framer-motion/dist/es/value/types/numbers/index.mjs","../node_modules/framer-motion/dist/es/value/types/utils.mjs","../node_modules/framer-motion/dist/es/value/types/numbers/units.mjs","../node_modules/framer-motion/dist/es/render/dom/value-types/type-int.mjs","../node_modules/framer-motion/dist/es/render/dom/value-types/number.mjs","../node_modules/framer-motion/dist/es/render/html/utils/build-styles.mjs","../node_modules/framer-motion/dist/es/render/html/utils/create-render-state.mjs","../node_modules/framer-motion/dist/es/render/html/use-props.mjs","../node_modules/framer-motion/dist/es/motion/utils/valid-prop.mjs","../node_modules/framer-motion/dist/es/render/dom/utils/filter-props.mjs","../node_modules/framer-motion/dist/es/render/svg/utils/transform-origin.mjs","../node_modules/framer-motion/dist/es/render/svg/utils/path.mjs","../node_modules/framer-motion/dist/es/render/svg/utils/build-attrs.mjs","../node_modules/framer-motion/dist/es/render/svg/utils/create-render-state.mjs","../node_modules/framer-motion/dist/es/render/svg/utils/is-svg-tag.mjs","../node_modules/framer-motion/dist/es/render/svg/use-props.mjs","../node_modules/framer-motion/dist/es/render/dom/use-render.mjs","../node_modules/framer-motion/dist/es/render/html/utils/render.mjs","../node_modules/framer-motion/dist/es/render/svg/utils/camel-case-attrs.mjs","../node_modules/framer-motion/dist/es/render/svg/utils/render.mjs","../node_modules/framer-motion/dist/es/render/html/utils/scrape-motion-values.mjs","../node_modules/framer-motion/dist/es/render/svg/utils/scrape-motion-values.mjs","../node_modules/framer-motion/dist/es/render/utils/resolve-variants.mjs","../node_modules/framer-motion/dist/es/animation/utils/is-keyframes-target.mjs","../node_modules/framer-motion/dist/es/utils/resolve-value.mjs","../node_modules/framer-motion/dist/es/value/utils/resolve-motion-value.mjs","../node_modules/framer-motion/dist/es/motion/utils/use-visual-state.mjs","../node_modules/framer-motion/dist/es/render/svg/config-motion.mjs","../node_modules/framer-motion/dist/es/render/html/config-motion.mjs","../node_modules/framer-motion/dist/es/events/add-dom-event.mjs","../node_modules/framer-motion/dist/es/events/utils/is-primary-pointer.mjs","../node_modules/framer-motion/dist/es/events/event-info.mjs","../node_modules/framer-motion/dist/es/events/add-pointer-event.mjs","../node_modules/framer-motion/dist/es/utils/pipe.mjs","../node_modules/framer-motion/dist/es/gestures/drag/utils/lock.mjs","../node_modules/framer-motion/dist/es/motion/features/Feature.mjs","../node_modules/framer-motion/dist/es/gestures/hover.mjs","../node_modules/framer-motion/dist/es/gestures/utils/is-node-or-child.mjs","../node_modules/framer-motion/dist/es/gestures/press.mjs","../node_modules/framer-motion/dist/es/motion/features/viewport/observers.mjs","../node_modules/framer-motion/dist/es/motion/features/viewport/index.mjs","../node_modules/framer-motion/dist/es/motion/features/gestures.mjs","../node_modules/framer-motion/dist/es/gestures/focus.mjs","../node_modules/framer-motion/dist/es/utils/shallow-compare.mjs","../node_modules/framer-motion/dist/es/render/utils/resolve-dynamic-variants.mjs","../node_modules/framer-motion/dist/es/utils/time-conversion.mjs","../node_modules/framer-motion/dist/es/animation/utils/default-transitions.mjs","../node_modules/framer-motion/dist/es/animation/utils/transitions.mjs","../node_modules/framer-motion/dist/es/utils/use-instant-transition-state.mjs","../node_modules/framer-motion/dist/es/animation/animators/waapi/utils/get-final-keyframe.mjs","../node_modules/framer-motion/dist/es/frameloop/sync-time.mjs","../node_modules/framer-motion/dist/es/utils/is-zero-value-string.mjs","../node_modules/framer-motion/dist/es/utils/is-numerical-string.mjs","../node_modules/framer-motion/dist/es/render/dom/utils/css-variables-conversion.mjs","../node_modules/framer-motion/dist/es/render/dom/utils/unit-conversion.mjs","../node_modules/framer-motion/dist/es/render/dom/value-types/test.mjs","../node_modules/framer-motion/dist/es/render/dom/value-types/dimensions.mjs","../node_modules/framer-motion/dist/es/render/dom/value-types/type-auto.mjs","../node_modules/framer-motion/dist/es/render/utils/KeyframesResolver.mjs","../node_modules/framer-motion/dist/es/value/types/color/utils.mjs","../node_modules/framer-motion/dist/es/value/types/color/rgba.mjs","../node_modules/framer-motion/dist/es/value/types/color/hex.mjs","../node_modules/framer-motion/dist/es/value/types/color/hsla.mjs","../node_modules/framer-motion/dist/es/value/types/color/index.mjs","../node_modules/framer-motion/dist/es/value/types/complex/index.mjs","../node_modules/framer-motion/dist/es/value/types/complex/filter.mjs","../node_modules/framer-motion/dist/es/render/dom/value-types/defaults.mjs","../node_modules/framer-motion/dist/es/render/dom/value-types/animatable-none.mjs","../node_modules/framer-motion/dist/es/render/dom/DOMKeyframesResolver.mjs","../node_modules/framer-motion/dist/es/animation/utils/is-none.mjs","../node_modules/framer-motion/dist/es/render/html/utils/make-none-animatable.mjs","../node_modules/framer-motion/dist/es/animation/utils/is-animatable.mjs","../node_modules/framer-motion/dist/es/animation/animators/BaseAnimation.mjs","../node_modules/framer-motion/dist/es/animation/animators/utils/can-animate.mjs","../node_modules/framer-motion/dist/es/utils/velocity-per-second.mjs","../node_modules/framer-motion/dist/es/animation/generators/utils/velocity.mjs","../node_modules/framer-motion/dist/es/animation/generators/spring/find.mjs","../node_modules/framer-motion/dist/es/animation/generators/spring/index.mjs","../node_modules/framer-motion/dist/es/animation/generators/inertia.mjs","../node_modules/framer-motion/dist/es/easing/cubic-bezier.mjs","../node_modules/framer-motion/dist/es/easing/ease.mjs","../node_modules/framer-motion/dist/es/easing/modifiers/mirror.mjs","../node_modules/framer-motion/dist/es/easing/modifiers/reverse.mjs","../node_modules/framer-motion/dist/es/easing/circ.mjs","../node_modules/framer-motion/dist/es/easing/back.mjs","../node_modules/framer-motion/dist/es/easing/utils/map.mjs","../node_modules/framer-motion/dist/es/easing/anticipate.mjs","../node_modules/framer-motion/dist/es/utils/progress.mjs","../node_modules/framer-motion/dist/es/utils/mix/number.mjs","../node_modules/framer-motion/dist/es/utils/hsla-to-rgba.mjs","../node_modules/framer-motion/dist/es/utils/mix/color.mjs","../node_modules/framer-motion/dist/es/utils/mix/complex.mjs","../node_modules/framer-motion/dist/es/utils/mix/index.mjs","../node_modules/framer-motion/dist/es/utils/interpolate.mjs","../node_modules/framer-motion/dist/es/utils/offsets/default.mjs","../node_modules/framer-motion/dist/es/utils/offsets/fill.mjs","../node_modules/framer-motion/dist/es/animation/generators/keyframes.mjs","../node_modules/framer-motion/dist/es/easing/utils/is-easing-array.mjs","../node_modules/framer-motion/dist/es/utils/offsets/time.mjs","../node_modules/framer-motion/dist/es/animation/animators/drivers/driver-frameloop.mjs","../node_modules/framer-motion/dist/es/animation/animators/MainThreadAnimation.mjs","../node_modules/framer-motion/dist/es/animation/generators/utils/calc-duration.mjs","../node_modules/framer-motion/dist/es/easing/utils/is-bezier-definition.mjs","../node_modules/framer-motion/dist/es/animation/animators/waapi/easing.mjs","../node_modules/framer-motion/dist/es/animation/animators/AcceleratedAnimation.mjs","../node_modules/framer-motion/dist/es/utils/memo.mjs","../node_modules/framer-motion/dist/es/animation/animators/waapi/index.mjs","../node_modules/framer-motion/dist/es/animation/interfaces/motion-value.mjs","../node_modules/framer-motion/dist/es/value/use-will-change/is.mjs","../node_modules/framer-motion/dist/es/utils/array.mjs","../node_modules/framer-motion/dist/es/utils/subscription-manager.mjs","../node_modules/framer-motion/dist/es/value/index.mjs","../node_modules/framer-motion/dist/es/render/utils/setters.mjs","../node_modules/framer-motion/dist/es/animation/interfaces/visual-element-target.mjs","../node_modules/framer-motion/dist/es/animation/interfaces/visual-element-variant.mjs","../node_modules/framer-motion/dist/es/render/utils/animation-state.mjs","../node_modules/framer-motion/dist/es/animation/interfaces/visual-element.mjs","../node_modules/framer-motion/dist/es/motion/features/animation/exit.mjs","../node_modules/framer-motion/dist/es/motion/features/animations.mjs","../node_modules/framer-motion/dist/es/motion/features/animation/index.mjs","../node_modules/framer-motion/dist/es/utils/distance.mjs","../node_modules/framer-motion/dist/es/gestures/pan/PanSession.mjs","../node_modules/framer-motion/dist/es/projection/geometry/delta-calc.mjs","../node_modules/framer-motion/dist/es/gestures/drag/utils/constraints.mjs","../node_modules/framer-motion/dist/es/projection/geometry/models.mjs","../node_modules/framer-motion/dist/es/projection/utils/each-axis.mjs","../node_modules/framer-motion/dist/es/projection/geometry/conversion.mjs","../node_modules/framer-motion/dist/es/projection/utils/has-transform.mjs","../node_modules/framer-motion/dist/es/projection/geometry/delta-apply.mjs","../node_modules/framer-motion/dist/es/projection/utils/measure.mjs","../node_modules/framer-motion/dist/es/utils/get-context-window.mjs","../node_modules/framer-motion/dist/es/gestures/drag/VisualElementDragControls.mjs","../node_modules/framer-motion/dist/es/gestures/pan/index.mjs","../node_modules/framer-motion/dist/es/projection/node/state.mjs","../node_modules/framer-motion/dist/es/projection/styles/scale-border-radius.mjs","../node_modules/framer-motion/dist/es/projection/styles/scale-box-shadow.mjs","../node_modules/framer-motion/dist/es/motion/features/layout/MeasureLayout.mjs","../node_modules/framer-motion/dist/es/components/AnimatePresence/use-presence.mjs","../node_modules/framer-motion/dist/es/projection/animation/mix-values.mjs","../node_modules/framer-motion/dist/es/projection/geometry/copy.mjs","../node_modules/framer-motion/dist/es/projection/geometry/delta-remove.mjs","../node_modules/framer-motion/dist/es/projection/geometry/utils.mjs","../node_modules/framer-motion/dist/es/projection/shared/stack.mjs","../node_modules/framer-motion/dist/es/projection/styles/transform.mjs","../node_modules/framer-motion/dist/es/render/utils/compare-by-depth.mjs","../node_modules/framer-motion/dist/es/render/utils/flat-tree.mjs","../node_modules/framer-motion/dist/es/projection/node/create-projection-node.mjs","../node_modules/framer-motion/dist/es/debug/record.mjs","../node_modules/framer-motion/dist/es/render/dom/utils/is-svg-element.mjs","../node_modules/framer-motion/dist/es/utils/delay.mjs","../node_modules/framer-motion/dist/es/animation/interfaces/single-value.mjs","../node_modules/framer-motion/dist/es/projection/node/DocumentProjectionNode.mjs","../node_modules/framer-motion/dist/es/projection/node/HTMLProjectionNode.mjs","../node_modules/framer-motion/dist/es/motion/features/drag.mjs","../node_modules/framer-motion/dist/es/gestures/drag/index.mjs","../node_modules/framer-motion/dist/es/utils/reduced-motion/state.mjs","../node_modules/framer-motion/dist/es/render/store.mjs","../node_modules/framer-motion/dist/es/render/dom/value-types/find.mjs","../node_modules/framer-motion/dist/es/render/VisualElement.mjs","../node_modules/framer-motion/dist/es/utils/reduced-motion/index.mjs","../node_modules/framer-motion/dist/es/render/utils/motion-values.mjs","../node_modules/framer-motion/dist/es/render/dom/DOMVisualElement.mjs","../node_modules/framer-motion/dist/es/render/html/HTMLVisualElement.mjs","../node_modules/framer-motion/dist/es/render/svg/SVGVisualElement.mjs","../node_modules/framer-motion/dist/es/render/dom/create-visual-element.mjs","../node_modules/framer-motion/dist/es/render/dom/motion.mjs","../node_modules/framer-motion/dist/es/motion/features/layout.mjs","../node_modules/framer-motion/dist/es/render/dom/utils/create-config.mjs","../node_modules/framer-motion/dist/es/utils/GlobalConfig.mjs","../node_modules/framer-motion/dist/es/utils/errors.mjs","../node_modules/framer-motion/dist/es/utils/is-browser.mjs","../node_modules/framer-motion/dist/es/utils/noop.mjs","../node_modules/framer-motion/dist/es/utils/use-constant.mjs","../node_modules/framer-motion/dist/es/utils/use-isomorphic-effect.mjs"],"sourcesContent":["import { createContext } from 'react';\n\nconst LayoutGroupContext = createContext({});\n\nexport { LayoutGroupContext };\n","import { createContext } from 'react';\n\n/**\n * @public\n */\nconst MotionConfigContext = createContext({\n    transformPagePoint: (p) => p,\n    isStatic: false,\n    reducedMotion: \"never\",\n});\n\nexport { MotionConfigContext };\n","import { createContext } from 'react';\n\n/**\n * @public\n */\nconst PresenceContext = createContext(null);\n\nexport { PresenceContext };\n","class Queue {\n    constructor() {\n        this.order = [];\n        this.scheduled = new Set();\n    }\n    add(process) {\n        if (!this.scheduled.has(process)) {\n            this.scheduled.add(process);\n            this.order.push(process);\n            return true;\n        }\n    }\n    remove(process) {\n        const index = this.order.indexOf(process);\n        if (index !== -1) {\n            this.order.splice(index, 1);\n            this.scheduled.delete(process);\n        }\n    }\n    clear() {\n        this.order.length = 0;\n        this.scheduled.clear();\n    }\n}\nfunction createRenderStep(runNextFrame) {\n    /**\n     * We create and reuse two queues, one to queue jobs for the current frame\n     * and one for the next. We reuse to avoid triggering GC after x frames.\n     */\n    let thisFrame = new Queue();\n    let nextFrame = new Queue();\n    let numToRun = 0;\n    /**\n     * Track whether we're currently processing jobs in this step. This way\n     * we can decide whether to schedule new jobs for this frame or next.\n     */\n    let isProcessing = false;\n    let flushNextFrame = false;\n    /**\n     * A set of processes which were marked keepAlive when scheduled.\n     */\n    const toKeepAlive = new WeakSet();\n    const step = {\n        /**\n         * Schedule a process to run on the next frame.\n         */\n        schedule: (callback, keepAlive = false, immediate = false) => {\n            const addToCurrentFrame = immediate && isProcessing;\n            const queue = addToCurrentFrame ? thisFrame : nextFrame;\n            if (keepAlive)\n                toKeepAlive.add(callback);\n            if (queue.add(callback) && addToCurrentFrame && isProcessing) {\n                // If we're adding it to the currently running queue, update its measured size\n                numToRun = thisFrame.order.length;\n            }\n            return callback;\n        },\n        /**\n         * Cancel the provided callback from running on the next frame.\n         */\n        cancel: (callback) => {\n            nextFrame.remove(callback);\n            toKeepAlive.delete(callback);\n        },\n        /**\n         * Execute all schedule callbacks.\n         */\n        process: (frameData) => {\n            /**\n             * If we're already processing we've probably been triggered by a flushSync\n             * inside an existing process. Instead of executing, mark flushNextFrame\n             * as true and ensure we flush the following frame at the end of this one.\n             */\n            if (isProcessing) {\n                flushNextFrame = true;\n                return;\n            }\n            isProcessing = true;\n            [thisFrame, nextFrame] = [nextFrame, thisFrame];\n            // Clear the next frame queue\n            nextFrame.clear();\n            // Execute this frame\n            numToRun = thisFrame.order.length;\n            if (numToRun) {\n                for (let i = 0; i < numToRun; i++) {\n                    const callback = thisFrame.order[i];\n                    if (toKeepAlive.has(callback)) {\n                        step.schedule(callback);\n                        runNextFrame();\n                    }\n                    callback(frameData);\n                }\n            }\n            isProcessing = false;\n            if (flushNextFrame) {\n                flushNextFrame = false;\n                step.process(frameData);\n            }\n        },\n    };\n    return step;\n}\n\nexport { createRenderStep };\n","import { MotionGlobalConfig } from '../utils/GlobalConfig.mjs';\nimport { createRenderStep } from './render-step.mjs';\n\nconst stepsOrder = [\n    \"read\", // Read\n    \"resolveKeyframes\", // Write/Read/Write/Read\n    \"update\", // Compute\n    \"preRender\", // Compute\n    \"render\", // Write\n    \"postRender\", // Compute\n];\nconst maxElapsed = 40;\nfunction createRenderBatcher(scheduleNextBatch, allowKeepAlive) {\n    let runNextFrame = false;\n    let useDefaultElapsed = true;\n    const state = {\n        delta: 0,\n        timestamp: 0,\n        isProcessing: false,\n    };\n    const steps = stepsOrder.reduce((acc, key) => {\n        acc[key] = createRenderStep(() => (runNextFrame = true));\n        return acc;\n    }, {});\n    const processStep = (stepId) => {\n        steps[stepId].process(state);\n    };\n    const processBatch = () => {\n        const timestamp = MotionGlobalConfig.useManualTiming\n            ? state.timestamp\n            : performance.now();\n        runNextFrame = false;\n        state.delta = useDefaultElapsed\n            ? 1000 / 60\n            : Math.max(Math.min(timestamp - state.timestamp, maxElapsed), 1);\n        state.timestamp = timestamp;\n        state.isProcessing = true;\n        stepsOrder.forEach(processStep);\n        state.isProcessing = false;\n        if (runNextFrame && allowKeepAlive) {\n            useDefaultElapsed = false;\n            scheduleNextBatch(processBatch);\n        }\n    };\n    const wake = () => {\n        runNextFrame = true;\n        useDefaultElapsed = true;\n        if (!state.isProcessing) {\n            scheduleNextBatch(processBatch);\n        }\n    };\n    const schedule = stepsOrder.reduce((acc, key) => {\n        const step = steps[key];\n        acc[key] = (process, keepAlive = false, immediate = false) => {\n            if (!runNextFrame)\n                wake();\n            return step.schedule(process, keepAlive, immediate);\n        };\n        return acc;\n    }, {});\n    const cancel = (process) => stepsOrder.forEach((key) => steps[key].cancel(process));\n    return { schedule, cancel, state, steps };\n}\n\nexport { createRenderBatcher, stepsOrder };\n","import { noop } from '../utils/noop.mjs';\nimport { createRenderBatcher } from './batcher.mjs';\n\nconst { schedule: frame, cancel: cancelFrame, state: frameData, steps, } = createRenderBatcher(typeof requestAnimationFrame !== \"undefined\" ? requestAnimationFrame : noop, true);\n\nexport { cancelFrame, frame, frameData, steps };\n","import { createContext } from 'react';\n\nconst MotionContext = createContext({});\n\nexport { MotionContext };\n","import { createContext } from 'react';\n\nconst LazyContext = createContext({ strict: false });\n\nexport { LazyContext };\n","/**\n * Convert camelCase to dash-case properties.\n */\nconst camelToDash = (str) => str.replace(/([a-z])([A-Z])/gu, \"$1-$2\").toLowerCase();\n\nexport { camelToDash };\n","import { camelToDash } from '../../render/dom/utils/camel-to-dash.mjs';\n\nconst optimizedAppearDataId = \"framerAppearId\";\nconst optimizedAppearDataAttribute = \"data-\" + camelToDash(optimizedAppearDataId);\n\nexport { optimizedAppearDataAttribute, optimizedAppearDataId };\n","import { createRenderBatcher } from './batcher.mjs';\n\nconst { schedule: microtask, cancel: cancelMicrotask } = createRenderBatcher(queueMicrotask, false);\n\nexport { cancelMicrotask, microtask };\n","function isRefObject(ref) {\n    return (ref &&\n        typeof ref === \"object\" &&\n        Object.prototype.hasOwnProperty.call(ref, \"current\"));\n}\n\nexport { isRefObject };\n","import { useCallback } from 'react';\nimport { isRefObject } from '../../utils/is-ref-object.mjs';\n\n/**\n * Creates a ref function that, when called, hydrates the provided\n * external ref and VisualElement.\n */\nfunction useMotionRef(visualState, visualElement, externalRef) {\n    return useCallback((instance) => {\n        instance && visualState.mount && visualState.mount(instance);\n        if (visualElement) {\n            instance\n                ? visualElement.mount(instance)\n                : visualElement.unmount();\n        }\n        if (externalRef) {\n            if (typeof externalRef === \"function\") {\n                externalRef(instance);\n            }\n            else if (isRefObject(externalRef)) {\n                externalRef.current = instance;\n            }\n        }\n    }, \n    /**\n     * Only pass a new ref callback to React if we've received a visual element\n     * factory. Otherwise we'll be mounting/remounting every time externalRef\n     * or other dependencies change.\n     */\n    [visualElement]);\n}\n\nexport { useMotionRef };\n","/**\n * Decides if the supplied variable is variant label\n */\nfunction isVariantLabel(v) {\n    return typeof v === \"string\" || Array.isArray(v);\n}\n\nexport { isVariantLabel };\n","function isAnimationControls(v) {\n    return (v !== null &&\n        typeof v === \"object\" &&\n        typeof v.start === \"function\");\n}\n\nexport { isAnimationControls };\n","const variantPriorityOrder = [\n    \"animate\",\n    \"whileInView\",\n    \"whileFocus\",\n    \"whileHover\",\n    \"whileTap\",\n    \"whileDrag\",\n    \"exit\",\n];\nconst variantProps = [\"initial\", ...variantPriorityOrder];\n\nexport { variantPriorityOrder, variantProps };\n","import { isAnimationControls } from '../../animation/utils/is-animation-controls.mjs';\nimport { isVariantLabel } from './is-variant-label.mjs';\nimport { variantProps } from './variant-props.mjs';\n\nfunction isControllingVariants(props) {\n    return (isAnimationControls(props.animate) ||\n        variantProps.some((name) => isVariantLabel(props[name])));\n}\nfunction isVariantNode(props) {\n    return Boolean(isControllingVariants(props) || props.variants);\n}\n\nexport { isControllingVariants, isVariantNode };\n","import { useContext, useMemo } from 'react';\nimport { MotionContext } from './index.mjs';\nimport { getCurrentTreeVariants } from './utils.mjs';\n\nfunction useCreateMotionContext(props) {\n    const { initial, animate } = getCurrentTreeVariants(props, useContext(MotionContext));\n    return useMemo(() => ({ initial, animate }), [variantLabelsAsDependency(initial), variantLabelsAsDependency(animate)]);\n}\nfunction variantLabelsAsDependency(prop) {\n    return Array.isArray(prop) ? prop.join(\" \") : prop;\n}\n\nexport { useCreateMotionContext };\n","import { isVariantLabel } from '../../render/utils/is-variant-label.mjs';\nimport { isControllingVariants } from '../../render/utils/is-controlling-variants.mjs';\n\nfunction getCurrentTreeVariants(props, context) {\n    if (isControllingVariants(props)) {\n        const { initial, animate } = props;\n        return {\n            initial: initial === false || isVariantLabel(initial)\n                ? initial\n                : undefined,\n            animate: isVariantLabel(animate) ? animate : undefined,\n        };\n    }\n    return props.inherit !== false ? context : {};\n}\n\nexport { getCurrentTreeVariants };\n","const featureProps = {\n    animation: [\n        \"animate\",\n        \"variants\",\n        \"whileHover\",\n        \"whileTap\",\n        \"exit\",\n        \"whileInView\",\n        \"whileFocus\",\n        \"whileDrag\",\n    ],\n    exit: [\"exit\"],\n    drag: [\"drag\", \"dragControls\"],\n    focus: [\"whileFocus\"],\n    hover: [\"whileHover\", \"onHoverStart\", \"onHoverEnd\"],\n    tap: [\"whileTap\", \"onTap\", \"onTapStart\", \"onTapCancel\"],\n    pan: [\"onPan\", \"onPanStart\", \"onPanSessionStart\", \"onPanEnd\"],\n    inView: [\"whileInView\", \"onViewportEnter\", \"onViewportLeave\"],\n    layout: [\"layout\", \"layoutId\"],\n};\nconst featureDefinitions = {};\nfor (const key in featureProps) {\n    featureDefinitions[key] = {\n        isEnabled: (props) => featureProps[key].some((name) => !!props[name]),\n    };\n}\n\nexport { featureDefinitions };\n","import { createContext } from 'react';\n\n/**\n * Internal, exported only for usage in Framer\n */\nconst SwitchLayoutGroupContext = createContext({});\n\nexport { SwitchLayoutGroupContext };\n","const motionComponentSymbol = Symbol.for(\"motionComponentSymbol\");\n\nexport { motionComponentSymbol };\n","import { jsxs, jsx } from 'react/jsx-runtime';\nimport { forwardRef, useContext } from 'react';\nimport { MotionConfigContext } from '../context/MotionConfigContext.mjs';\nimport { MotionContext } from '../context/MotionContext/index.mjs';\nimport { useVisualElement } from './utils/use-visual-element.mjs';\nimport { useMotionRef } from './utils/use-motion-ref.mjs';\nimport { useCreateMotionContext } from '../context/MotionContext/create.mjs';\nimport { loadFeatures } from './features/load-features.mjs';\nimport { isBrowser } from '../utils/is-browser.mjs';\nimport { LayoutGroupContext } from '../context/LayoutGroupContext.mjs';\nimport { LazyContext } from '../context/LazyContext.mjs';\nimport { SwitchLayoutGroupContext } from '../context/SwitchLayoutGroupContext.mjs';\nimport { motionComponentSymbol } from './utils/symbol.mjs';\n\n/**\n * Create a `motion` component.\n *\n * This function accepts a Component argument, which can be either a string (ie \"div\"\n * for `motion.div`), or an actual React component.\n *\n * Alongside this is a config option which provides a way of rendering the provided\n * component \"offline\", or outside the React render cycle.\n */\nfunction createMotionComponent({ preloadedFeatures, createVisualElement, useRender, useVisualState, Component, }) {\n    preloadedFeatures && loadFeatures(preloadedFeatures);\n    function MotionComponent(props, externalRef) {\n        /**\n         * If we need to measure the element we load this functionality in a\n         * separate class component in order to gain access to getSnapshotBeforeUpdate.\n         */\n        let MeasureLayout;\n        const configAndProps = {\n            ...useContext(MotionConfigContext),\n            ...props,\n            layoutId: useLayoutId(props),\n        };\n        const { isStatic } = configAndProps;\n        const context = useCreateMotionContext(props);\n        const visualState = useVisualState(props, isStatic);\n        if (!isStatic && isBrowser) {\n            /**\n             * Create a VisualElement for this component. A VisualElement provides a common\n             * interface to renderer-specific APIs (ie DOM/Three.js etc) as well as\n             * providing a way of rendering to these APIs outside of the React render loop\n             * for more performant animations and interactions\n             */\n            context.visualElement = useVisualElement(Component, visualState, configAndProps, createVisualElement);\n            /**\n             * Load Motion gesture and animation features. These are rendered as renderless\n             * components so each feature can optionally make use of React lifecycle methods.\n             */\n            const initialLayoutGroupConfig = useContext(SwitchLayoutGroupContext);\n            const isStrict = useContext(LazyContext).strict;\n            if (context.visualElement) {\n                MeasureLayout = context.visualElement.loadFeatures(\n                // Note: Pass the full new combined props to correctly re-render dynamic feature components.\n                configAndProps, isStrict, preloadedFeatures, initialLayoutGroupConfig);\n            }\n        }\n        /**\n         * The mount order and hierarchy is specific to ensure our element ref\n         * is hydrated by the time features fire their effects.\n         */\n        return (jsxs(MotionContext.Provider, { value: context, children: [MeasureLayout && context.visualElement ? (jsx(MeasureLayout, { visualElement: context.visualElement, ...configAndProps })) : null, useRender(Component, props, useMotionRef(visualState, context.visualElement, externalRef), visualState, isStatic, context.visualElement)] }));\n    }\n    const ForwardRefComponent = forwardRef(MotionComponent);\n    ForwardRefComponent[motionComponentSymbol] = Component;\n    return ForwardRefComponent;\n}\nfunction useLayoutId({ layoutId }) {\n    const layoutGroupId = useContext(LayoutGroupContext).id;\n    return layoutGroupId && layoutId !== undefined\n        ? layoutGroupId + \"-\" + layoutId\n        : layoutId;\n}\n\nexport { createMotionComponent };\n","import { featureDefinitions } from './definitions.mjs';\n\nfunction loadFeatures(features) {\n    for (const key in features) {\n        featureDefinitions[key] = {\n            ...featureDefinitions[key],\n            ...features[key],\n        };\n    }\n}\n\nexport { loadFeatures };\n","import { useContext, useRef, useInsertionEffect, useEffect } from 'react';\nimport { PresenceContext } from '../../context/PresenceContext.mjs';\nimport { MotionContext } from '../../context/MotionContext/index.mjs';\nimport { useIsomorphicLayoutEffect } from '../../utils/use-isomorphic-effect.mjs';\nimport { LazyContext } from '../../context/LazyContext.mjs';\nimport { MotionConfigContext } from '../../context/MotionConfigContext.mjs';\nimport { optimizedAppearDataAttribute } from '../../animation/optimized-appear/data-id.mjs';\nimport { microtask } from '../../frameloop/microtask.mjs';\n\nfunction useVisualElement(Component, visualState, props, createVisualElement) {\n    const { visualElement: parent } = useContext(MotionContext);\n    const lazyContext = useContext(LazyContext);\n    const presenceContext = useContext(PresenceContext);\n    const reducedMotionConfig = useContext(MotionConfigContext).reducedMotion;\n    const visualElementRef = useRef();\n    /**\n     * If we haven't preloaded a renderer, check to see if we have one lazy-loaded\n     */\n    createVisualElement = createVisualElement || lazyContext.renderer;\n    if (!visualElementRef.current && createVisualElement) {\n        visualElementRef.current = createVisualElement(Component, {\n            visualState,\n            parent,\n            props,\n            presenceContext,\n            blockInitialAnimation: presenceContext\n                ? presenceContext.initial === false\n                : false,\n            reducedMotionConfig,\n        });\n    }\n    const visualElement = visualElementRef.current;\n    useInsertionEffect(() => {\n        visualElement && visualElement.update(props, presenceContext);\n    });\n    /**\n     * Cache this value as we want to know whether HandoffAppearAnimations\n     * was present on initial render - it will be deleted after this.\n     */\n    const wantsHandoff = useRef(Boolean(props[optimizedAppearDataAttribute] &&\n        !window.HandoffComplete));\n    useIsomorphicLayoutEffect(() => {\n        if (!visualElement)\n            return;\n        microtask.postRender(visualElement.render);\n        /**\n         * Ideally this function would always run in a useEffect.\n         *\n         * However, if we have optimised appear animations to handoff from,\n         * it needs to happen synchronously to ensure there's no flash of\n         * incorrect styles in the event of a hydration error.\n         *\n         * So if we detect a situtation where optimised appear animations\n         * are running, we use useLayoutEffect to trigger animations.\n         */\n        if (wantsHandoff.current && visualElement.animationState) {\n            visualElement.animationState.animateChanges();\n        }\n    });\n    useEffect(() => {\n        if (!visualElement)\n            return;\n        visualElement.updateFeatures();\n        if (!wantsHandoff.current && visualElement.animationState) {\n            visualElement.animationState.animateChanges();\n        }\n        if (wantsHandoff.current) {\n            wantsHandoff.current = false;\n            // This ensures all future calls to animateChanges() will run in useEffect\n            window.HandoffComplete = true;\n        }\n    });\n    return visualElement;\n}\n\nexport { useVisualElement };\n","import { createMotionComponent } from '../../motion/index.mjs';\n\n/**\n * Convert any React component into a `motion` component. The provided component\n * **must** use `React.forwardRef` to the underlying DOM component you want to animate.\n *\n * ```jsx\n * const Component = React.forwardRef((props, ref) => {\n *   return <div ref={ref} />\n * })\n *\n * const MotionComponent = motion(Component)\n * ```\n *\n * @public\n */\nfunction createMotionProxy(createConfig) {\n    function custom(Component, customMotionComponentConfig = {}) {\n        return createMotionComponent(createConfig(Component, customMotionComponentConfig));\n    }\n    if (typeof Proxy === \"undefined\") {\n        return custom;\n    }\n    /**\n     * A cache of generated `motion` components, e.g `motion.div`, `motion.input` etc.\n     * Rather than generating them anew every render.\n     */\n    const componentCache = new Map();\n    return new Proxy(custom, {\n        /**\n         * Called when `motion` is referenced with a prop: `motion.div`, `motion.input` etc.\n         * The prop name is passed through as `key` and we can use that to generate a `motion`\n         * DOM component with that name.\n         */\n        get: (_target, key) => {\n            /**\n             * If this element doesn't exist in the component cache, create it and cache.\n             */\n            if (!componentCache.has(key)) {\n                componentCache.set(key, custom(key));\n            }\n            return componentCache.get(key);\n        },\n    });\n}\n\nexport { createMotionProxy };\n","/**\n * We keep these listed seperately as we use the lowercase tag names as part\n * of the runtime bundle to detect SVG components\n */\nconst lowercaseSVGElements = [\n    \"animate\",\n    \"circle\",\n    \"defs\",\n    \"desc\",\n    \"ellipse\",\n    \"g\",\n    \"image\",\n    \"line\",\n    \"filter\",\n    \"marker\",\n    \"mask\",\n    \"metadata\",\n    \"path\",\n    \"pattern\",\n    \"polygon\",\n    \"polyline\",\n    \"rect\",\n    \"stop\",\n    \"switch\",\n    \"symbol\",\n    \"svg\",\n    \"text\",\n    \"tspan\",\n    \"use\",\n    \"view\",\n];\n\nexport { lowercaseSVGElements };\n","import { lowercaseSVGElements } from '../../svg/lowercase-elements.mjs';\n\nfunction isSVGComponent(Component) {\n    if (\n    /**\n     * If it's not a string, it's a custom React component. Currently we only support\n     * HTML custom React components.\n     */\n    typeof Component !== \"string\" ||\n        /**\n         * If it contains a dash, the element is a custom HTML webcomponent.\n         */\n        Component.includes(\"-\")) {\n        return false;\n    }\n    else if (\n    /**\n     * If it's in our list of lowercase SVG tags, it's an SVG component\n     */\n    lowercaseSVGElements.indexOf(Component) > -1 ||\n        /**\n         * If it contains a capital letter, it's an SVG component\n         */\n        /[A-Z]/u.test(Component)) {\n        return true;\n    }\n    return false;\n}\n\nexport { isSVGComponent };\n","const scaleCorrectors = {};\nfunction addScaleCorrector(correctors) {\n    Object.assign(scaleCorrectors, correctors);\n}\n\nexport { addScaleCorrector, scaleCorrectors };\n","/**\n * Generate a list of every possible transform key.\n */\nconst transformPropOrder = [\n    \"transformPerspective\",\n    \"x\",\n    \"y\",\n    \"z\",\n    \"translateX\",\n    \"translateY\",\n    \"translateZ\",\n    \"scale\",\n    \"scaleX\",\n    \"scaleY\",\n    \"rotate\",\n    \"rotateX\",\n    \"rotateY\",\n    \"rotateZ\",\n    \"skew\",\n    \"skewX\",\n    \"skewY\",\n];\n/**\n * A quick lookup for transform props.\n */\nconst transformProps = new Set(transformPropOrder);\n\nexport { transformPropOrder, transformProps };\n","import { scaleCorrectors } from '../../projection/styles/scale-correction.mjs';\nimport { transformProps } from '../../render/html/utils/transform.mjs';\n\nfunction isForcedMotionValue(key, { layout, layoutId }) {\n    return (transformProps.has(key) ||\n        key.startsWith(\"origin\") ||\n        ((layout || layoutId !== undefined) &&\n            (!!scaleCorrectors[key] || key === \"opacity\")));\n}\n\nexport { isForcedMotionValue };\n","const isMotionValue = (value) => Boolean(value && value.getVelocity);\n\nexport { isMotionValue };\n","import { transformPropOrder } from './transform.mjs';\n\nconst translateAlias = {\n    x: \"translateX\",\n    y: \"translateY\",\n    z: \"translateZ\",\n    transformPerspective: \"perspective\",\n};\nconst numTransforms = transformPropOrder.length;\n/**\n * Build a CSS transform style from individual x/y/scale etc properties.\n *\n * This outputs with a default order of transforms/scales/rotations, this can be customised by\n * providing a transformTemplate function.\n */\nfunction buildTransform(transform, { enableHardwareAcceleration = true, allowTransformNone = true, }, transformIsDefault, transformTemplate) {\n    // The transform string we're going to build into.\n    let transformString = \"\";\n    /**\n     * Loop over all possible transforms in order, adding the ones that\n     * are present to the transform string.\n     */\n    for (let i = 0; i < numTransforms; i++) {\n        const key = transformPropOrder[i];\n        if (transform[key] !== undefined) {\n            const transformName = translateAlias[key] || key;\n            transformString += `${transformName}(${transform[key]}) `;\n        }\n    }\n    if (enableHardwareAcceleration && !transform.z) {\n        transformString += \"translateZ(0)\";\n    }\n    transformString = transformString.trim();\n    // If we have a custom `transform` template, pass our transform values and\n    // generated transformString to that before returning\n    if (transformTemplate) {\n        transformString = transformTemplate(transform, transformIsDefault ? \"\" : transformString);\n    }\n    else if (allowTransformNone && transformIsDefault) {\n        transformString = \"none\";\n    }\n    return transformString;\n}\n\nexport { buildTransform };\n","const checkStringStartsWith = (token) => (key) => typeof key === \"string\" && key.startsWith(token);\nconst isCSSVariableName = checkStringStartsWith(\"--\");\nconst startsAsVariableToken = checkStringStartsWith(\"var(--\");\nconst isCSSVariableToken = (value) => {\n    const startsWithToken = startsAsVariableToken(value);\n    if (!startsWithToken)\n        return false;\n    // Ensure any comments are stripped from the value as this can harm performance of the regex.\n    return singleCssVariableRegex.test(value.split(\"/*\")[0].trim());\n};\nconst singleCssVariableRegex = /var\\(--(?:[\\w-]+\\s*|[\\w-]+\\s*,(?:\\s*[^)(\\s]|\\s*\\((?:[^)(]|\\([^)(]*\\))*\\))+\\s*)\\)$/iu;\n\nexport { isCSSVariableName, isCSSVariableToken };\n","/**\n * Provided a value and a ValueType, returns the value as that value type.\n */\nconst getValueAsType = (value, type) => {\n    return type && typeof value === \"number\"\n        ? type.transform(value)\n        : value;\n};\n\nexport { getValueAsType };\n","const clamp = (min, max, v) => {\n    if (v > max)\n        return max;\n    if (v < min)\n        return min;\n    return v;\n};\n\nexport { clamp };\n","import { clamp } from '../../../utils/clamp.mjs';\n\nconst number = {\n    test: (v) => typeof v === \"number\",\n    parse: parseFloat,\n    transform: (v) => v,\n};\nconst alpha = {\n    ...number,\n    transform: (v) => clamp(0, 1, v),\n};\nconst scale = {\n    ...number,\n    default: 1,\n};\n\nexport { alpha, number, scale };\n","/**\n * TODO: When we move from string as a source of truth to data models\n * everything in this folder should probably be referred to as models vs types\n */\n// If this number is a decimal, make it just five decimal places\n// to avoid exponents\nconst sanitize = (v) => Math.round(v * 100000) / 100000;\nconst floatRegex = /-?(?:\\d+(?:\\.\\d+)?|\\.\\d+)/gu;\nconst colorRegex = /(?:#[\\da-f]{3,8}|(?:rgb|hsl)a?\\((?:-?[\\d.]+%?[,\\s]+){2}-?[\\d.]+%?\\s*(?:[,/]\\s*)?(?:\\b\\d+(?:\\.\\d+)?|\\.\\d+)?%?\\))/giu;\nconst singleColorRegex = /^(?:#[\\da-f]{3,8}|(?:rgb|hsl)a?\\((?:-?[\\d.]+%?[,\\s]+){2}-?[\\d.]+%?\\s*(?:[,/]\\s*)?(?:\\b\\d+(?:\\.\\d+)?|\\.\\d+)?%?\\))$/iu;\nfunction isString(v) {\n    return typeof v === \"string\";\n}\n\nexport { colorRegex, floatRegex, isString, sanitize, singleColorRegex };\n","import { isString } from '../utils.mjs';\n\nconst createUnitType = (unit) => ({\n    test: (v) => isString(v) && v.endsWith(unit) && v.split(\" \").length === 1,\n    parse: parseFloat,\n    transform: (v) => `${v}${unit}`,\n});\nconst degrees = createUnitType(\"deg\");\nconst percent = createUnitType(\"%\");\nconst px = createUnitType(\"px\");\nconst vh = createUnitType(\"vh\");\nconst vw = createUnitType(\"vw\");\nconst progressPercentage = {\n    ...percent,\n    parse: (v) => percent.parse(v) / 100,\n    transform: (v) => percent.transform(v * 100),\n};\n\nexport { degrees, percent, progressPercentage, px, vh, vw };\n","import { number } from '../../../value/types/numbers/index.mjs';\n\nconst int = {\n    ...number,\n    transform: Math.round,\n};\n\nexport { int };\n","import { scale, alpha } from '../../../value/types/numbers/index.mjs';\nimport { px, degrees, progressPercentage } from '../../../value/types/numbers/units.mjs';\nimport { int } from './type-int.mjs';\n\nconst numberValueTypes = {\n    // Border props\n    borderWidth: px,\n    borderTopWidth: px,\n    borderRightWidth: px,\n    borderBottomWidth: px,\n    borderLeftWidth: px,\n    borderRadius: px,\n    radius: px,\n    borderTopLeftRadius: px,\n    borderTopRightRadius: px,\n    borderBottomRightRadius: px,\n    borderBottomLeftRadius: px,\n    // Positioning props\n    width: px,\n    maxWidth: px,\n    height: px,\n    maxHeight: px,\n    size: px,\n    top: px,\n    right: px,\n    bottom: px,\n    left: px,\n    // Spacing props\n    padding: px,\n    paddingTop: px,\n    paddingRight: px,\n    paddingBottom: px,\n    paddingLeft: px,\n    margin: px,\n    marginTop: px,\n    marginRight: px,\n    marginBottom: px,\n    marginLeft: px,\n    // Transform props\n    rotate: degrees,\n    rotateX: degrees,\n    rotateY: degrees,\n    rotateZ: degrees,\n    scale,\n    scaleX: scale,\n    scaleY: scale,\n    scaleZ: scale,\n    skew: degrees,\n    skewX: degrees,\n    skewY: degrees,\n    distance: px,\n    translateX: px,\n    translateY: px,\n    translateZ: px,\n    x: px,\n    y: px,\n    z: px,\n    perspective: px,\n    transformPerspective: px,\n    opacity: alpha,\n    originX: progressPercentage,\n    originY: progressPercentage,\n    originZ: px,\n    // Misc\n    zIndex: int,\n    backgroundPositionX: px,\n    backgroundPositionY: px,\n    // SVG\n    fillOpacity: alpha,\n    strokeOpacity: alpha,\n    numOctaves: int,\n};\n\nexport { numberValueTypes };\n","import { buildTransform } from './build-transform.mjs';\nimport { isCSSVariableName } from '../../dom/utils/is-css-variable.mjs';\nimport { transformProps } from './transform.mjs';\nimport { getValueAsType } from '../../dom/value-types/get-as-type.mjs';\nimport { numberValueTypes } from '../../dom/value-types/number.mjs';\n\nfunction buildHTMLStyles(state, latestValues, options, transformTemplate) {\n    const { style, vars, transform, transformOrigin } = state;\n    // Track whether we encounter any transform or transformOrigin values.\n    let hasTransform = false;\n    let hasTransformOrigin = false;\n    // Does the calculated transform essentially equal \"none\"?\n    let transformIsNone = true;\n    /**\n     * Loop over all our latest animated values and decide whether to handle them\n     * as a style or CSS variable.\n     *\n     * Transforms and transform origins are kept seperately for further processing.\n     */\n    for (const key in latestValues) {\n        const value = latestValues[key];\n        /**\n         * If this is a CSS variable we don't do any further processing.\n         */\n        if (isCSSVariableName(key)) {\n            vars[key] = value;\n            continue;\n        }\n        // Convert the value to its default value type, ie 0 -> \"0px\"\n        const valueType = numberValueTypes[key];\n        const valueAsType = getValueAsType(value, valueType);\n        if (transformProps.has(key)) {\n            // If this is a transform, flag to enable further transform processing\n            hasTransform = true;\n            transform[key] = valueAsType;\n            // If we already know we have a non-default transform, early return\n            if (!transformIsNone)\n                continue;\n            // Otherwise check to see if this is a default transform\n            if (value !== (valueType.default || 0))\n                transformIsNone = false;\n        }\n        else if (key.startsWith(\"origin\")) {\n            // If this is a transform origin, flag and enable further transform-origin processing\n            hasTransformOrigin = true;\n            transformOrigin[key] = valueAsType;\n        }\n        else {\n            style[key] = valueAsType;\n        }\n    }\n    if (!latestValues.transform) {\n        if (hasTransform || transformTemplate) {\n            style.transform = buildTransform(state.transform, options, transformIsNone, transformTemplate);\n        }\n        else if (style.transform) {\n            /**\n             * If we have previously created a transform but currently don't have any,\n             * reset transform style to none.\n             */\n            style.transform = \"none\";\n        }\n    }\n    /**\n     * Build a transformOrigin style. Uses the same defaults as the browser for\n     * undefined origins.\n     */\n    if (hasTransformOrigin) {\n        const { originX = \"50%\", originY = \"50%\", originZ = 0, } = transformOrigin;\n        style.transformOrigin = `${originX} ${originY} ${originZ}`;\n    }\n}\n\nexport { buildHTMLStyles };\n","const createHtmlRenderState = () => ({\n    style: {},\n    transform: {},\n    transformOrigin: {},\n    vars: {},\n});\n\nexport { createHtmlRenderState };\n","import { useMemo } from 'react';\nimport { isForcedMotionValue } from '../../motion/utils/is-forced-motion-value.mjs';\nimport { isMotionValue } from '../../value/utils/is-motion-value.mjs';\nimport { buildHTMLStyles } from './utils/build-styles.mjs';\nimport { createHtmlRenderState } from './utils/create-render-state.mjs';\n\nfunction copyRawValuesOnly(target, source, props) {\n    for (const key in source) {\n        if (!isMotionValue(source[key]) && !isForcedMotionValue(key, props)) {\n            target[key] = source[key];\n        }\n    }\n}\nfunction useInitialMotionValues({ transformTemplate }, visualState, isStatic) {\n    return useMemo(() => {\n        const state = createHtmlRenderState();\n        buildHTMLStyles(state, visualState, { enableHardwareAcceleration: !isStatic }, transformTemplate);\n        return Object.assign({}, state.vars, state.style);\n    }, [visualState]);\n}\nfunction useStyle(props, visualState, isStatic) {\n    const styleProp = props.style || {};\n    const style = {};\n    /**\n     * Copy non-Motion Values straight into style\n     */\n    copyRawValuesOnly(style, styleProp, props);\n    Object.assign(style, useInitialMotionValues(props, visualState, isStatic));\n    return style;\n}\nfunction useHTMLProps(props, visualState, isStatic) {\n    // The `any` isn't ideal but it is the type of createElement props argument\n    const htmlProps = {};\n    const style = useStyle(props, visualState, isStatic);\n    if (props.drag && props.dragListener !== false) {\n        // Disable the ghost element when a user drags\n        htmlProps.draggable = false;\n        // Disable text selection\n        style.userSelect =\n            style.WebkitUserSelect =\n                style.WebkitTouchCallout =\n                    \"none\";\n        // Disable scrolling on the draggable direction\n        style.touchAction =\n            props.drag === true\n                ? \"none\"\n                : `pan-${props.drag === \"x\" ? \"y\" : \"x\"}`;\n    }\n    if (props.tabIndex === undefined &&\n        (props.onTap || props.onTapStart || props.whileTap)) {\n        htmlProps.tabIndex = 0;\n    }\n    htmlProps.style = style;\n    return htmlProps;\n}\n\nexport { copyRawValuesOnly, useHTMLProps };\n","/**\n * A list of all valid MotionProps.\n *\n * @privateRemarks\n * This doesn't throw if a `MotionProp` name is missing - it should.\n */\nconst validMotionProps = new Set([\n    \"animate\",\n    \"exit\",\n    \"variants\",\n    \"initial\",\n    \"style\",\n    \"values\",\n    \"variants\",\n    \"transition\",\n    \"transformTemplate\",\n    \"custom\",\n    \"inherit\",\n    \"onBeforeLayoutMeasure\",\n    \"onAnimationStart\",\n    \"onAnimationComplete\",\n    \"onUpdate\",\n    \"onDragStart\",\n    \"onDrag\",\n    \"onDragEnd\",\n    \"onMeasureDragConstraints\",\n    \"onDirectionLock\",\n    \"onDragTransitionEnd\",\n    \"_dragX\",\n    \"_dragY\",\n    \"onHoverStart\",\n    \"onHoverEnd\",\n    \"onViewportEnter\",\n    \"onViewportLeave\",\n    \"globalTapTarget\",\n    \"ignoreStrict\",\n    \"viewport\",\n]);\n/**\n * Check whether a prop name is a valid `MotionProp` key.\n *\n * @param key - Name of the property to check\n * @returns `true` is key is a valid `MotionProp`.\n *\n * @public\n */\nfunction isValidMotionProp(key) {\n    return (key.startsWith(\"while\") ||\n        (key.startsWith(\"drag\") && key !== \"draggable\") ||\n        key.startsWith(\"layout\") ||\n        key.startsWith(\"onTap\") ||\n        key.startsWith(\"onPan\") ||\n        key.startsWith(\"onLayout\") ||\n        validMotionProps.has(key));\n}\n\nexport { isValidMotionProp };\n","import { isValidMotionProp } from '../../../motion/utils/valid-prop.mjs';\n\nlet shouldForward = (key) => !isValidMotionProp(key);\nfunction loadExternalIsValidProp(isValidProp) {\n    if (!isValidProp)\n        return;\n    // Explicitly filter our events\n    shouldForward = (key) => key.startsWith(\"on\") ? !isValidMotionProp(key) : isValidProp(key);\n}\n/**\n * Emotion and Styled Components both allow users to pass through arbitrary props to their components\n * to dynamically generate CSS. They both use the `@emotion/is-prop-valid` package to determine which\n * of these should be passed to the underlying DOM node.\n *\n * However, when styling a Motion component `styled(motion.div)`, both packages pass through *all* props\n * as it's seen as an arbitrary component rather than a DOM node. Motion only allows arbitrary props\n * passed through the `custom` prop so it doesn't *need* the payload or computational overhead of\n * `@emotion/is-prop-valid`, however to fix this problem we need to use it.\n *\n * By making it an optionalDependency we can offer this functionality only in the situations where it's\n * actually required.\n */\ntry {\n    /**\n     * We attempt to import this package but require won't be defined in esm environments, in that case\n     * isPropValid will have to be provided via `MotionContext`. In a 6.0.0 this should probably be removed\n     * in favour of explicit injection.\n     */\n    loadExternalIsValidProp(require(\"@emotion/is-prop-valid\").default);\n}\ncatch (_a) {\n    // We don't need to actually do anything here - the fallback is the existing `isPropValid`.\n}\nfunction filterProps(props, isDom, forwardMotionProps) {\n    const filteredProps = {};\n    for (const key in props) {\n        /**\n         * values is considered a valid prop by Emotion, so if it's present\n         * this will be rendered out to the DOM unless explicitly filtered.\n         *\n         * We check the type as it could be used with the `feColorMatrix`\n         * element, which we support.\n         */\n        if (key === \"values\" && typeof props.values === \"object\")\n            continue;\n        if (shouldForward(key) ||\n            (forwardMotionProps === true && isValidMotionProp(key)) ||\n            (!isDom && !isValidMotionProp(key)) ||\n            // If trying to use native HTML drag events, forward drag listeners\n            (props[\"draggable\"] &&\n                key.startsWith(\"onDrag\"))) {\n            filteredProps[key] =\n                props[key];\n        }\n    }\n    return filteredProps;\n}\n\nexport { filterProps, loadExternalIsValidProp };\n","import { px } from '../../../value/types/numbers/units.mjs';\n\nfunction calcOrigin(origin, offset, size) {\n    return typeof origin === \"string\"\n        ? origin\n        : px.transform(offset + size * origin);\n}\n/**\n * The SVG transform origin defaults are different to CSS and is less intuitive,\n * so we use the measured dimensions of the SVG to reconcile these.\n */\nfunction calcSVGTransformOrigin(dimensions, originX, originY) {\n    const pxOriginX = calcOrigin(originX, dimensions.x, dimensions.width);\n    const pxOriginY = calcOrigin(originY, dimensions.y, dimensions.height);\n    return `${pxOriginX} ${pxOriginY}`;\n}\n\nexport { calcSVGTransformOrigin };\n","import { px } from '../../../value/types/numbers/units.mjs';\n\nconst dashKeys = {\n    offset: \"stroke-dashoffset\",\n    array: \"stroke-dasharray\",\n};\nconst camelKeys = {\n    offset: \"strokeDashoffset\",\n    array: \"strokeDasharray\",\n};\n/**\n * Build SVG path properties. Uses the path's measured length to convert\n * our custom pathLength, pathSpacing and pathOffset into stroke-dashoffset\n * and stroke-dasharray attributes.\n *\n * This function is mutative to reduce per-frame GC.\n */\nfunction buildSVGPath(attrs, length, spacing = 1, offset = 0, useDashCase = true) {\n    // Normalise path length by setting SVG attribute pathLength to 1\n    attrs.pathLength = 1;\n    // We use dash case when setting attributes directly to the DOM node and camel case\n    // when defining props on a React component.\n    const keys = useDashCase ? dashKeys : camelKeys;\n    // Build the dash offset\n    attrs[keys.offset] = px.transform(-offset);\n    // Build the dash array\n    const pathLength = px.transform(length);\n    const pathSpacing = px.transform(spacing);\n    attrs[keys.array] = `${pathLength} ${pathSpacing}`;\n}\n\nexport { buildSVGPath };\n","import { buildHTMLStyles } from '../../html/utils/build-styles.mjs';\nimport { calcSVGTransformOrigin } from './transform-origin.mjs';\nimport { buildSVGPath } from './path.mjs';\n\n/**\n * Build SVG visual attrbutes, like cx and style.transform\n */\nfunction buildSVGAttrs(state, { attrX, attrY, attrScale, originX, originY, pathLength, pathSpacing = 1, pathOffset = 0, \n// This is object creation, which we try to avoid per-frame.\n...latest }, options, isSVGTag, transformTemplate) {\n    buildHTMLStyles(state, latest, options, transformTemplate);\n    /**\n     * For svg tags we just want to make sure viewBox is animatable and treat all the styles\n     * as normal HTML tags.\n     */\n    if (isSVGTag) {\n        if (state.style.viewBox) {\n            state.attrs.viewBox = state.style.viewBox;\n        }\n        return;\n    }\n    state.attrs = state.style;\n    state.style = {};\n    const { attrs, style, dimensions } = state;\n    /**\n     * However, we apply transforms as CSS transforms. So if we detect a transform we take it from attrs\n     * and copy it into style.\n     */\n    if (attrs.transform) {\n        if (dimensions)\n            style.transform = attrs.transform;\n        delete attrs.transform;\n    }\n    // Parse transformOrigin\n    if (dimensions &&\n        (originX !== undefined || originY !== undefined || style.transform)) {\n        style.transformOrigin = calcSVGTransformOrigin(dimensions, originX !== undefined ? originX : 0.5, originY !== undefined ? originY : 0.5);\n    }\n    // Render attrX/attrY/attrScale as attributes\n    if (attrX !== undefined)\n        attrs.x = attrX;\n    if (attrY !== undefined)\n        attrs.y = attrY;\n    if (attrScale !== undefined)\n        attrs.scale = attrScale;\n    // Build SVG path if one has been defined\n    if (pathLength !== undefined) {\n        buildSVGPath(attrs, pathLength, pathSpacing, pathOffset, false);\n    }\n}\n\nexport { buildSVGAttrs };\n","import { createHtmlRenderState } from '../../html/utils/create-render-state.mjs';\n\nconst createSvgRenderState = () => ({\n    ...createHtmlRenderState(),\n    attrs: {},\n});\n\nexport { createSvgRenderState };\n","const isSVGTag = (tag) => typeof tag === \"string\" && tag.toLowerCase() === \"svg\";\n\nexport { isSVGTag };\n","import { useMemo } from 'react';\nimport { copyRawValuesOnly } from '../html/use-props.mjs';\nimport { buildSVGAttrs } from './utils/build-attrs.mjs';\nimport { createSvgRenderState } from './utils/create-render-state.mjs';\nimport { isSVGTag } from './utils/is-svg-tag.mjs';\n\nfunction useSVGProps(props, visualState, _isStatic, Component) {\n    const visualProps = useMemo(() => {\n        const state = createSvgRenderState();\n        buildSVGAttrs(state, visualState, { enableHardwareAcceleration: false }, isSVGTag(Component), props.transformTemplate);\n        return {\n            ...state.attrs,\n            style: { ...state.style },\n        };\n    }, [visualState]);\n    if (props.style) {\n        const rawStyles = {};\n        copyRawValuesOnly(rawStyles, props.style, props);\n        visualProps.style = { ...rawStyles, ...visualProps.style };\n    }\n    return visualProps;\n}\n\nexport { useSVGProps };\n","import { Fragment, useMemo, createElement } from 'react';\nimport { useHTMLProps } from '../html/use-props.mjs';\nimport { filterProps } from './utils/filter-props.mjs';\nimport { isSVGComponent } from './utils/is-svg-component.mjs';\nimport { useSVGProps } from '../svg/use-props.mjs';\nimport { isMotionValue } from '../../value/utils/is-motion-value.mjs';\n\nfunction createUseRender(forwardMotionProps = false) {\n    const useRender = (Component, props, ref, { latestValues }, isStatic) => {\n        const useVisualProps = isSVGComponent(Component)\n            ? useSVGProps\n            : useHTMLProps;\n        const visualProps = useVisualProps(props, latestValues, isStatic, Component);\n        const filteredProps = filterProps(props, typeof Component === \"string\", forwardMotionProps);\n        const elementProps = Component !== Fragment\n            ? { ...filteredProps, ...visualProps, ref }\n            : {};\n        /**\n         * If component has been handed a motion value as its child,\n         * memoise its initial value and render that. Subsequent updates\n         * will be handled by the onChange handler\n         */\n        const { children } = props;\n        const renderedChildren = useMemo(() => (isMotionValue(children) ? children.get() : children), [children]);\n        return createElement(Component, {\n            ...elementProps,\n            children: renderedChildren,\n        });\n    };\n    return useRender;\n}\n\nexport { createUseRender };\n","function renderHTML(element, { style, vars }, styleProp, projection) {\n    Object.assign(element.style, style, projection && projection.getProjectionStyles(styleProp));\n    // Loop over any CSS variables and assign those.\n    for (const key in vars) {\n        element.style.setProperty(key, vars[key]);\n    }\n}\n\nexport { renderHTML };\n","/**\n * A set of attribute names that are always read/written as camel case.\n */\nconst camelCaseAttributes = new Set([\n    \"baseFrequency\",\n    \"diffuseConstant\",\n    \"kernelMatrix\",\n    \"kernelUnitLength\",\n    \"keySplines\",\n    \"keyTimes\",\n    \"limitingConeAngle\",\n    \"markerHeight\",\n    \"markerWidth\",\n    \"numOctaves\",\n    \"targetX\",\n    \"targetY\",\n    \"surfaceScale\",\n    \"specularConstant\",\n    \"specularExponent\",\n    \"stdDeviation\",\n    \"tableValues\",\n    \"viewBox\",\n    \"gradientTransform\",\n    \"pathLength\",\n    \"startOffset\",\n    \"textLength\",\n    \"lengthAdjust\",\n]);\n\nexport { camelCaseAttributes };\n","import { camelToDash } from '../../dom/utils/camel-to-dash.mjs';\nimport { renderHTML } from '../../html/utils/render.mjs';\nimport { camelCaseAttributes } from './camel-case-attrs.mjs';\n\nfunction renderSVG(element, renderState, _styleProp, projection) {\n    renderHTML(element, renderState, undefined, projection);\n    for (const key in renderState.attrs) {\n        element.setAttribute(!camelCaseAttributes.has(key) ? camelToDash(key) : key, renderState.attrs[key]);\n    }\n}\n\nexport { renderSVG };\n","import { isForcedMotionValue } from '../../../motion/utils/is-forced-motion-value.mjs';\nimport { isMotionValue } from '../../../value/utils/is-motion-value.mjs';\n\nfunction scrapeMotionValuesFromProps(props, prevProps, visualElement) {\n    var _a;\n    const { style } = props;\n    const newValues = {};\n    for (const key in style) {\n        if (isMotionValue(style[key]) ||\n            (prevProps.style &&\n                isMotionValue(prevProps.style[key])) ||\n            isForcedMotionValue(key, props) ||\n            ((_a = visualElement === null || visualElement === void 0 ? void 0 : visualElement.getValue(key)) === null || _a === void 0 ? void 0 : _a.liveStyle) !== undefined) {\n            newValues[key] = style[key];\n        }\n    }\n    return newValues;\n}\n\nexport { scrapeMotionValuesFromProps };\n","import { isMotionValue } from '../../../value/utils/is-motion-value.mjs';\nimport { scrapeMotionValuesFromProps as scrapeMotionValuesFromProps$1 } from '../../html/utils/scrape-motion-values.mjs';\nimport { transformPropOrder } from '../../html/utils/transform.mjs';\n\nfunction scrapeMotionValuesFromProps(props, prevProps, visualElement) {\n    const newValues = scrapeMotionValuesFromProps$1(props, prevProps, visualElement);\n    for (const key in props) {\n        if (isMotionValue(props[key]) ||\n            isMotionValue(prevProps[key])) {\n            const targetKey = transformPropOrder.indexOf(key) !== -1\n                ? \"attr\" + key.charAt(0).toUpperCase() + key.substring(1)\n                : key;\n            newValues[targetKey] = props[key];\n        }\n    }\n    return newValues;\n}\n\nexport { scrapeMotionValuesFromProps };\n","function resolveVariantFromProps(props, definition, custom, currentValues = {}, currentVelocity = {}) {\n    /**\n     * If the variant definition is a function, resolve.\n     */\n    if (typeof definition === \"function\") {\n        definition = definition(custom !== undefined ? custom : props.custom, currentValues, currentVelocity);\n    }\n    /**\n     * If the variant definition is a variant label, or\n     * the function returned a variant label, resolve.\n     */\n    if (typeof definition === \"string\") {\n        definition = props.variants && props.variants[definition];\n    }\n    /**\n     * At this point we've resolved both functions and variant labels,\n     * but the resolved variant label might itself have been a function.\n     * If so, resolve. This can only have returned a valid target object.\n     */\n    if (typeof definition === \"function\") {\n        definition = definition(custom !== undefined ? custom : props.custom, currentValues, currentVelocity);\n    }\n    return definition;\n}\n\nexport { resolveVariantFromProps };\n","const isKeyframesTarget = (v) => {\n    return Array.isArray(v);\n};\n\nexport { isKeyframesTarget };\n","import { isKeyframesTarget } from '../animation/utils/is-keyframes-target.mjs';\n\nconst isCustomValue = (v) => {\n    return Boolean(v && typeof v === \"object\" && v.mix && v.toValue);\n};\nconst resolveFinalValueInKeyframes = (v) => {\n    // TODO maybe throw if v.length - 1 is placeholder token?\n    return isKeyframesTarget(v) ? v[v.length - 1] || 0 : v;\n};\n\nexport { isCustomValue, resolveFinalValueInKeyframes };\n","import { isCustomValue } from '../../utils/resolve-value.mjs';\nimport { isMotionValue } from './is-motion-value.mjs';\n\n/**\n * If the provided value is a MotionValue, this returns the actual value, otherwise just the value itself\n *\n * TODO: Remove and move to library\n */\nfunction resolveMotionValue(value) {\n    const unwrappedValue = isMotionValue(value) ? value.get() : value;\n    return isCustomValue(unwrappedValue)\n        ? unwrappedValue.toValue()\n        : unwrappedValue;\n}\n\nexport { resolveMotionValue };\n","import { useContext } from 'react';\nimport { isAnimationControls } from '../../animation/utils/is-animation-controls.mjs';\nimport { PresenceContext } from '../../context/PresenceContext.mjs';\nimport { resolveVariantFromProps } from '../../render/utils/resolve-variants.mjs';\nimport { useConstant } from '../../utils/use-constant.mjs';\nimport { resolveMotionValue } from '../../value/utils/resolve-motion-value.mjs';\nimport { MotionContext } from '../../context/MotionContext/index.mjs';\nimport { isControllingVariants, isVariantNode } from '../../render/utils/is-controlling-variants.mjs';\n\nfunction makeState({ scrapeMotionValuesFromProps, createRenderState, onMount, }, props, context, presenceContext) {\n    const state = {\n        latestValues: makeLatestValues(props, context, presenceContext, scrapeMotionValuesFromProps),\n        renderState: createRenderState(),\n    };\n    if (onMount) {\n        state.mount = (instance) => onMount(props, instance, state);\n    }\n    return state;\n}\nconst makeUseVisualState = (config) => (props, isStatic) => {\n    const context = useContext(MotionContext);\n    const presenceContext = useContext(PresenceContext);\n    const make = () => makeState(config, props, context, presenceContext);\n    return isStatic ? make() : useConstant(make);\n};\nfunction makeLatestValues(props, context, presenceContext, scrapeMotionValues) {\n    const values = {};\n    const motionValues = scrapeMotionValues(props, {});\n    for (const key in motionValues) {\n        values[key] = resolveMotionValue(motionValues[key]);\n    }\n    let { initial, animate } = props;\n    const isControllingVariants$1 = isControllingVariants(props);\n    const isVariantNode$1 = isVariantNode(props);\n    if (context &&\n        isVariantNode$1 &&\n        !isControllingVariants$1 &&\n        props.inherit !== false) {\n        if (initial === undefined)\n            initial = context.initial;\n        if (animate === undefined)\n            animate = context.animate;\n    }\n    let isInitialAnimationBlocked = presenceContext\n        ? presenceContext.initial === false\n        : false;\n    isInitialAnimationBlocked = isInitialAnimationBlocked || initial === false;\n    const variantToSet = isInitialAnimationBlocked ? animate : initial;\n    if (variantToSet &&\n        typeof variantToSet !== \"boolean\" &&\n        !isAnimationControls(variantToSet)) {\n        const list = Array.isArray(variantToSet) ? variantToSet : [variantToSet];\n        list.forEach((definition) => {\n            const resolved = resolveVariantFromProps(props, definition);\n            if (!resolved)\n                return;\n            const { transitionEnd, transition, ...target } = resolved;\n            for (const key in target) {\n                let valueTarget = target[key];\n                if (Array.isArray(valueTarget)) {\n                    /**\n                     * Take final keyframe if the initial animation is blocked because\n                     * we want to initialise at the end of that blocked animation.\n                     */\n                    const index = isInitialAnimationBlocked\n                        ? valueTarget.length - 1\n                        : 0;\n                    valueTarget = valueTarget[index];\n                }\n                if (valueTarget !== null) {\n                    values[key] = valueTarget;\n                }\n            }\n            for (const key in transitionEnd)\n                values[key] = transitionEnd[key];\n        });\n    }\n    return values;\n}\n\nexport { makeUseVisualState };\n","import { renderSVG } from './utils/render.mjs';\nimport { scrapeMotionValuesFromProps } from './utils/scrape-motion-values.mjs';\nimport { makeUseVisualState } from '../../motion/utils/use-visual-state.mjs';\nimport { createSvgRenderState } from './utils/create-render-state.mjs';\nimport { buildSVGAttrs } from './utils/build-attrs.mjs';\nimport { isSVGTag } from './utils/is-svg-tag.mjs';\nimport { frame } from '../../frameloop/frame.mjs';\n\nconst svgMotionConfig = {\n    useVisualState: makeUseVisualState({\n        scrapeMotionValuesFromProps: scrapeMotionValuesFromProps,\n        createRenderState: createSvgRenderState,\n        onMount: (props, instance, { renderState, latestValues }) => {\n            frame.read(() => {\n                try {\n                    renderState.dimensions =\n                        typeof instance.getBBox ===\n                            \"function\"\n                            ? instance.getBBox()\n                            : instance.getBoundingClientRect();\n                }\n                catch (e) {\n                    // Most likely trying to measure an unrendered element under Firefox\n                    renderState.dimensions = {\n                        x: 0,\n                        y: 0,\n                        width: 0,\n                        height: 0,\n                    };\n                }\n            });\n            frame.render(() => {\n                buildSVGAttrs(renderState, latestValues, { enableHardwareAcceleration: false }, isSVGTag(instance.tagName), props.transformTemplate);\n                renderSVG(instance, renderState);\n            });\n        },\n    }),\n};\n\nexport { svgMotionConfig };\n","import { makeUseVisualState } from '../../motion/utils/use-visual-state.mjs';\nimport { scrapeMotionValuesFromProps } from './utils/scrape-motion-values.mjs';\nimport { createHtmlRenderState } from './utils/create-render-state.mjs';\n\nconst htmlMotionConfig = {\n    useVisualState: makeUseVisualState({\n        scrapeMotionValuesFromProps,\n        createRenderState: createHtmlRenderState,\n    }),\n};\n\nexport { htmlMotionConfig };\n","function addDomEvent(target, eventName, handler, options = { passive: true }) {\n    target.addEventListener(eventName, handler, options);\n    return () => target.removeEventListener(eventName, handler);\n}\n\nexport { addDomEvent };\n","const isPrimaryPointer = (event) => {\n    if (event.pointerType === \"mouse\") {\n        return typeof event.button !== \"number\" || event.button <= 0;\n    }\n    else {\n        /**\n         * isPrimary is true for all mice buttons, whereas every touch point\n         * is regarded as its own input. So subsequent concurrent touch points\n         * will be false.\n         *\n         * Specifically match against false here as incomplete versions of\n         * PointerEvents in very old browser might have it set as undefined.\n         */\n        return event.isPrimary !== false;\n    }\n};\n\nexport { isPrimaryPointer };\n","import { isPrimaryPointer } from './utils/is-primary-pointer.mjs';\n\nfunction extractEventInfo(event, pointType = \"page\") {\n    return {\n        point: {\n            x: event[`${pointType}X`],\n            y: event[`${pointType}Y`],\n        },\n    };\n}\nconst addPointerInfo = (handler) => {\n    return (event) => isPrimaryPointer(event) && handler(event, extractEventInfo(event));\n};\n\nexport { addPointerInfo, extractEventInfo };\n","import { addDomEvent } from './add-dom-event.mjs';\nimport { addPointerInfo } from './event-info.mjs';\n\nfunction addPointerEvent(target, eventName, handler, options) {\n    return addDomEvent(target, eventName, addPointerInfo(handler), options);\n}\n\nexport { addPointerEvent };\n","/**\n * Pipe\n * Compose other transformers to run linearily\n * pipe(min(20), max(40))\n * @param  {...functions} transformers\n * @return {function}\n */\nconst combineFunctions = (a, b) => (v) => b(a(v));\nconst pipe = (...transformers) => transformers.reduce(combineFunctions);\n\nexport { pipe };\n","function createLock(name) {\n    let lock = null;\n    return () => {\n        const openLock = () => {\n            lock = null;\n        };\n        if (lock === null) {\n            lock = name;\n            return openLock;\n        }\n        return false;\n    };\n}\nconst globalHorizontalLock = createLock(\"dragHorizontal\");\nconst globalVerticalLock = createLock(\"dragVertical\");\nfunction getGlobalLock(drag) {\n    let lock = false;\n    if (drag === \"y\") {\n        lock = globalVerticalLock();\n    }\n    else if (drag === \"x\") {\n        lock = globalHorizontalLock();\n    }\n    else {\n        const openHorizontal = globalHorizontalLock();\n        const openVertical = globalVerticalLock();\n        if (openHorizontal && openVertical) {\n            lock = () => {\n                openHorizontal();\n                openVertical();\n            };\n        }\n        else {\n            // Release the locks because we don't use them\n            if (openHorizontal)\n                openHorizontal();\n            if (openVertical)\n                openVertical();\n        }\n    }\n    return lock;\n}\nfunction isDragActive() {\n    // Check the gesture lock - if we get it, it means no drag gesture is active\n    // and we can safely fire the tap gesture.\n    const openGestureLock = getGlobalLock(true);\n    if (!openGestureLock)\n        return true;\n    openGestureLock();\n    return false;\n}\n\nexport { createLock, getGlobalLock, isDragActive };\n","class Feature {\n    constructor(node) {\n        this.isMounted = false;\n        this.node = node;\n    }\n    update() { }\n}\n\nexport { Feature };\n","import { addPointerEvent } from '../events/add-pointer-event.mjs';\nimport { pipe } from '../utils/pipe.mjs';\nimport { isDragActive } from './drag/utils/lock.mjs';\nimport { Feature } from '../motion/features/Feature.mjs';\n\nfunction addHoverEvent(node, isActive) {\n    const eventName = isActive ? \"pointerenter\" : \"pointerleave\";\n    const callbackName = isActive ? \"onHoverStart\" : \"onHoverEnd\";\n    const handleEvent = (event, info) => {\n        if (event.pointerType === \"touch\" || isDragActive())\n            return;\n        const props = node.getProps();\n        if (node.animationState && props.whileHover) {\n            node.animationState.setActive(\"whileHover\", isActive);\n        }\n        const callback = props[callbackName];\n        if (callback)\n            callback(event, info);\n    };\n    return addPointerEvent(node.current, eventName, handleEvent, {\n        passive: !node.getProps()[callbackName],\n    });\n}\nclass HoverGesture extends Feature {\n    mount() {\n        this.unmount = pipe(addHoverEvent(this.node, true), addHoverEvent(this.node, false));\n    }\n    unmount() { }\n}\n\nexport { HoverGesture };\n","/**\n * Recursively traverse up the tree to check whether the provided child node\n * is the parent or a descendant of it.\n *\n * @param parent - Element to find\n * @param child - Element to test against parent\n */\nconst isNodeOrChild = (parent, child) => {\n    if (!child) {\n        return false;\n    }\n    else if (parent === child) {\n        return true;\n    }\n    else {\n        return isNodeOrChild(parent, child.parentElement);\n    }\n};\n\nexport { isNodeOrChild };\n","import { extractEventInfo } from '../events/event-info.mjs';\nimport { addDomEvent } from '../events/add-dom-event.mjs';\nimport { addPointerEvent } from '../events/add-pointer-event.mjs';\nimport { Feature } from '../motion/features/Feature.mjs';\nimport { pipe } from '../utils/pipe.mjs';\nimport { isDragActive } from './drag/utils/lock.mjs';\nimport { isNodeOrChild } from './utils/is-node-or-child.mjs';\nimport { noop } from '../utils/noop.mjs';\n\nfunction fireSyntheticPointerEvent(name, handler) {\n    if (!handler)\n        return;\n    const syntheticPointerEvent = new PointerEvent(\"pointer\" + name);\n    handler(syntheticPointerEvent, extractEventInfo(syntheticPointerEvent));\n}\nclass PressGesture extends Feature {\n    constructor() {\n        super(...arguments);\n        this.removeStartListeners = noop;\n        this.removeEndListeners = noop;\n        this.removeAccessibleListeners = noop;\n        this.startPointerPress = (startEvent, startInfo) => {\n            if (this.isPressing)\n                return;\n            this.removeEndListeners();\n            const props = this.node.getProps();\n            const endPointerPress = (endEvent, endInfo) => {\n                if (!this.checkPressEnd())\n                    return;\n                const { onTap, onTapCancel, globalTapTarget } = this.node.getProps();\n                /**\n                 * We only count this as a tap gesture if the event.target is the same\n                 * as, or a child of, this component's element\n                 */\n                !globalTapTarget &&\n                    !isNodeOrChild(this.node.current, endEvent.target)\n                    ? onTapCancel && onTapCancel(endEvent, endInfo)\n                    : onTap && onTap(endEvent, endInfo);\n            };\n            const removePointerUpListener = addPointerEvent(window, \"pointerup\", endPointerPress, {\n                passive: !(props.onTap || props[\"onPointerUp\"]),\n            });\n            const removePointerCancelListener = addPointerEvent(window, \"pointercancel\", (cancelEvent, cancelInfo) => this.cancelPress(cancelEvent, cancelInfo), {\n                passive: !(props.onTapCancel ||\n                    props[\"onPointerCancel\"]),\n            });\n            this.removeEndListeners = pipe(removePointerUpListener, removePointerCancelListener);\n            this.startPress(startEvent, startInfo);\n        };\n        this.startAccessiblePress = () => {\n            const handleKeydown = (keydownEvent) => {\n                if (keydownEvent.key !== \"Enter\" || this.isPressing)\n                    return;\n                const handleKeyup = (keyupEvent) => {\n                    if (keyupEvent.key !== \"Enter\" || !this.checkPressEnd())\n                        return;\n                    fireSyntheticPointerEvent(\"up\", (event, info) => {\n                        const { onTap } = this.node.getProps();\n                        if (onTap)\n                            onTap(event, info);\n                    });\n                };\n                this.removeEndListeners();\n                this.removeEndListeners = addDomEvent(this.node.current, \"keyup\", handleKeyup);\n                fireSyntheticPointerEvent(\"down\", (event, info) => {\n                    this.startPress(event, info);\n                });\n            };\n            const removeKeydownListener = addDomEvent(this.node.current, \"keydown\", handleKeydown);\n            const handleBlur = () => {\n                if (!this.isPressing)\n                    return;\n                fireSyntheticPointerEvent(\"cancel\", (cancelEvent, cancelInfo) => this.cancelPress(cancelEvent, cancelInfo));\n            };\n            const removeBlurListener = addDomEvent(this.node.current, \"blur\", handleBlur);\n            this.removeAccessibleListeners = pipe(removeKeydownListener, removeBlurListener);\n        };\n    }\n    startPress(event, info) {\n        this.isPressing = true;\n        const { onTapStart, whileTap } = this.node.getProps();\n        /**\n         * Ensure we trigger animations before firing event callback\n         */\n        if (whileTap && this.node.animationState) {\n            this.node.animationState.setActive(\"whileTap\", true);\n        }\n        if (onTapStart) {\n            onTapStart(event, info);\n        }\n    }\n    checkPressEnd() {\n        this.removeEndListeners();\n        this.isPressing = false;\n        const props = this.node.getProps();\n        if (props.whileTap && this.node.animationState) {\n            this.node.animationState.setActive(\"whileTap\", false);\n        }\n        return !isDragActive();\n    }\n    cancelPress(event, info) {\n        if (!this.checkPressEnd())\n            return;\n        const { onTapCancel } = this.node.getProps();\n        if (onTapCancel)\n            onTapCancel(event, info);\n    }\n    mount() {\n        const props = this.node.getProps();\n        const removePointerListener = addPointerEvent(props.globalTapTarget ? window : this.node.current, \"pointerdown\", this.startPointerPress, {\n            passive: !(props.onTapStart ||\n                props[\"onPointerStart\"]),\n        });\n        const removeFocusListener = addDomEvent(this.node.current, \"focus\", this.startAccessiblePress);\n        this.removeStartListeners = pipe(removePointerListener, removeFocusListener);\n    }\n    unmount() {\n        this.removeStartListeners();\n        this.removeEndListeners();\n        this.removeAccessibleListeners();\n    }\n}\n\nexport { PressGesture };\n","/**\n * Map an IntersectionHandler callback to an element. We only ever make one handler for one\n * element, so even though these handlers might all be triggered by different\n * observers, we can keep them in the same map.\n */\nconst observerCallbacks = new WeakMap();\n/**\n * Multiple observers can be created for multiple element/document roots. Each with\n * different settings. So here we store dictionaries of observers to each root,\n * using serialised settings (threshold/margin) as lookup keys.\n */\nconst observers = new WeakMap();\nconst fireObserverCallback = (entry) => {\n    const callback = observerCallbacks.get(entry.target);\n    callback && callback(entry);\n};\nconst fireAllObserverCallbacks = (entries) => {\n    entries.forEach(fireObserverCallback);\n};\nfunction initIntersectionObserver({ root, ...options }) {\n    const lookupRoot = root || document;\n    /**\n     * If we don't have an observer lookup map for this root, create one.\n     */\n    if (!observers.has(lookupRoot)) {\n        observers.set(lookupRoot, {});\n    }\n    const rootObservers = observers.get(lookupRoot);\n    const key = JSON.stringify(options);\n    /**\n     * If we don't have an observer for this combination of root and settings,\n     * create one.\n     */\n    if (!rootObservers[key]) {\n        rootObservers[key] = new IntersectionObserver(fireAllObserverCallbacks, { root, ...options });\n    }\n    return rootObservers[key];\n}\nfunction observeIntersection(element, options, callback) {\n    const rootInteresectionObserver = initIntersectionObserver(options);\n    observerCallbacks.set(element, callback);\n    rootInteresectionObserver.observe(element);\n    return () => {\n        observerCallbacks.delete(element);\n        rootInteresectionObserver.unobserve(element);\n    };\n}\n\nexport { observeIntersection };\n","import { Feature } from '../Feature.mjs';\nimport { observeIntersection } from './observers.mjs';\n\nconst thresholdNames = {\n    some: 0,\n    all: 1,\n};\nclass InViewFeature extends Feature {\n    constructor() {\n        super(...arguments);\n        this.hasEnteredView = false;\n        this.isInView = false;\n    }\n    startObserver() {\n        this.unmount();\n        const { viewport = {} } = this.node.getProps();\n        const { root, margin: rootMargin, amount = \"some\", once } = viewport;\n        const options = {\n            root: root ? root.current : undefined,\n            rootMargin,\n            threshold: typeof amount === \"number\" ? amount : thresholdNames[amount],\n        };\n        const onIntersectionUpdate = (entry) => {\n            const { isIntersecting } = entry;\n            /**\n             * If there's been no change in the viewport state, early return.\n             */\n            if (this.isInView === isIntersecting)\n                return;\n            this.isInView = isIntersecting;\n            /**\n             * Handle hasEnteredView. If this is only meant to run once, and\n             * element isn't visible, early return. Otherwise set hasEnteredView to true.\n             */\n            if (once && !isIntersecting && this.hasEnteredView) {\n                return;\n            }\n            else if (isIntersecting) {\n                this.hasEnteredView = true;\n            }\n            if (this.node.animationState) {\n                this.node.animationState.setActive(\"whileInView\", isIntersecting);\n            }\n            /**\n             * Use the latest committed props rather than the ones in scope\n             * when this observer is created\n             */\n            const { onViewportEnter, onViewportLeave } = this.node.getProps();\n            const callback = isIntersecting ? onViewportEnter : onViewportLeave;\n            callback && callback(entry);\n        };\n        return observeIntersection(this.node.current, options, onIntersectionUpdate);\n    }\n    mount() {\n        this.startObserver();\n    }\n    update() {\n        if (typeof IntersectionObserver === \"undefined\")\n            return;\n        const { props, prevProps } = this.node;\n        const hasOptionsChanged = [\"amount\", \"margin\", \"root\"].some(hasViewportOptionChanged(props, prevProps));\n        if (hasOptionsChanged) {\n            this.startObserver();\n        }\n    }\n    unmount() { }\n}\nfunction hasViewportOptionChanged({ viewport = {} }, { viewport: prevViewport = {} } = {}) {\n    return (name) => viewport[name] !== prevViewport[name];\n}\n\nexport { InViewFeature };\n","import { HoverGesture } from '../../gestures/hover.mjs';\nimport { FocusGesture } from '../../gestures/focus.mjs';\nimport { PressGesture } from '../../gestures/press.mjs';\nimport { InViewFeature } from './viewport/index.mjs';\n\nconst gestureAnimations = {\n    inView: {\n        Feature: InViewFeature,\n    },\n    tap: {\n        Feature: PressGesture,\n    },\n    focus: {\n        Feature: FocusGesture,\n    },\n    hover: {\n        Feature: HoverGesture,\n    },\n};\n\nexport { gestureAnimations };\n","import { addDomEvent } from '../events/add-dom-event.mjs';\nimport { Feature } from '../motion/features/Feature.mjs';\nimport { pipe } from '../utils/pipe.mjs';\n\nclass FocusGesture extends Feature {\n    constructor() {\n        super(...arguments);\n        this.isActive = false;\n    }\n    onFocus() {\n        let isFocusVisible = false;\n        /**\n         * If this element doesn't match focus-visible then don't\n         * apply whileHover. But, if matches throws that focus-visible\n         * is not a valid selector then in that browser outline styles will be applied\n         * to the element by default and we want to match that behaviour with whileFocus.\n         */\n        try {\n            isFocusVisible = this.node.current.matches(\":focus-visible\");\n        }\n        catch (e) {\n            isFocusVisible = true;\n        }\n        if (!isFocusVisible || !this.node.animationState)\n            return;\n        this.node.animationState.setActive(\"whileFocus\", true);\n        this.isActive = true;\n    }\n    onBlur() {\n        if (!this.isActive || !this.node.animationState)\n            return;\n        this.node.animationState.setActive(\"whileFocus\", false);\n        this.isActive = false;\n    }\n    mount() {\n        this.unmount = pipe(addDomEvent(this.node.current, \"focus\", () => this.onFocus()), addDomEvent(this.node.current, \"blur\", () => this.onBlur()));\n    }\n    unmount() { }\n}\n\nexport { FocusGesture };\n","function shallowCompare(next, prev) {\n    if (!Array.isArray(prev))\n        return false;\n    const prevLength = prev.length;\n    if (prevLength !== next.length)\n        return false;\n    for (let i = 0; i < prevLength; i++) {\n        if (prev[i] !== next[i])\n            return false;\n    }\n    return true;\n}\n\nexport { shallowCompare };\n","import { resolveVariantFromProps } from './resolve-variants.mjs';\n\n/**\n * Creates an object containing the latest state of every MotionValue on a VisualElement\n */\nfunction getCurrent(visualElement) {\n    const current = {};\n    visualElement.values.forEach((value, key) => (current[key] = value.get()));\n    return current;\n}\n/**\n * Creates an object containing the latest velocity of every MotionValue on a VisualElement\n */\nfunction getVelocity(visualElement) {\n    const velocity = {};\n    visualElement.values.forEach((value, key) => (velocity[key] = value.getVelocity()));\n    return velocity;\n}\nfunction resolveVariant(visualElement, definition, custom) {\n    const props = visualElement.getProps();\n    return resolveVariantFromProps(props, definition, custom !== undefined ? custom : props.custom, getCurrent(visualElement), getVelocity(visualElement));\n}\n\nexport { resolveVariant };\n","/**\n * Converts seconds to milliseconds\n *\n * @param seconds - Time in seconds.\n * @return milliseconds - Converted time in milliseconds.\n */\nconst secondsToMilliseconds = (seconds) => seconds * 1000;\nconst millisecondsToSeconds = (milliseconds) => milliseconds / 1000;\n\nexport { millisecondsToSeconds, secondsToMilliseconds };\n","import { transformProps } from '../../render/html/utils/transform.mjs';\n\nconst underDampedSpring = {\n    type: \"spring\",\n    stiffness: 500,\n    damping: 25,\n    restSpeed: 10,\n};\nconst criticallyDampedSpring = (target) => ({\n    type: \"spring\",\n    stiffness: 550,\n    damping: target === 0 ? 2 * Math.sqrt(550) : 30,\n    restSpeed: 10,\n});\nconst keyframesTransition = {\n    type: \"keyframes\",\n    duration: 0.8,\n};\n/**\n * Default easing curve is a slightly shallower version of\n * the default browser easing curve.\n */\nconst ease = {\n    type: \"keyframes\",\n    ease: [0.25, 0.1, 0.35, 1],\n    duration: 0.3,\n};\nconst getDefaultTransition = (valueKey, { keyframes }) => {\n    if (keyframes.length > 2) {\n        return keyframesTransition;\n    }\n    else if (transformProps.has(valueKey)) {\n        return valueKey.startsWith(\"scale\")\n            ? criticallyDampedSpring(keyframes[1])\n            : underDampedSpring;\n    }\n    return ease;\n};\n\nexport { getDefaultTransition };\n","/**\n * Decide whether a transition is defined on a given Transition.\n * This filters out orchestration options and returns true\n * if any options are left.\n */\nfunction isTransitionDefined({ when, delay: _delay, delayChildren, staggerChildren, staggerDirection, repeat, repeatType, repeatDelay, from, elapsed, ...transition }) {\n    return !!Object.keys(transition).length;\n}\nfunction getValueTransition(transition, key) {\n    return (transition[key] ||\n        transition[\"default\"] ||\n        transition);\n}\n\nexport { getValueTransition, isTransitionDefined };\n","const instantAnimationState = {\n    current: false,\n};\n\nexport { instantAnimationState };\n","const isNotNull = (value) => value !== null;\nfunction getFinalKeyframe(keyframes, { repeat, repeatType = \"loop\" }, finalKeyframe) {\n    const resolvedKeyframes = keyframes.filter(isNotNull);\n    const index = repeat && repeatType !== \"loop\" && repeat % 2 === 1\n        ? 0\n        : resolvedKeyframes.length - 1;\n    return !index || finalKeyframe === undefined\n        ? resolvedKeyframes[index]\n        : finalKeyframe;\n}\n\nexport { getFinalKeyframe };\n","import { MotionGlobalConfig } from '../utils/GlobalConfig.mjs';\nimport { frameData } from './frame.mjs';\n\nlet now;\nfunction clearTime() {\n    now = undefined;\n}\n/**\n * An eventloop-synchronous alternative to performance.now().\n *\n * Ensures that time measurements remain consistent within a synchronous context.\n * Usually calling performance.now() twice within the same synchronous context\n * will return different values which isn't useful for animations when we're usually\n * trying to sync animations to the same frame.\n */\nconst time = {\n    now: () => {\n        if (now === undefined) {\n            time.set(frameData.isProcessing || MotionGlobalConfig.useManualTiming\n                ? frameData.timestamp\n                : performance.now());\n        }\n        return now;\n    },\n    set: (newTime) => {\n        now = newTime;\n        queueMicrotask(clearTime);\n    },\n};\n\nexport { time };\n","/**\n * Check if the value is a zero value string like \"0px\" or \"0%\"\n */\nconst isZeroValueString = (v) => /^0[^.\\s]+$/u.test(v);\n\nexport { isZeroValueString };\n","/**\n * Check if value is a numerical string, ie a string that is purely a number eg \"100\" or \"-100.1\"\n */\nconst isNumericalString = (v) => /^-?(?:\\d+(?:\\.\\d+)?|\\.\\d+)$/u.test(v);\n\nexport { isNumericalString };\n","import { invariant } from '../../../utils/errors.mjs';\nimport { isNumericalString } from '../../../utils/is-numerical-string.mjs';\nimport { isCSSVariableToken } from './is-css-variable.mjs';\n\n/**\n * Parse Framer's special CSS variable format into a CSS token and a fallback.\n *\n * ```\n * `var(--foo, #fff)` => [`--foo`, '#fff']\n * ```\n *\n * @param current\n */\nconst splitCSSVariableRegex = \n// eslint-disable-next-line redos-detector/no-unsafe-regex -- false positive, as it can match a lot of words\n/^var\\(--(?:([\\w-]+)|([\\w-]+), ?([a-zA-Z\\d ()%#.,-]+))\\)/u;\nfunction parseCSSVariable(current) {\n    const match = splitCSSVariableRegex.exec(current);\n    if (!match)\n        return [,];\n    const [, token1, token2, fallback] = match;\n    return [`--${token1 !== null && token1 !== void 0 ? token1 : token2}`, fallback];\n}\nconst maxDepth = 4;\nfunction getVariableValue(current, element, depth = 1) {\n    invariant(depth <= maxDepth, `Max CSS variable fallback depth detected in property \"${current}\". This may indicate a circular fallback dependency.`);\n    const [token, fallback] = parseCSSVariable(current);\n    // No CSS variable detected\n    if (!token)\n        return;\n    // Attempt to read this CSS variable off the element\n    const resolved = window.getComputedStyle(element).getPropertyValue(token);\n    if (resolved) {\n        const trimmed = resolved.trim();\n        return isNumericalString(trimmed) ? parseFloat(trimmed) : trimmed;\n    }\n    return isCSSVariableToken(fallback)\n        ? getVariableValue(fallback, element, depth + 1)\n        : fallback;\n}\n\nexport { getVariableValue, parseCSSVariable };\n","import { transformPropOrder } from '../../html/utils/transform.mjs';\nimport { number } from '../../../value/types/numbers/index.mjs';\nimport { px } from '../../../value/types/numbers/units.mjs';\n\nconst positionalKeys = new Set([\n    \"width\",\n    \"height\",\n    \"top\",\n    \"left\",\n    \"right\",\n    \"bottom\",\n    \"x\",\n    \"y\",\n    \"translateX\",\n    \"translateY\",\n]);\nconst isNumOrPxType = (v) => v === number || v === px;\nconst getPosFromMatrix = (matrix, pos) => parseFloat(matrix.split(\", \")[pos]);\nconst getTranslateFromMatrix = (pos2, pos3) => (_bbox, { transform }) => {\n    if (transform === \"none\" || !transform)\n        return 0;\n    const matrix3d = transform.match(/^matrix3d\\((.+)\\)$/u);\n    if (matrix3d) {\n        return getPosFromMatrix(matrix3d[1], pos3);\n    }\n    else {\n        const matrix = transform.match(/^matrix\\((.+)\\)$/u);\n        if (matrix) {\n            return getPosFromMatrix(matrix[1], pos2);\n        }\n        else {\n            return 0;\n        }\n    }\n};\nconst transformKeys = new Set([\"x\", \"y\", \"z\"]);\nconst nonTranslationalTransformKeys = transformPropOrder.filter((key) => !transformKeys.has(key));\nfunction removeNonTranslationalTransform(visualElement) {\n    const removedTransforms = [];\n    nonTranslationalTransformKeys.forEach((key) => {\n        const value = visualElement.getValue(key);\n        if (value !== undefined) {\n            removedTransforms.push([key, value.get()]);\n            value.set(key.startsWith(\"scale\") ? 1 : 0);\n        }\n    });\n    return removedTransforms;\n}\nconst positionalValues = {\n    // Dimensions\n    width: ({ x }, { paddingLeft = \"0\", paddingRight = \"0\" }) => x.max - x.min - parseFloat(paddingLeft) - parseFloat(paddingRight),\n    height: ({ y }, { paddingTop = \"0\", paddingBottom = \"0\" }) => y.max - y.min - parseFloat(paddingTop) - parseFloat(paddingBottom),\n    top: (_bbox, { top }) => parseFloat(top),\n    left: (_bbox, { left }) => parseFloat(left),\n    bottom: ({ y }, { top }) => parseFloat(top) + (y.max - y.min),\n    right: ({ x }, { left }) => parseFloat(left) + (x.max - x.min),\n    // Transform\n    x: getTranslateFromMatrix(4, 13),\n    y: getTranslateFromMatrix(5, 14),\n};\n// Alias translate longform names\npositionalValues.translateX = positionalValues.x;\npositionalValues.translateY = positionalValues.y;\n\nexport { isNumOrPxType, positionalKeys, positionalValues, removeNonTranslationalTransform };\n","/**\n * Tests a provided value against a ValueType\n */\nconst testValueType = (v) => (type) => type.test(v);\n\nexport { testValueType };\n","import { number } from '../../../value/types/numbers/index.mjs';\nimport { px, percent, degrees, vw, vh } from '../../../value/types/numbers/units.mjs';\nimport { testValueType } from './test.mjs';\nimport { auto } from './type-auto.mjs';\n\n/**\n * A list of value types commonly used for dimensions\n */\nconst dimensionValueTypes = [number, px, percent, degrees, vw, vh, auto];\n/**\n * Tests a dimensional value against the list of dimension ValueTypes\n */\nconst findDimensionValueType = (v) => dimensionValueTypes.find(testValueType(v));\n\nexport { dimensionValueTypes, findDimensionValueType };\n","/**\n * ValueType for \"auto\"\n */\nconst auto = {\n    test: (v) => v === \"auto\",\n    parse: (v) => v,\n};\n\nexport { auto };\n","import { removeNonTranslationalTransform } from '../dom/utils/unit-conversion.mjs';\nimport { frame } from '../../frameloop/frame.mjs';\n\nconst toResolve = new Set();\nlet isScheduled = false;\nlet anyNeedsMeasurement = false;\nfunction measureAllKeyframes() {\n    if (anyNeedsMeasurement) {\n        const resolversToMeasure = Array.from(toResolve).filter((resolver) => resolver.needsMeasurement);\n        const elementsToMeasure = new Set(resolversToMeasure.map((resolver) => resolver.element));\n        const transformsToRestore = new Map();\n        /**\n         * Write pass\n         * If we're measuring elements we want to remove bounding box-changing transforms.\n         */\n        elementsToMeasure.forEach((element) => {\n            const removedTransforms = removeNonTranslationalTransform(element);\n            if (!removedTransforms.length)\n                return;\n            transformsToRestore.set(element, removedTransforms);\n            element.render();\n        });\n        // Read\n        resolversToMeasure.forEach((resolver) => resolver.measureInitialState());\n        // Write\n        elementsToMeasure.forEach((element) => {\n            element.render();\n            const restore = transformsToRestore.get(element);\n            if (restore) {\n                restore.forEach(([key, value]) => {\n                    var _a;\n                    (_a = element.getValue(key)) === null || _a === void 0 ? void 0 : _a.set(value);\n                });\n            }\n        });\n        // Read\n        resolversToMeasure.forEach((resolver) => resolver.measureEndState());\n        // Write\n        resolversToMeasure.forEach((resolver) => {\n            if (resolver.suspendedScrollY !== undefined) {\n                window.scrollTo(0, resolver.suspendedScrollY);\n            }\n        });\n    }\n    anyNeedsMeasurement = false;\n    isScheduled = false;\n    toResolve.forEach((resolver) => resolver.complete());\n    toResolve.clear();\n}\nfunction readAllKeyframes() {\n    toResolve.forEach((resolver) => {\n        resolver.readKeyframes();\n        if (resolver.needsMeasurement) {\n            anyNeedsMeasurement = true;\n        }\n    });\n}\nfunction flushKeyframeResolvers() {\n    readAllKeyframes();\n    measureAllKeyframes();\n}\nclass KeyframeResolver {\n    constructor(unresolvedKeyframes, onComplete, name, motionValue, element, isAsync = false) {\n        /**\n         * Track whether this resolver has completed. Once complete, it never\n         * needs to attempt keyframe resolution again.\n         */\n        this.isComplete = false;\n        /**\n         * Track whether this resolver is async. If it is, it'll be added to the\n         * resolver queue and flushed in the next frame. Resolvers that aren't going\n         * to trigger read/write thrashing don't need to be async.\n         */\n        this.isAsync = false;\n        /**\n         * Track whether this resolver needs to perform a measurement\n         * to resolve its keyframes.\n         */\n        this.needsMeasurement = false;\n        /**\n         * Track whether this resolver is currently scheduled to resolve\n         * to allow it to be cancelled and resumed externally.\n         */\n        this.isScheduled = false;\n        this.unresolvedKeyframes = [...unresolvedKeyframes];\n        this.onComplete = onComplete;\n        this.name = name;\n        this.motionValue = motionValue;\n        this.element = element;\n        this.isAsync = isAsync;\n    }\n    scheduleResolve() {\n        this.isScheduled = true;\n        if (this.isAsync) {\n            toResolve.add(this);\n            if (!isScheduled) {\n                isScheduled = true;\n                frame.read(readAllKeyframes);\n                frame.resolveKeyframes(measureAllKeyframes);\n            }\n        }\n        else {\n            this.readKeyframes();\n            this.complete();\n        }\n    }\n    readKeyframes() {\n        const { unresolvedKeyframes, name, element, motionValue } = this;\n        /**\n         * If a keyframe is null, we hydrate it either by reading it from\n         * the instance, or propagating from previous keyframes.\n         */\n        for (let i = 0; i < unresolvedKeyframes.length; i++) {\n            if (unresolvedKeyframes[i] === null) {\n                /**\n                 * If the first keyframe is null, we need to find its value by sampling the element\n                 */\n                if (i === 0) {\n                    const currentValue = motionValue === null || motionValue === void 0 ? void 0 : motionValue.get();\n                    const finalKeyframe = unresolvedKeyframes[unresolvedKeyframes.length - 1];\n                    if (currentValue !== undefined) {\n                        unresolvedKeyframes[0] = currentValue;\n                    }\n                    else if (element && name) {\n                        const valueAsRead = element.readValue(name, finalKeyframe);\n                        if (valueAsRead !== undefined && valueAsRead !== null) {\n                            unresolvedKeyframes[0] = valueAsRead;\n                        }\n                    }\n                    if (unresolvedKeyframes[0] === undefined) {\n                        unresolvedKeyframes[0] = finalKeyframe;\n                    }\n                    if (motionValue && currentValue === undefined) {\n                        motionValue.set(unresolvedKeyframes[0]);\n                    }\n                }\n                else {\n                    unresolvedKeyframes[i] = unresolvedKeyframes[i - 1];\n                }\n            }\n        }\n    }\n    setFinalKeyframe() { }\n    measureInitialState() { }\n    renderEndStyles() { }\n    measureEndState() { }\n    complete() {\n        this.isComplete = true;\n        this.onComplete(this.unresolvedKeyframes, this.finalKeyframe);\n        toResolve.delete(this);\n    }\n    cancel() {\n        if (!this.isComplete) {\n            this.isScheduled = false;\n            toResolve.delete(this);\n        }\n    }\n    resume() {\n        if (!this.isComplete)\n            this.scheduleResolve();\n    }\n}\n\nexport { KeyframeResolver, flushKeyframeResolvers };\n","import { isString, singleColorRegex, floatRegex } from '../utils.mjs';\n\n/**\n * Returns true if the provided string is a color, ie rgba(0,0,0,0) or #000,\n * but false if a number or multiple colors\n */\nconst isColorString = (type, testProp) => (v) => {\n    return Boolean((isString(v) && singleColorRegex.test(v) && v.startsWith(type)) ||\n        (testProp && Object.prototype.hasOwnProperty.call(v, testProp)));\n};\nconst splitColor = (aName, bName, cName) => (v) => {\n    if (!isString(v))\n        return v;\n    const [a, b, c, alpha] = v.match(floatRegex);\n    return {\n        [aName]: parseFloat(a),\n        [bName]: parseFloat(b),\n        [cName]: parseFloat(c),\n        alpha: alpha !== undefined ? parseFloat(alpha) : 1,\n    };\n};\n\nexport { isColorString, splitColor };\n","import { clamp } from '../../../utils/clamp.mjs';\nimport { number, alpha } from '../numbers/index.mjs';\nimport { sanitize } from '../utils.mjs';\nimport { isColorString, splitColor } from './utils.mjs';\n\nconst clampRgbUnit = (v) => clamp(0, 255, v);\nconst rgbUnit = {\n    ...number,\n    transform: (v) => Math.round(clampRgbUnit(v)),\n};\nconst rgba = {\n    test: isColorString(\"rgb\", \"red\"),\n    parse: splitColor(\"red\", \"green\", \"blue\"),\n    transform: ({ red, green, blue, alpha: alpha$1 = 1 }) => \"rgba(\" +\n        rgbUnit.transform(red) +\n        \", \" +\n        rgbUnit.transform(green) +\n        \", \" +\n        rgbUnit.transform(blue) +\n        \", \" +\n        sanitize(alpha.transform(alpha$1)) +\n        \")\",\n};\n\nexport { rgbUnit, rgba };\n","import { rgba } from './rgba.mjs';\nimport { isColorString } from './utils.mjs';\n\nfunction parseHex(v) {\n    let r = \"\";\n    let g = \"\";\n    let b = \"\";\n    let a = \"\";\n    // If we have 6 characters, ie #FF0000\n    if (v.length > 5) {\n        r = v.substring(1, 3);\n        g = v.substring(3, 5);\n        b = v.substring(5, 7);\n        a = v.substring(7, 9);\n        // Or we have 3 characters, ie #F00\n    }\n    else {\n        r = v.substring(1, 2);\n        g = v.substring(2, 3);\n        b = v.substring(3, 4);\n        a = v.substring(4, 5);\n        r += r;\n        g += g;\n        b += b;\n        a += a;\n    }\n    return {\n        red: parseInt(r, 16),\n        green: parseInt(g, 16),\n        blue: parseInt(b, 16),\n        alpha: a ? parseInt(a, 16) / 255 : 1,\n    };\n}\nconst hex = {\n    test: isColorString(\"#\"),\n    parse: parseHex,\n    transform: rgba.transform,\n};\n\nexport { hex };\n","import { alpha } from '../numbers/index.mjs';\nimport { percent } from '../numbers/units.mjs';\nimport { sanitize } from '../utils.mjs';\nimport { isColorString, splitColor } from './utils.mjs';\n\nconst hsla = {\n    test: isColorString(\"hsl\", \"hue\"),\n    parse: splitColor(\"hue\", \"saturation\", \"lightness\"),\n    transform: ({ hue, saturation, lightness, alpha: alpha$1 = 1 }) => {\n        return (\"hsla(\" +\n            Math.round(hue) +\n            \", \" +\n            percent.transform(sanitize(saturation)) +\n            \", \" +\n            percent.transform(sanitize(lightness)) +\n            \", \" +\n            sanitize(alpha.transform(alpha$1)) +\n            \")\");\n    },\n};\n\nexport { hsla };\n","import { isString } from '../utils.mjs';\nimport { hex } from './hex.mjs';\nimport { hsla } from './hsla.mjs';\nimport { rgba } from './rgba.mjs';\n\nconst color = {\n    test: (v) => rgba.test(v) || hex.test(v) || hsla.test(v),\n    parse: (v) => {\n        if (rgba.test(v)) {\n            return rgba.parse(v);\n        }\n        else if (hsla.test(v)) {\n            return hsla.parse(v);\n        }\n        else {\n            return hex.parse(v);\n        }\n    },\n    transform: (v) => {\n        return isString(v)\n            ? v\n            : v.hasOwnProperty(\"red\")\n                ? rgba.transform(v)\n                : hsla.transform(v);\n    },\n};\n\nexport { color };\n","import { color } from '../color/index.mjs';\nimport { isString, floatRegex, colorRegex, sanitize } from '../utils.mjs';\n\nfunction test(v) {\n    var _a, _b;\n    return (isNaN(v) &&\n        isString(v) &&\n        (((_a = v.match(floatRegex)) === null || _a === void 0 ? void 0 : _a.length) || 0) +\n            (((_b = v.match(colorRegex)) === null || _b === void 0 ? void 0 : _b.length) || 0) >\n            0);\n}\nconst NUMBER_TOKEN = \"number\";\nconst COLOR_TOKEN = \"color\";\nconst VAR_TOKEN = \"var\";\nconst VAR_FUNCTION_TOKEN = \"var(\";\nconst SPLIT_TOKEN = \"${}\";\n// this regex consists of the `singleCssVariableRegex|rgbHSLValueRegex|digitRegex`\nconst complexRegex = /var\\s*\\(\\s*--(?:[\\w-]+\\s*|[\\w-]+\\s*,(?:\\s*[^)(\\s]|\\s*\\((?:[^)(]|\\([^)(]*\\))*\\))+\\s*)\\)|#[\\da-f]{3,8}|(?:rgb|hsl)a?\\((?:-?[\\d.]+%?[,\\s]+){2}-?[\\d.]+%?\\s*(?:[,/]\\s*)?(?:\\b\\d+(?:\\.\\d+)?|\\.\\d+)?%?\\)|-?(?:\\d+(?:\\.\\d+)?|\\.\\d+)/giu;\nfunction analyseComplexValue(value) {\n    const originalValue = value.toString();\n    const values = [];\n    const indexes = {\n        color: [],\n        number: [],\n        var: [],\n    };\n    const types = [];\n    let i = 0;\n    const tokenised = originalValue.replace(complexRegex, (parsedValue) => {\n        if (color.test(parsedValue)) {\n            indexes.color.push(i);\n            types.push(COLOR_TOKEN);\n            values.push(color.parse(parsedValue));\n        }\n        else if (parsedValue.startsWith(VAR_FUNCTION_TOKEN)) {\n            indexes.var.push(i);\n            types.push(VAR_TOKEN);\n            values.push(parsedValue);\n        }\n        else {\n            indexes.number.push(i);\n            types.push(NUMBER_TOKEN);\n            values.push(parseFloat(parsedValue));\n        }\n        ++i;\n        return SPLIT_TOKEN;\n    });\n    const split = tokenised.split(SPLIT_TOKEN);\n    return { values, split, indexes, types };\n}\nfunction parseComplexValue(v) {\n    return analyseComplexValue(v).values;\n}\nfunction createTransformer(source) {\n    const { split, types } = analyseComplexValue(source);\n    const numSections = split.length;\n    return (v) => {\n        let output = \"\";\n        for (let i = 0; i < numSections; i++) {\n            output += split[i];\n            if (v[i] !== undefined) {\n                const type = types[i];\n                if (type === NUMBER_TOKEN) {\n                    output += sanitize(v[i]);\n                }\n                else if (type === COLOR_TOKEN) {\n                    output += color.transform(v[i]);\n                }\n                else {\n                    output += v[i];\n                }\n            }\n        }\n        return output;\n    };\n}\nconst convertNumbersToZero = (v) => typeof v === \"number\" ? 0 : v;\nfunction getAnimatableNone(v) {\n    const parsed = parseComplexValue(v);\n    const transformer = createTransformer(v);\n    return transformer(parsed.map(convertNumbersToZero));\n}\nconst complex = {\n    test,\n    parse: parseComplexValue,\n    createTransformer,\n    getAnimatableNone,\n};\n\nexport { analyseComplexValue, complex };\n","import { complex } from './index.mjs';\nimport { floatRegex } from '../utils.mjs';\n\n/**\n * Properties that should default to 1 or 100%\n */\nconst maxDefaults = new Set([\"brightness\", \"contrast\", \"saturate\", \"opacity\"]);\nfunction applyDefaultFilter(v) {\n    const [name, value] = v.slice(0, -1).split(\"(\");\n    if (name === \"drop-shadow\")\n        return v;\n    const [number] = value.match(floatRegex) || [];\n    if (!number)\n        return v;\n    const unit = value.replace(number, \"\");\n    let defaultValue = maxDefaults.has(name) ? 1 : 0;\n    if (number !== value)\n        defaultValue *= 100;\n    return name + \"(\" + defaultValue + unit + \")\";\n}\nconst functionRegex = /\\b([a-z-]*)\\(.*?\\)/gu;\nconst filter = {\n    ...complex,\n    getAnimatableNone: (v) => {\n        const functions = v.match(functionRegex);\n        return functions ? functions.map(applyDefaultFilter).join(\" \") : v;\n    },\n};\n\nexport { filter };\n","import { color } from '../../../value/types/color/index.mjs';\nimport { filter } from '../../../value/types/complex/filter.mjs';\nimport { numberValueTypes } from './number.mjs';\n\n/**\n * A map of default value types for common values\n */\nconst defaultValueTypes = {\n    ...numberValueTypes,\n    // Color props\n    color,\n    backgroundColor: color,\n    outlineColor: color,\n    fill: color,\n    stroke: color,\n    // Border props\n    borderColor: color,\n    borderTopColor: color,\n    borderRightColor: color,\n    borderBottomColor: color,\n    borderLeftColor: color,\n    filter,\n    WebkitFilter: filter,\n};\n/**\n * Gets the default ValueType for the provided value key\n */\nconst getDefaultValueType = (key) => defaultValueTypes[key];\n\nexport { defaultValueTypes, getDefaultValueType };\n","import { complex } from '../../../value/types/complex/index.mjs';\nimport { filter } from '../../../value/types/complex/filter.mjs';\nimport { getDefaultValueType } from './defaults.mjs';\n\nfunction getAnimatableNone(key, value) {\n    let defaultValueType = getDefaultValueType(key);\n    if (defaultValueType !== filter)\n        defaultValueType = complex;\n    // If value is not recognised as animatable, ie \"none\", create an animatable version origin based on the target\n    return defaultValueType.getAnimatableNone\n        ? defaultValueType.getAnimatableNone(value)\n        : undefined;\n}\n\nexport { getAnimatableNone };\n","import { isNone } from '../../animation/utils/is-none.mjs';\nimport { getVariableValue } from './utils/css-variables-conversion.mjs';\nimport { isCSSVariableToken } from './utils/is-css-variable.mjs';\nimport { positionalKeys, isNumOrPxType, positionalValues } from './utils/unit-conversion.mjs';\nimport { findDimensionValueType } from './value-types/dimensions.mjs';\nimport { KeyframeResolver } from '../utils/KeyframesResolver.mjs';\nimport { makeNoneKeyframesAnimatable } from '../html/utils/make-none-animatable.mjs';\n\nclass DOMKeyframesResolver extends KeyframeResolver {\n    constructor(unresolvedKeyframes, onComplete, name, motionValue) {\n        super(unresolvedKeyframes, onComplete, name, motionValue, motionValue === null || motionValue === void 0 ? void 0 : motionValue.owner, true);\n    }\n    readKeyframes() {\n        const { unresolvedKeyframes, element, name } = this;\n        if (!element.current)\n            return;\n        super.readKeyframes();\n        /**\n         * If any keyframe is a CSS variable, we need to find its value by sampling the element\n         */\n        for (let i = 0; i < unresolvedKeyframes.length; i++) {\n            const keyframe = unresolvedKeyframes[i];\n            if (typeof keyframe === \"string\" && isCSSVariableToken(keyframe)) {\n                const resolved = getVariableValue(keyframe, element.current);\n                if (resolved !== undefined) {\n                    unresolvedKeyframes[i] = resolved;\n                }\n                if (i === unresolvedKeyframes.length - 1) {\n                    this.finalKeyframe = keyframe;\n                }\n            }\n        }\n        /**\n         * Check to see if unit type has changed. If so schedule jobs that will\n         * temporarily set styles to the destination keyframes.\n         * Skip if we have more than two keyframes or this isn't a positional value.\n         * TODO: We can throw if there are multiple keyframes and the value type changes.\n         */\n        if (!positionalKeys.has(name) || unresolvedKeyframes.length !== 2) {\n            return this.resolveNoneKeyframes();\n        }\n        const [origin, target] = unresolvedKeyframes;\n        const originType = findDimensionValueType(origin);\n        const targetType = findDimensionValueType(target);\n        /**\n         * Either we don't recognise these value types or we can animate between them.\n         */\n        if (originType === targetType)\n            return;\n        /**\n         * If both values are numbers or pixels, we can animate between them by\n         * converting them to numbers.\n         */\n        if (isNumOrPxType(originType) && isNumOrPxType(targetType)) {\n            for (let i = 0; i < unresolvedKeyframes.length; i++) {\n                const value = unresolvedKeyframes[i];\n                if (typeof value === \"string\") {\n                    unresolvedKeyframes[i] = parseFloat(value);\n                }\n            }\n        }\n        else {\n            /**\n             * Else, the only way to resolve this is by measuring the element.\n             */\n            this.needsMeasurement = true;\n        }\n    }\n    resolveNoneKeyframes() {\n        const { unresolvedKeyframes, name } = this;\n        const noneKeyframeIndexes = [];\n        for (let i = 0; i < unresolvedKeyframes.length; i++) {\n            if (isNone(unresolvedKeyframes[i])) {\n                noneKeyframeIndexes.push(i);\n            }\n        }\n        if (noneKeyframeIndexes.length) {\n            makeNoneKeyframesAnimatable(unresolvedKeyframes, noneKeyframeIndexes, name);\n        }\n    }\n    measureInitialState() {\n        const { element, unresolvedKeyframes, name } = this;\n        if (!element.current)\n            return;\n        if (name === \"height\") {\n            this.suspendedScrollY = window.pageYOffset;\n        }\n        this.measuredOrigin = positionalValues[name](element.measureViewportBox(), window.getComputedStyle(element.current));\n        unresolvedKeyframes[0] = this.measuredOrigin;\n        // Set final key frame to measure after next render\n        const measureKeyframe = unresolvedKeyframes[unresolvedKeyframes.length - 1];\n        if (measureKeyframe !== undefined) {\n            element.getValue(name, measureKeyframe).jump(measureKeyframe, false);\n        }\n    }\n    measureEndState() {\n        var _a;\n        const { element, name, unresolvedKeyframes } = this;\n        if (!element.current)\n            return;\n        const value = element.getValue(name);\n        value && value.jump(this.measuredOrigin, false);\n        const finalKeyframeIndex = unresolvedKeyframes.length - 1;\n        const finalKeyframe = unresolvedKeyframes[finalKeyframeIndex];\n        unresolvedKeyframes[finalKeyframeIndex] = positionalValues[name](element.measureViewportBox(), window.getComputedStyle(element.current));\n        if (finalKeyframe !== null && this.finalKeyframe === undefined) {\n            this.finalKeyframe = finalKeyframe;\n        }\n        // If we removed transform values, reapply them before the next render\n        if ((_a = this.removedTransforms) === null || _a === void 0 ? void 0 : _a.length) {\n            this.removedTransforms.forEach(([unsetTransformName, unsetTransformValue]) => {\n                element\n                    .getValue(unsetTransformName)\n                    .set(unsetTransformValue);\n            });\n        }\n        this.resolveNoneKeyframes();\n    }\n}\n\nexport { DOMKeyframesResolver };\n","import { isZeroValueString } from '../../utils/is-zero-value-string.mjs';\n\nfunction isNone(value) {\n    if (typeof value === \"number\") {\n        return value === 0;\n    }\n    else if (value !== null) {\n        return value === \"none\" || value === \"0\" || isZeroValueString(value);\n    }\n    else {\n        return true;\n    }\n}\n\nexport { isNone };\n","import { getAnimatableNone } from '../../dom/value-types/animatable-none.mjs';\n\n/**\n * If we encounter keyframes like \"none\" or \"0\" and we also have keyframes like\n * \"#fff\" or \"200px 200px\" we want to find a keyframe to serve as a template for\n * the \"none\" keyframes. In this case \"#fff\" or \"200px 200px\" - then these get turned into\n * zero equivalents, i.e. \"#fff0\" or \"0px 0px\".\n */\nfunction makeNoneKeyframesAnimatable(unresolvedKeyframes, noneKeyframeIndexes, name) {\n    let i = 0;\n    let animatableTemplate = undefined;\n    while (i < unresolvedKeyframes.length && !animatableTemplate) {\n        if (typeof unresolvedKeyframes[i] === \"string\" &&\n            unresolvedKeyframes[i] !== \"none\" &&\n            unresolvedKeyframes[i] !== \"0\") {\n            animatableTemplate = unresolvedKeyframes[i];\n        }\n        i++;\n    }\n    if (animatableTemplate && name) {\n        for (const noneIndex of noneKeyframeIndexes) {\n            unresolvedKeyframes[noneIndex] = getAnimatableNone(name, animatableTemplate);\n        }\n    }\n}\n\nexport { makeNoneKeyframesAnimatable };\n","import { complex } from '../../value/types/complex/index.mjs';\n\n/**\n * Check if a value is animatable. Examples:\n *\n * ✅: 100, \"100px\", \"#fff\"\n * ❌: \"block\", \"url(2.jpg)\"\n * @param value\n *\n * @internal\n */\nconst isAnimatable = (value, name) => {\n    // If the list of keys tat might be non-animatable grows, replace with Set\n    if (name === \"zIndex\")\n        return false;\n    // If it's a number or a keyframes array, we can animate it. We might at some point\n    // need to do a deep isAnimatable check of keyframes, or let Popmotion handle this,\n    // but for now lets leave it like this for performance reasons\n    if (typeof value === \"number\" || Array.isArray(value))\n        return true;\n    if (typeof value === \"string\" && // It's animatable if we have a string\n        (complex.test(value) || value === \"0\") && // And it contains numbers and/or colors\n        !value.startsWith(\"url(\") // Unless it starts with \"url(\"\n    ) {\n        return true;\n    }\n    return false;\n};\n\nexport { isAnimatable };\n","import { flushKeyframeResolvers } from '../../render/utils/KeyframesResolver.mjs';\nimport { instantAnimationState } from '../../utils/use-instant-transition-state.mjs';\nimport { canAnimate } from './utils/can-animate.mjs';\nimport { getFinalKeyframe } from './waapi/utils/get-final-keyframe.mjs';\n\nclass BaseAnimation {\n    constructor({ autoplay = true, delay = 0, type = \"keyframes\", repeat = 0, repeatDelay = 0, repeatType = \"loop\", ...options }) {\n        // Track whether the animation has been stopped. Stopped animations won't restart.\n        this.isStopped = false;\n        this.hasAttemptedResolve = false;\n        this.options = {\n            autoplay,\n            delay,\n            type,\n            repeat,\n            repeatDelay,\n            repeatType,\n            ...options,\n        };\n        this.updateFinishedPromise();\n    }\n    /**\n     * A getter for resolved data. If keyframes are not yet resolved, accessing\n     * this.resolved will synchronously flush all pending keyframe resolvers.\n     * This is a deoptimisation, but at its worst still batches read/writes.\n     */\n    get resolved() {\n        if (!this._resolved && !this.hasAttemptedResolve) {\n            flushKeyframeResolvers();\n        }\n        return this._resolved;\n    }\n    /**\n     * A method to be called when the keyframes resolver completes. This method\n     * will check if its possible to run the animation and, if not, skip it.\n     * Otherwise, it will call initPlayback on the implementing class.\n     */\n    onKeyframesResolved(keyframes, finalKeyframe) {\n        this.hasAttemptedResolve = true;\n        const { name, type, velocity, delay, onComplete, onUpdate, isGenerator, } = this.options;\n        /**\n         * If we can't animate this value with the resolved keyframes\n         * then we should complete it immediately.\n         */\n        if (!isGenerator && !canAnimate(keyframes, name, type, velocity)) {\n            // Finish immediately\n            if (instantAnimationState.current || !delay) {\n                onUpdate === null || onUpdate === void 0 ? void 0 : onUpdate(getFinalKeyframe(keyframes, this.options, finalKeyframe));\n                onComplete === null || onComplete === void 0 ? void 0 : onComplete();\n                this.resolveFinishedPromise();\n                return;\n            }\n            // Finish after a delay\n            else {\n                this.options.duration = 0;\n            }\n        }\n        const resolvedAnimation = this.initPlayback(keyframes, finalKeyframe);\n        if (resolvedAnimation === false)\n            return;\n        this._resolved = {\n            keyframes,\n            finalKeyframe,\n            ...resolvedAnimation,\n        };\n        this.onPostResolved();\n    }\n    onPostResolved() { }\n    /**\n     * Allows the returned animation to be awaited or promise-chained. Currently\n     * resolves when the animation finishes at all but in a future update could/should\n     * reject if its cancels.\n     */\n    then(resolve, reject) {\n        return this.currentFinishedPromise.then(resolve, reject);\n    }\n    updateFinishedPromise() {\n        this.currentFinishedPromise = new Promise((resolve) => {\n            this.resolveFinishedPromise = resolve;\n        });\n    }\n}\n\nexport { BaseAnimation };\n","import { warning } from '../../../utils/errors.mjs';\nimport { isAnimatable } from '../../utils/is-animatable.mjs';\n\nfunction hasKeyframesChanged(keyframes) {\n    const current = keyframes[0];\n    if (keyframes.length === 1)\n        return true;\n    for (let i = 0; i < keyframes.length; i++) {\n        if (keyframes[i] !== current)\n            return true;\n    }\n}\nfunction canAnimate(keyframes, name, type, velocity) {\n    /**\n     * Check if we're able to animate between the start and end keyframes,\n     * and throw a warning if we're attempting to animate between one that's\n     * animatable and another that isn't.\n     */\n    const originKeyframe = keyframes[0];\n    if (originKeyframe === null)\n        return false;\n    const targetKeyframe = keyframes[keyframes.length - 1];\n    const isOriginAnimatable = isAnimatable(originKeyframe, name);\n    const isTargetAnimatable = isAnimatable(targetKeyframe, name);\n    warning(isOriginAnimatable === isTargetAnimatable, `You are trying to animate ${name} from \"${originKeyframe}\" to \"${targetKeyframe}\". ${originKeyframe} is not an animatable value - to enable this animation set ${originKeyframe} to a value animatable to ${targetKeyframe} via the \\`style\\` property.`);\n    // Always skip if any of these are true\n    if (!isOriginAnimatable || !isTargetAnimatable) {\n        return false;\n    }\n    return hasKeyframesChanged(keyframes) || (type === \"spring\" && velocity);\n}\n\nexport { canAnimate };\n","/*\n  Convert velocity into velocity per second\n\n  @param [number]: Unit per frame\n  @param [number]: Frame duration in ms\n*/\nfunction velocityPerSecond(velocity, frameDuration) {\n    return frameDuration ? velocity * (1000 / frameDuration) : 0;\n}\n\nexport { velocityPerSecond };\n","import { velocityPerSecond } from '../../../utils/velocity-per-second.mjs';\n\nconst velocitySampleDuration = 5; // ms\nfunction calcGeneratorVelocity(resolveValue, t, current) {\n    const prevT = Math.max(t - velocitySampleDuration, 0);\n    return velocityPerSecond(current - resolveValue(prevT), t - prevT);\n}\n\nexport { calcGeneratorVelocity };\n","import { warning } from '../../../utils/errors.mjs';\nimport { clamp } from '../../../utils/clamp.mjs';\nimport { secondsToMilliseconds, millisecondsToSeconds } from '../../../utils/time-conversion.mjs';\n\nconst safeMin = 0.001;\nconst minDuration = 0.01;\nconst maxDuration = 10.0;\nconst minDamping = 0.05;\nconst maxDamping = 1;\nfunction findSpring({ duration = 800, bounce = 0.25, velocity = 0, mass = 1, }) {\n    let envelope;\n    let derivative;\n    warning(duration <= secondsToMilliseconds(maxDuration), \"Spring duration must be 10 seconds or less\");\n    let dampingRatio = 1 - bounce;\n    /**\n     * Restrict dampingRatio and duration to within acceptable ranges.\n     */\n    dampingRatio = clamp(minDamping, maxDamping, dampingRatio);\n    duration = clamp(minDuration, maxDuration, millisecondsToSeconds(duration));\n    if (dampingRatio < 1) {\n        /**\n         * Underdamped spring\n         */\n        envelope = (undampedFreq) => {\n            const exponentialDecay = undampedFreq * dampingRatio;\n            const delta = exponentialDecay * duration;\n            const a = exponentialDecay - velocity;\n            const b = calcAngularFreq(undampedFreq, dampingRatio);\n            const c = Math.exp(-delta);\n            return safeMin - (a / b) * c;\n        };\n        derivative = (undampedFreq) => {\n            const exponentialDecay = undampedFreq * dampingRatio;\n            const delta = exponentialDecay * duration;\n            const d = delta * velocity + velocity;\n            const e = Math.pow(dampingRatio, 2) * Math.pow(undampedFreq, 2) * duration;\n            const f = Math.exp(-delta);\n            const g = calcAngularFreq(Math.pow(undampedFreq, 2), dampingRatio);\n            const factor = -envelope(undampedFreq) + safeMin > 0 ? -1 : 1;\n            return (factor * ((d - e) * f)) / g;\n        };\n    }\n    else {\n        /**\n         * Critically-damped spring\n         */\n        envelope = (undampedFreq) => {\n            const a = Math.exp(-undampedFreq * duration);\n            const b = (undampedFreq - velocity) * duration + 1;\n            return -safeMin + a * b;\n        };\n        derivative = (undampedFreq) => {\n            const a = Math.exp(-undampedFreq * duration);\n            const b = (velocity - undampedFreq) * (duration * duration);\n            return a * b;\n        };\n    }\n    const initialGuess = 5 / duration;\n    const undampedFreq = approximateRoot(envelope, derivative, initialGuess);\n    duration = secondsToMilliseconds(duration);\n    if (isNaN(undampedFreq)) {\n        return {\n            stiffness: 100,\n            damping: 10,\n            duration,\n        };\n    }\n    else {\n        const stiffness = Math.pow(undampedFreq, 2) * mass;\n        return {\n            stiffness,\n            damping: dampingRatio * 2 * Math.sqrt(mass * stiffness),\n            duration,\n        };\n    }\n}\nconst rootIterations = 12;\nfunction approximateRoot(envelope, derivative, initialGuess) {\n    let result = initialGuess;\n    for (let i = 1; i < rootIterations; i++) {\n        result = result - envelope(result) / derivative(result);\n    }\n    return result;\n}\nfunction calcAngularFreq(undampedFreq, dampingRatio) {\n    return undampedFreq * Math.sqrt(1 - dampingRatio * dampingRatio);\n}\n\nexport { calcAngularFreq, findSpring, maxDamping, maxDuration, minDamping, minDuration };\n","import { millisecondsToSeconds } from '../../../utils/time-conversion.mjs';\nimport { calcGeneratorVelocity } from '../utils/velocity.mjs';\nimport { findSpring, calcAngularFreq } from './find.mjs';\n\nconst durationKeys = [\"duration\", \"bounce\"];\nconst physicsKeys = [\"stiffness\", \"damping\", \"mass\"];\nfunction isSpringType(options, keys) {\n    return keys.some((key) => options[key] !== undefined);\n}\nfunction getSpringOptions(options) {\n    let springOptions = {\n        velocity: 0.0,\n        stiffness: 100,\n        damping: 10,\n        mass: 1.0,\n        isResolvedFromDuration: false,\n        ...options,\n    };\n    // stiffness/damping/mass overrides duration/bounce\n    if (!isSpringType(options, physicsKeys) &&\n        isSpringType(options, durationKeys)) {\n        const derived = findSpring(options);\n        springOptions = {\n            ...springOptions,\n            ...derived,\n            mass: 1.0,\n        };\n        springOptions.isResolvedFromDuration = true;\n    }\n    return springOptions;\n}\nfunction spring({ keyframes, restDelta, restSpeed, ...options }) {\n    const origin = keyframes[0];\n    const target = keyframes[keyframes.length - 1];\n    /**\n     * This is the Iterator-spec return value. We ensure it's mutable rather than using a generator\n     * to reduce GC during animation.\n     */\n    const state = { done: false, value: origin };\n    const { stiffness, damping, mass, duration, velocity, isResolvedFromDuration, } = getSpringOptions({\n        ...options,\n        velocity: -millisecondsToSeconds(options.velocity || 0),\n    });\n    const initialVelocity = velocity || 0.0;\n    const dampingRatio = damping / (2 * Math.sqrt(stiffness * mass));\n    const initialDelta = target - origin;\n    const undampedAngularFreq = millisecondsToSeconds(Math.sqrt(stiffness / mass));\n    /**\n     * If we're working on a granular scale, use smaller defaults for determining\n     * when the spring is finished.\n     *\n     * These defaults have been selected emprically based on what strikes a good\n     * ratio between feeling good and finishing as soon as changes are imperceptible.\n     */\n    const isGranularScale = Math.abs(initialDelta) < 5;\n    restSpeed || (restSpeed = isGranularScale ? 0.01 : 2);\n    restDelta || (restDelta = isGranularScale ? 0.005 : 0.5);\n    let resolveSpring;\n    if (dampingRatio < 1) {\n        const angularFreq = calcAngularFreq(undampedAngularFreq, dampingRatio);\n        // Underdamped spring\n        resolveSpring = (t) => {\n            const envelope = Math.exp(-dampingRatio * undampedAngularFreq * t);\n            return (target -\n                envelope *\n                    (((initialVelocity +\n                        dampingRatio * undampedAngularFreq * initialDelta) /\n                        angularFreq) *\n                        Math.sin(angularFreq * t) +\n                        initialDelta * Math.cos(angularFreq * t)));\n        };\n    }\n    else if (dampingRatio === 1) {\n        // Critically damped spring\n        resolveSpring = (t) => target -\n            Math.exp(-undampedAngularFreq * t) *\n                (initialDelta +\n                    (initialVelocity + undampedAngularFreq * initialDelta) * t);\n    }\n    else {\n        // Overdamped spring\n        const dampedAngularFreq = undampedAngularFreq * Math.sqrt(dampingRatio * dampingRatio - 1);\n        resolveSpring = (t) => {\n            const envelope = Math.exp(-dampingRatio * undampedAngularFreq * t);\n            // When performing sinh or cosh values can hit Infinity so we cap them here\n            const freqForT = Math.min(dampedAngularFreq * t, 300);\n            return (target -\n                (envelope *\n                    ((initialVelocity +\n                        dampingRatio * undampedAngularFreq * initialDelta) *\n                        Math.sinh(freqForT) +\n                        dampedAngularFreq *\n                            initialDelta *\n                            Math.cosh(freqForT))) /\n                    dampedAngularFreq);\n        };\n    }\n    return {\n        calculatedDuration: isResolvedFromDuration ? duration || null : null,\n        next: (t) => {\n            const current = resolveSpring(t);\n            if (!isResolvedFromDuration) {\n                let currentVelocity = initialVelocity;\n                if (t !== 0) {\n                    /**\n                     * We only need to calculate velocity for under-damped springs\n                     * as over- and critically-damped springs can't overshoot, so\n                     * checking only for displacement is enough.\n                     */\n                    if (dampingRatio < 1) {\n                        currentVelocity = calcGeneratorVelocity(resolveSpring, t, current);\n                    }\n                    else {\n                        currentVelocity = 0;\n                    }\n                }\n                const isBelowVelocityThreshold = Math.abs(currentVelocity) <= restSpeed;\n                const isBelowDisplacementThreshold = Math.abs(target - current) <= restDelta;\n                state.done =\n                    isBelowVelocityThreshold && isBelowDisplacementThreshold;\n            }\n            else {\n                state.done = t >= duration;\n            }\n            state.value = state.done ? target : current;\n            return state;\n        },\n    };\n}\n\nexport { spring };\n","import { spring } from './spring/index.mjs';\nimport { calcGeneratorVelocity } from './utils/velocity.mjs';\n\nfunction inertia({ keyframes, velocity = 0.0, power = 0.8, timeConstant = 325, bounceDamping = 10, bounceStiffness = 500, modifyTarget, min, max, restDelta = 0.5, restSpeed, }) {\n    const origin = keyframes[0];\n    const state = {\n        done: false,\n        value: origin,\n    };\n    const isOutOfBounds = (v) => (min !== undefined && v < min) || (max !== undefined && v > max);\n    const nearestBoundary = (v) => {\n        if (min === undefined)\n            return max;\n        if (max === undefined)\n            return min;\n        return Math.abs(min - v) < Math.abs(max - v) ? min : max;\n    };\n    let amplitude = power * velocity;\n    const ideal = origin + amplitude;\n    const target = modifyTarget === undefined ? ideal : modifyTarget(ideal);\n    /**\n     * If the target has changed we need to re-calculate the amplitude, otherwise\n     * the animation will start from the wrong position.\n     */\n    if (target !== ideal)\n        amplitude = target - origin;\n    const calcDelta = (t) => -amplitude * Math.exp(-t / timeConstant);\n    const calcLatest = (t) => target + calcDelta(t);\n    const applyFriction = (t) => {\n        const delta = calcDelta(t);\n        const latest = calcLatest(t);\n        state.done = Math.abs(delta) <= restDelta;\n        state.value = state.done ? target : latest;\n    };\n    /**\n     * Ideally this would resolve for t in a stateless way, we could\n     * do that by always precalculating the animation but as we know\n     * this will be done anyway we can assume that spring will\n     * be discovered during that.\n     */\n    let timeReachedBoundary;\n    let spring$1;\n    const checkCatchBoundary = (t) => {\n        if (!isOutOfBounds(state.value))\n            return;\n        timeReachedBoundary = t;\n        spring$1 = spring({\n            keyframes: [state.value, nearestBoundary(state.value)],\n            velocity: calcGeneratorVelocity(calcLatest, t, state.value), // TODO: This should be passing * 1000\n            damping: bounceDamping,\n            stiffness: bounceStiffness,\n            restDelta,\n            restSpeed,\n        });\n    };\n    checkCatchBoundary(0);\n    return {\n        calculatedDuration: null,\n        next: (t) => {\n            /**\n             * We need to resolve the friction to figure out if we need a\n             * spring but we don't want to do this twice per frame. So here\n             * we flag if we updated for this frame and later if we did\n             * we can skip doing it again.\n             */\n            let hasUpdatedFrame = false;\n            if (!spring$1 && timeReachedBoundary === undefined) {\n                hasUpdatedFrame = true;\n                applyFriction(t);\n                checkCatchBoundary(t);\n            }\n            /**\n             * If we have a spring and the provided t is beyond the moment the friction\n             * animation crossed the min/max boundary, use the spring.\n             */\n            if (timeReachedBoundary !== undefined && t >= timeReachedBoundary) {\n                return spring$1.next(t - timeReachedBoundary);\n            }\n            else {\n                !hasUpdatedFrame && applyFriction(t);\n                return state;\n            }\n        },\n    };\n}\n\nexport { inertia };\n","import { noop } from '../utils/noop.mjs';\n\n/*\n  Bezier function generator\n  This has been modified from Gaëtan Renaudeau's BezierEasing\n  https://github.com/gre/bezier-easing/blob/master/src/index.js\n  https://github.com/gre/bezier-easing/blob/master/LICENSE\n  \n  I've removed the newtonRaphsonIterate algo because in benchmarking it\n  wasn't noticiably faster than binarySubdivision, indeed removing it\n  usually improved times, depending on the curve.\n  I also removed the lookup table, as for the added bundle size and loop we're\n  only cutting ~4 or so subdivision iterations. I bumped the max iterations up\n  to 12 to compensate and this still tended to be faster for no perceivable\n  loss in accuracy.\n  Usage\n    const easeOut = cubicBezier(.17,.67,.83,.67);\n    const x = easeOut(0.5); // returns 0.627...\n*/\n// Returns x(t) given t, x1, and x2, or y(t) given t, y1, and y2.\nconst calcBezier = (t, a1, a2) => (((1.0 - 3.0 * a2 + 3.0 * a1) * t + (3.0 * a2 - 6.0 * a1)) * t + 3.0 * a1) *\n    t;\nconst subdivisionPrecision = 0.0000001;\nconst subdivisionMaxIterations = 12;\nfunction binarySubdivide(x, lowerBound, upperBound, mX1, mX2) {\n    let currentX;\n    let currentT;\n    let i = 0;\n    do {\n        currentT = lowerBound + (upperBound - lowerBound) / 2.0;\n        currentX = calcBezier(currentT, mX1, mX2) - x;\n        if (currentX > 0.0) {\n            upperBound = currentT;\n        }\n        else {\n            lowerBound = currentT;\n        }\n    } while (Math.abs(currentX) > subdivisionPrecision &&\n        ++i < subdivisionMaxIterations);\n    return currentT;\n}\nfunction cubicBezier(mX1, mY1, mX2, mY2) {\n    // If this is a linear gradient, return linear easing\n    if (mX1 === mY1 && mX2 === mY2)\n        return noop;\n    const getTForX = (aX) => binarySubdivide(aX, 0, 1, mX1, mX2);\n    // If animation is at start/end, return t without easing\n    return (t) => t === 0 || t === 1 ? t : calcBezier(getTForX(t), mY1, mY2);\n}\n\nexport { cubicBezier };\n","import { cubicBezier } from './cubic-bezier.mjs';\n\nconst easeIn = cubicBezier(0.42, 0, 1, 1);\nconst easeOut = cubicBezier(0, 0, 0.58, 1);\nconst easeInOut = cubicBezier(0.42, 0, 0.58, 1);\n\nexport { easeIn, easeInOut, easeOut };\n","// Accepts an easing function and returns a new one that outputs mirrored values for\n// the second half of the animation. Turns easeIn into easeInOut.\nconst mirrorEasing = (easing) => (p) => p <= 0.5 ? easing(2 * p) / 2 : (2 - easing(2 * (1 - p))) / 2;\n\nexport { mirrorEasing };\n","// Accepts an easing function and returns a new one that outputs reversed values.\n// Turns easeIn into easeOut.\nconst reverseEasing = (easing) => (p) => 1 - easing(1 - p);\n\nexport { reverseEasing };\n","import { mirrorEasing } from './modifiers/mirror.mjs';\nimport { reverseEasing } from './modifiers/reverse.mjs';\n\nconst circIn = (p) => 1 - Math.sin(Math.acos(p));\nconst circOut = reverseEasing(circIn);\nconst circInOut = mirrorEasing(circIn);\n\nexport { circIn, circInOut, circOut };\n","import { cubicBezier } from './cubic-bezier.mjs';\nimport { mirrorEasing } from './modifiers/mirror.mjs';\nimport { reverseEasing } from './modifiers/reverse.mjs';\n\nconst backOut = cubicBezier(0.33, 1.53, 0.69, 0.99);\nconst backIn = reverseEasing(backOut);\nconst backInOut = mirrorEasing(backIn);\n\nexport { backIn, backInOut, backOut };\n","import { invariant } from '../../utils/errors.mjs';\nimport { cubicBezier } from '../cubic-bezier.mjs';\nimport { noop } from '../../utils/noop.mjs';\nimport { easeIn, easeInOut, easeOut } from '../ease.mjs';\nimport { circIn, circInOut, circOut } from '../circ.mjs';\nimport { backIn, backInOut, backOut } from '../back.mjs';\nimport { anticipate } from '../anticipate.mjs';\n\nconst easingLookup = {\n    linear: noop,\n    easeIn,\n    easeInOut,\n    easeOut,\n    circIn,\n    circInOut,\n    circOut,\n    backIn,\n    backInOut,\n    backOut,\n    anticipate,\n};\nconst easingDefinitionToFunction = (definition) => {\n    if (Array.isArray(definition)) {\n        // If cubic bezier definition, create bezier curve\n        invariant(definition.length === 4, `Cubic bezier arrays must contain four numerical values.`);\n        const [x1, y1, x2, y2] = definition;\n        return cubicBezier(x1, y1, x2, y2);\n    }\n    else if (typeof definition === \"string\") {\n        // Else lookup from table\n        invariant(easingLookup[definition] !== undefined, `Invalid easing type '${definition}'`);\n        return easingLookup[definition];\n    }\n    return definition;\n};\n\nexport { easingDefinitionToFunction };\n","import { backIn } from './back.mjs';\n\nconst anticipate = (p) => (p *= 2) < 1 ? 0.5 * backIn(p) : 0.5 * (2 - Math.pow(2, -10 * (p - 1)));\n\nexport { anticipate };\n","/*\n  Progress within given range\n\n  Given a lower limit and an upper limit, we return the progress\n  (expressed as a number 0-1) represented by the given value, and\n  limit that progress to within 0-1.\n\n  @param [number]: Lower limit\n  @param [number]: Upper limit\n  @param [number]: Value to find progress within given range\n  @return [number]: Progress of value within range as expressed 0-1\n*/\nconst progress = (from, to, value) => {\n    const toFromDifference = to - from;\n    return toFromDifference === 0 ? 1 : (value - from) / toFromDifference;\n};\n\nexport { progress };\n","/*\n  Value in range from progress\n\n  Given a lower limit and an upper limit, we return the value within\n  that range as expressed by progress (usually a number from 0 to 1)\n\n  So progress = 0.5 would change\n\n  from -------- to\n\n  to\n\n  from ---- to\n\n  E.g. from = 10, to = 20, progress = 0.5 => 15\n\n  @param [number]: Lower limit of range\n  @param [number]: Upper limit of range\n  @param [number]: The progress between lower and upper limits expressed 0-1\n  @return [number]: Value as calculated from progress within range (not limited within range)\n*/\nconst mixNumber = (from, to, progress) => {\n    return from + (to - from) * progress;\n};\n\nexport { mixNumber };\n","// Adapted from https://gist.github.com/mjackson/5311256\nfunction hueToRgb(p, q, t) {\n    if (t < 0)\n        t += 1;\n    if (t > 1)\n        t -= 1;\n    if (t < 1 / 6)\n        return p + (q - p) * 6 * t;\n    if (t < 1 / 2)\n        return q;\n    if (t < 2 / 3)\n        return p + (q - p) * (2 / 3 - t) * 6;\n    return p;\n}\nfunction hslaToRgba({ hue, saturation, lightness, alpha }) {\n    hue /= 360;\n    saturation /= 100;\n    lightness /= 100;\n    let red = 0;\n    let green = 0;\n    let blue = 0;\n    if (!saturation) {\n        red = green = blue = lightness;\n    }\n    else {\n        const q = lightness < 0.5\n            ? lightness * (1 + saturation)\n            : lightness + saturation - lightness * saturation;\n        const p = 2 * lightness - q;\n        red = hueToRgb(p, q, hue + 1 / 3);\n        green = hueToRgb(p, q, hue);\n        blue = hueToRgb(p, q, hue - 1 / 3);\n    }\n    return {\n        red: Math.round(red * 255),\n        green: Math.round(green * 255),\n        blue: Math.round(blue * 255),\n        alpha,\n    };\n}\n\nexport { hslaToRgba };\n","import { mixNumber } from './number.mjs';\nimport { invariant } from '../errors.mjs';\nimport { hslaToRgba } from '../hsla-to-rgba.mjs';\nimport { hex } from '../../value/types/color/hex.mjs';\nimport { rgba } from '../../value/types/color/rgba.mjs';\nimport { hsla } from '../../value/types/color/hsla.mjs';\n\n// Linear color space blending\n// Explained https://www.youtube.com/watch?v=LKnqECcg6Gw\n// Demonstrated http://codepen.io/osublake/pen/xGVVaN\nconst mixLinearColor = (from, to, v) => {\n    const fromExpo = from * from;\n    const expo = v * (to * to - fromExpo) + fromExpo;\n    return expo < 0 ? 0 : Math.sqrt(expo);\n};\nconst colorTypes = [hex, rgba, hsla];\nconst getColorType = (v) => colorTypes.find((type) => type.test(v));\nfunction asRGBA(color) {\n    const type = getColorType(color);\n    invariant(Boolean(type), `'${color}' is not an animatable color. Use the equivalent color code instead.`);\n    let model = type.parse(color);\n    if (type === hsla) {\n        // TODO Remove this cast - needed since Framer Motion's stricter typing\n        model = hslaToRgba(model);\n    }\n    return model;\n}\nconst mixColor = (from, to) => {\n    const fromRGBA = asRGBA(from);\n    const toRGBA = asRGBA(to);\n    const blended = { ...fromRGBA };\n    return (v) => {\n        blended.red = mixLinearColor(fromRGBA.red, toRGBA.red, v);\n        blended.green = mixLinearColor(fromRGBA.green, toRGBA.green, v);\n        blended.blue = mixLinearColor(fromRGBA.blue, toRGBA.blue, v);\n        blended.alpha = mixNumber(fromRGBA.alpha, toRGBA.alpha, v);\n        return rgba.transform(blended);\n    };\n};\n\nexport { mixColor, mixLinearColor };\n","import { mixNumber as mixNumber$1 } from './number.mjs';\nimport { mixColor } from './color.mjs';\nimport { pipe } from '../pipe.mjs';\nimport { warning } from '../errors.mjs';\nimport { color } from '../../value/types/color/index.mjs';\nimport { complex, analyseComplexValue } from '../../value/types/complex/index.mjs';\nimport { isCSSVariableToken } from '../../render/dom/utils/is-css-variable.mjs';\n\nfunction mixImmediate(a, b) {\n    return (p) => (p > 0 ? b : a);\n}\nfunction mixNumber(a, b) {\n    return (p) => mixNumber$1(a, b, p);\n}\nfunction getMixer(a) {\n    if (typeof a === \"number\") {\n        return mixNumber;\n    }\n    else if (typeof a === \"string\") {\n        return isCSSVariableToken(a)\n            ? mixImmediate\n            : color.test(a)\n                ? mixColor\n                : mixComplex;\n    }\n    else if (Array.isArray(a)) {\n        return mixArray;\n    }\n    else if (typeof a === \"object\") {\n        return color.test(a) ? mixColor : mixObject;\n    }\n    return mixImmediate;\n}\nfunction mixArray(a, b) {\n    const output = [...a];\n    const numValues = output.length;\n    const blendValue = a.map((v, i) => getMixer(v)(v, b[i]));\n    return (p) => {\n        for (let i = 0; i < numValues; i++) {\n            output[i] = blendValue[i](p);\n        }\n        return output;\n    };\n}\nfunction mixObject(a, b) {\n    const output = { ...a, ...b };\n    const blendValue = {};\n    for (const key in output) {\n        if (a[key] !== undefined && b[key] !== undefined) {\n            blendValue[key] = getMixer(a[key])(a[key], b[key]);\n        }\n    }\n    return (v) => {\n        for (const key in blendValue) {\n            output[key] = blendValue[key](v);\n        }\n        return output;\n    };\n}\nfunction matchOrder(origin, target) {\n    var _a;\n    const orderedOrigin = [];\n    const pointers = { color: 0, var: 0, number: 0 };\n    for (let i = 0; i < target.values.length; i++) {\n        const type = target.types[i];\n        const originIndex = origin.indexes[type][pointers[type]];\n        const originValue = (_a = origin.values[originIndex]) !== null && _a !== void 0 ? _a : 0;\n        orderedOrigin[i] = originValue;\n        pointers[type]++;\n    }\n    return orderedOrigin;\n}\nconst mixComplex = (origin, target) => {\n    const template = complex.createTransformer(target);\n    const originStats = analyseComplexValue(origin);\n    const targetStats = analyseComplexValue(target);\n    const canInterpolate = originStats.indexes.var.length === targetStats.indexes.var.length &&\n        originStats.indexes.color.length === targetStats.indexes.color.length &&\n        originStats.indexes.number.length >= targetStats.indexes.number.length;\n    if (canInterpolate) {\n        return pipe(mixArray(matchOrder(originStats, targetStats), targetStats.values), template);\n    }\n    else {\n        warning(true, `Complex values '${origin}' and '${target}' too different to mix. Ensure all colors are of the same type, and that each contains the same quantity of number and color values. Falling back to instant transition.`);\n        return mixImmediate(origin, target);\n    }\n};\n\nexport { getMixer, mixArray, mixComplex, mixObject };\n","import { getMixer } from './complex.mjs';\nimport { mixNumber } from './number.mjs';\n\nfunction mix(from, to, p) {\n    if (typeof from === \"number\" &&\n        typeof to === \"number\" &&\n        typeof p === \"number\") {\n        return mixNumber(from, to, p);\n    }\n    const mixer = getMixer(from);\n    return mixer(from, to);\n}\n\nexport { mix };\n","import { invariant } from './errors.mjs';\nimport { clamp } from './clamp.mjs';\nimport { pipe } from './pipe.mjs';\nimport { progress } from './progress.mjs';\nimport { noop } from './noop.mjs';\nimport { mix } from './mix/index.mjs';\n\nfunction createMixers(output, ease, customMixer) {\n    const mixers = [];\n    const mixerFactory = customMixer || mix;\n    const numMixers = output.length - 1;\n    for (let i = 0; i < numMixers; i++) {\n        let mixer = mixerFactory(output[i], output[i + 1]);\n        if (ease) {\n            const easingFunction = Array.isArray(ease) ? ease[i] || noop : ease;\n            mixer = pipe(easingFunction, mixer);\n        }\n        mixers.push(mixer);\n    }\n    return mixers;\n}\n/**\n * Create a function that maps from a numerical input array to a generic output array.\n *\n * Accepts:\n *   - Numbers\n *   - Colors (hex, hsl, hsla, rgb, rgba)\n *   - Complex (combinations of one or more numbers or strings)\n *\n * ```jsx\n * const mixColor = interpolate([0, 1], ['#fff', '#000'])\n *\n * mixColor(0.5) // 'rgba(128, 128, 128, 1)'\n * ```\n *\n * TODO Revist this approach once we've moved to data models for values,\n * probably not needed to pregenerate mixer functions.\n *\n * @public\n */\nfunction interpolate(input, output, { clamp: isClamp = true, ease, mixer } = {}) {\n    const inputLength = input.length;\n    invariant(inputLength === output.length, \"Both input and output ranges must be the same length\");\n    /**\n     * If we're only provided a single input, we can just make a function\n     * that returns the output.\n     */\n    if (inputLength === 1)\n        return () => output[0];\n    if (inputLength === 2 && input[0] === input[1])\n        return () => output[1];\n    // If input runs highest -> lowest, reverse both arrays\n    if (input[0] > input[inputLength - 1]) {\n        input = [...input].reverse();\n        output = [...output].reverse();\n    }\n    const mixers = createMixers(output, ease, mixer);\n    const numMixers = mixers.length;\n    const interpolator = (v) => {\n        let i = 0;\n        if (numMixers > 1) {\n            for (; i < input.length - 2; i++) {\n                if (v < input[i + 1])\n                    break;\n            }\n        }\n        const progressInRange = progress(input[i], input[i + 1], v);\n        return mixers[i](progressInRange);\n    };\n    return isClamp\n        ? (v) => interpolator(clamp(input[0], input[inputLength - 1], v))\n        : interpolator;\n}\n\nexport { interpolate };\n","import { fillOffset } from './fill.mjs';\n\nfunction defaultOffset(arr) {\n    const offset = [0];\n    fillOffset(offset, arr.length - 1);\n    return offset;\n}\n\nexport { defaultOffset };\n","import { mixNumber } from '../mix/number.mjs';\nimport { progress } from '../progress.mjs';\n\nfunction fillOffset(offset, remaining) {\n    const min = offset[offset.length - 1];\n    for (let i = 1; i <= remaining; i++) {\n        const offsetProgress = progress(0, remaining, i);\n        offset.push(mixNumber(min, 1, offsetProgress));\n    }\n}\n\nexport { fillOffset };\n","import { easeInOut } from '../../easing/ease.mjs';\nimport { isEasingArray } from '../../easing/utils/is-easing-array.mjs';\nimport { easingDefinitionToFunction } from '../../easing/utils/map.mjs';\nimport { interpolate } from '../../utils/interpolate.mjs';\nimport { defaultOffset } from '../../utils/offsets/default.mjs';\nimport { convertOffsetToTimes } from '../../utils/offsets/time.mjs';\n\nfunction defaultEasing(values, easing) {\n    return values.map(() => easing || easeInOut).splice(0, values.length - 1);\n}\nfunction keyframes({ duration = 300, keyframes: keyframeValues, times, ease = \"easeInOut\", }) {\n    /**\n     * Easing functions can be externally defined as strings. Here we convert them\n     * into actual functions.\n     */\n    const easingFunctions = isEasingArray(ease)\n        ? ease.map(easingDefinitionToFunction)\n        : easingDefinitionToFunction(ease);\n    /**\n     * This is the Iterator-spec return value. We ensure it's mutable rather than using a generator\n     * to reduce GC during animation.\n     */\n    const state = {\n        done: false,\n        value: keyframeValues[0],\n    };\n    /**\n     * Create a times array based on the provided 0-1 offsets\n     */\n    const absoluteTimes = convertOffsetToTimes(\n    // Only use the provided offsets if they're the correct length\n    // TODO Maybe we should warn here if there's a length mismatch\n    times && times.length === keyframeValues.length\n        ? times\n        : defaultOffset(keyframeValues), duration);\n    const mapTimeToKeyframe = interpolate(absoluteTimes, keyframeValues, {\n        ease: Array.isArray(easingFunctions)\n            ? easingFunctions\n            : defaultEasing(keyframeValues, easingFunctions),\n    });\n    return {\n        calculatedDuration: duration,\n        next: (t) => {\n            state.value = mapTimeToKeyframe(t);\n            state.done = t >= duration;\n            return state;\n        },\n    };\n}\n\nexport { defaultEasing, keyframes };\n","const isEasingArray = (ease) => {\n    return Array.isArray(ease) && typeof ease[0] !== \"number\";\n};\n\nexport { isEasingArray };\n","function convertOffsetToTimes(offset, duration) {\n    return offset.map((o) => o * duration);\n}\n\nexport { convertOffsetToTimes };\n","import { time } from '../../../frameloop/sync-time.mjs';\nimport { frame, cancelFrame, frameData } from '../../../frameloop/frame.mjs';\n\nconst frameloopDriver = (update) => {\n    const passTimestamp = ({ timestamp }) => update(timestamp);\n    return {\n        start: () => frame.update(passTimestamp, true),\n        stop: () => cancelFrame(passTimestamp),\n        /**\n         * If we're processing this frame we can use the\n         * framelocked timestamp to keep things in sync.\n         */\n        now: () => (frameData.isProcessing ? frameData.timestamp : time.now()),\n    };\n};\n\nexport { frameloopDriver };\n","import { KeyframeResolver } from '../../render/utils/KeyframesResolver.mjs';\nimport { spring } from '../generators/spring/index.mjs';\nimport { inertia } from '../generators/inertia.mjs';\nimport { keyframes } from '../generators/keyframes.mjs';\nimport { BaseAnimation } from './BaseAnimation.mjs';\nimport { pipe } from '../../utils/pipe.mjs';\nimport { mix } from '../../utils/mix/index.mjs';\nimport { calcGeneratorDuration } from '../generators/utils/calc-duration.mjs';\nimport { millisecondsToSeconds, secondsToMilliseconds } from '../../utils/time-conversion.mjs';\nimport { clamp } from '../../utils/clamp.mjs';\nimport { invariant } from '../../utils/errors.mjs';\nimport { frameloopDriver } from './drivers/driver-frameloop.mjs';\nimport { getFinalKeyframe } from './waapi/utils/get-final-keyframe.mjs';\n\nconst generators = {\n    decay: inertia,\n    inertia,\n    tween: keyframes,\n    keyframes: keyframes,\n    spring,\n};\nconst percentToProgress = (percent) => percent / 100;\n/**\n * Animation that runs on the main thread. Designed to be WAAPI-spec in the subset of\n * features we expose publically. Mostly the compatibility is to ensure visual identity\n * between both WAAPI and main thread animations.\n */\nclass MainThreadAnimation extends BaseAnimation {\n    constructor({ KeyframeResolver: KeyframeResolver$1 = KeyframeResolver, ...options }) {\n        super(options);\n        /**\n         * The time at which the animation was paused.\n         */\n        this.holdTime = null;\n        /**\n         * The time at which the animation was started.\n         */\n        this.startTime = null;\n        /**\n         * The time at which the animation was cancelled.\n         */\n        this.cancelTime = null;\n        /**\n         * The current time of the animation.\n         */\n        this.currentTime = 0;\n        /**\n         * Playback speed as a factor. 0 would be stopped, -1 reverse and 2 double speed.\n         */\n        this.playbackSpeed = 1;\n        /**\n         * The state of the animation to apply when the animation is resolved. This\n         * allows calls to the public API to control the animation before it is resolved,\n         * without us having to resolve it first.\n         */\n        this.pendingPlayState = \"running\";\n        this.state = \"idle\";\n        /**\n         * This method is bound to the instance to fix a pattern where\n         * animation.stop is returned as a reference from a useEffect.\n         */\n        this.stop = () => {\n            this.resolver.cancel();\n            this.isStopped = true;\n            if (this.state === \"idle\")\n                return;\n            this.teardown();\n            const { onStop } = this.options;\n            onStop && onStop();\n        };\n        const { name, motionValue, keyframes } = this.options;\n        const onResolved = (resolvedKeyframes, finalKeyframe) => this.onKeyframesResolved(resolvedKeyframes, finalKeyframe);\n        if (name && motionValue && motionValue.owner) {\n            this.resolver = motionValue.owner.resolveKeyframes(keyframes, onResolved, name, motionValue);\n        }\n        else {\n            this.resolver = new KeyframeResolver$1(keyframes, onResolved, name, motionValue);\n        }\n        this.resolver.scheduleResolve();\n    }\n    initPlayback(keyframes$1) {\n        const { type = \"keyframes\", repeat = 0, repeatDelay = 0, repeatType, velocity = 0, } = this.options;\n        const generatorFactory = generators[type] || keyframes;\n        /**\n         * If our generator doesn't support mixing numbers, we need to replace keyframes with\n         * [0, 100] and then make a function that maps that to the actual keyframes.\n         *\n         * 100 is chosen instead of 1 as it works nicer with spring animations.\n         */\n        let mapPercentToKeyframes;\n        let mirroredGenerator;\n        if (generatorFactory !== keyframes &&\n            typeof keyframes$1[0] !== \"number\") {\n            if (process.env.NODE_ENV !== \"production\") {\n                invariant(keyframes$1.length === 2, `Only two keyframes currently supported with spring and inertia animations. Trying to animate ${keyframes$1}`);\n            }\n            mapPercentToKeyframes = pipe(percentToProgress, mix(keyframes$1[0], keyframes$1[1]));\n            keyframes$1 = [0, 100];\n        }\n        const generator = generatorFactory({ ...this.options, keyframes: keyframes$1 });\n        /**\n         * If we have a mirror repeat type we need to create a second generator that outputs the\n         * mirrored (not reversed) animation and later ping pong between the two generators.\n         */\n        if (repeatType === \"mirror\") {\n            mirroredGenerator = generatorFactory({\n                ...this.options,\n                keyframes: [...keyframes$1].reverse(),\n                velocity: -velocity,\n            });\n        }\n        /**\n         * If duration is undefined and we have repeat options,\n         * we need to calculate a duration from the generator.\n         *\n         * We set it to the generator itself to cache the duration.\n         * Any timeline resolver will need to have already precalculated\n         * the duration by this step.\n         */\n        if (generator.calculatedDuration === null) {\n            generator.calculatedDuration = calcGeneratorDuration(generator);\n        }\n        const { calculatedDuration } = generator;\n        const resolvedDuration = calculatedDuration + repeatDelay;\n        const totalDuration = resolvedDuration * (repeat + 1) - repeatDelay;\n        return {\n            generator,\n            mirroredGenerator,\n            mapPercentToKeyframes,\n            calculatedDuration,\n            resolvedDuration,\n            totalDuration,\n        };\n    }\n    onPostResolved() {\n        const { autoplay = true } = this.options;\n        this.play();\n        if (this.pendingPlayState === \"paused\" || !autoplay) {\n            this.pause();\n        }\n        else {\n            this.state = this.pendingPlayState;\n        }\n    }\n    tick(timestamp, sample = false) {\n        const { resolved } = this;\n        // If the animations has failed to resolve, return the final keyframe.\n        if (!resolved) {\n            const { keyframes } = this.options;\n            return { done: true, value: keyframes[keyframes.length - 1] };\n        }\n        const { finalKeyframe, generator, mirroredGenerator, mapPercentToKeyframes, keyframes, calculatedDuration, totalDuration, resolvedDuration, } = resolved;\n        if (this.startTime === null)\n            return generator.next(0);\n        const { delay, repeat, repeatType, repeatDelay, onUpdate } = this.options;\n        /**\n         * requestAnimationFrame timestamps can come through as lower than\n         * the startTime as set by performance.now(). Here we prevent this,\n         * though in the future it could be possible to make setting startTime\n         * a pending operation that gets resolved here.\n         */\n        if (this.speed > 0) {\n            this.startTime = Math.min(this.startTime, timestamp);\n        }\n        else if (this.speed < 0) {\n            this.startTime = Math.min(timestamp - totalDuration / this.speed, this.startTime);\n        }\n        // Update currentTime\n        if (sample) {\n            this.currentTime = timestamp;\n        }\n        else if (this.holdTime !== null) {\n            this.currentTime = this.holdTime;\n        }\n        else {\n            // Rounding the time because floating point arithmetic is not always accurate, e.g. 3000.367 - 1000.367 =\n            // 2000.0000000000002. This is a problem when we are comparing the currentTime with the duration, for\n            // example.\n            this.currentTime =\n                Math.round(timestamp - this.startTime) * this.speed;\n        }\n        // Rebase on delay\n        const timeWithoutDelay = this.currentTime - delay * (this.speed >= 0 ? 1 : -1);\n        const isInDelayPhase = this.speed >= 0\n            ? timeWithoutDelay < 0\n            : timeWithoutDelay > totalDuration;\n        this.currentTime = Math.max(timeWithoutDelay, 0);\n        // If this animation has finished, set the current time  to the total duration.\n        if (this.state === \"finished\" && this.holdTime === null) {\n            this.currentTime = totalDuration;\n        }\n        let elapsed = this.currentTime;\n        let frameGenerator = generator;\n        if (repeat) {\n            /**\n             * Get the current progress (0-1) of the animation. If t is >\n             * than duration we'll get values like 2.5 (midway through the\n             * third iteration)\n             */\n            const progress = Math.min(this.currentTime, totalDuration) / resolvedDuration;\n            /**\n             * Get the current iteration (0 indexed). For instance the floor of\n             * 2.5 is 2.\n             */\n            let currentIteration = Math.floor(progress);\n            /**\n             * Get the current progress of the iteration by taking the remainder\n             * so 2.5 is 0.5 through iteration 2\n             */\n            let iterationProgress = progress % 1.0;\n            /**\n             * If iteration progress is 1 we count that as the end\n             * of the previous iteration.\n             */\n            if (!iterationProgress && progress >= 1) {\n                iterationProgress = 1;\n            }\n            iterationProgress === 1 && currentIteration--;\n            currentIteration = Math.min(currentIteration, repeat + 1);\n            /**\n             * Reverse progress if we're not running in \"normal\" direction\n             */\n            const isOddIteration = Boolean(currentIteration % 2);\n            if (isOddIteration) {\n                if (repeatType === \"reverse\") {\n                    iterationProgress = 1 - iterationProgress;\n                    if (repeatDelay) {\n                        iterationProgress -= repeatDelay / resolvedDuration;\n                    }\n                }\n                else if (repeatType === \"mirror\") {\n                    frameGenerator = mirroredGenerator;\n                }\n            }\n            elapsed = clamp(0, 1, iterationProgress) * resolvedDuration;\n        }\n        /**\n         * If we're in negative time, set state as the initial keyframe.\n         * This prevents delay: x, duration: 0 animations from finishing\n         * instantly.\n         */\n        const state = isInDelayPhase\n            ? { done: false, value: keyframes[0] }\n            : frameGenerator.next(elapsed);\n        if (mapPercentToKeyframes) {\n            state.value = mapPercentToKeyframes(state.value);\n        }\n        let { done } = state;\n        if (!isInDelayPhase && calculatedDuration !== null) {\n            done =\n                this.speed >= 0\n                    ? this.currentTime >= totalDuration\n                    : this.currentTime <= 0;\n        }\n        const isAnimationFinished = this.holdTime === null &&\n            (this.state === \"finished\" || (this.state === \"running\" && done));\n        if (isAnimationFinished && finalKeyframe !== undefined) {\n            state.value = getFinalKeyframe(keyframes, this.options, finalKeyframe);\n        }\n        if (onUpdate) {\n            onUpdate(state.value);\n        }\n        if (isAnimationFinished) {\n            this.finish();\n        }\n        return state;\n    }\n    get duration() {\n        const { resolved } = this;\n        return resolved ? millisecondsToSeconds(resolved.calculatedDuration) : 0;\n    }\n    get time() {\n        return millisecondsToSeconds(this.currentTime);\n    }\n    set time(newTime) {\n        newTime = secondsToMilliseconds(newTime);\n        this.currentTime = newTime;\n        if (this.holdTime !== null || this.speed === 0) {\n            this.holdTime = newTime;\n        }\n        else if (this.driver) {\n            this.startTime = this.driver.now() - newTime / this.speed;\n        }\n    }\n    get speed() {\n        return this.playbackSpeed;\n    }\n    set speed(newSpeed) {\n        const hasChanged = this.playbackSpeed !== newSpeed;\n        this.playbackSpeed = newSpeed;\n        if (hasChanged) {\n            this.time = millisecondsToSeconds(this.currentTime);\n        }\n    }\n    play() {\n        if (!this.resolver.isScheduled) {\n            this.resolver.resume();\n        }\n        if (!this._resolved) {\n            this.pendingPlayState = \"running\";\n            return;\n        }\n        if (this.isStopped)\n            return;\n        const { driver = frameloopDriver, onPlay } = this.options;\n        if (!this.driver) {\n            this.driver = driver((timestamp) => this.tick(timestamp));\n        }\n        onPlay && onPlay();\n        const now = this.driver.now();\n        if (this.holdTime !== null) {\n            this.startTime = now - this.holdTime;\n        }\n        else if (!this.startTime || this.state === \"finished\") {\n            this.startTime = now;\n        }\n        if (this.state === \"finished\") {\n            this.updateFinishedPromise();\n        }\n        this.cancelTime = this.startTime;\n        this.holdTime = null;\n        /**\n         * Set playState to running only after we've used it in\n         * the previous logic.\n         */\n        this.state = \"running\";\n        this.driver.start();\n    }\n    pause() {\n        var _a;\n        if (!this._resolved) {\n            this.pendingPlayState = \"paused\";\n            return;\n        }\n        this.state = \"paused\";\n        this.holdTime = (_a = this.currentTime) !== null && _a !== void 0 ? _a : 0;\n    }\n    complete() {\n        if (this.state !== \"running\") {\n            this.play();\n        }\n        this.pendingPlayState = this.state = \"finished\";\n        this.holdTime = null;\n    }\n    finish() {\n        this.teardown();\n        this.state = \"finished\";\n        const { onComplete } = this.options;\n        onComplete && onComplete();\n    }\n    cancel() {\n        if (this.cancelTime !== null) {\n            this.tick(this.cancelTime);\n        }\n        this.teardown();\n        this.updateFinishedPromise();\n    }\n    teardown() {\n        this.state = \"idle\";\n        this.stopDriver();\n        this.resolveFinishedPromise();\n        this.updateFinishedPromise();\n        this.startTime = this.cancelTime = null;\n        this.resolver.cancel();\n    }\n    stopDriver() {\n        if (!this.driver)\n            return;\n        this.driver.stop();\n        this.driver = undefined;\n    }\n    sample(time) {\n        this.startTime = 0;\n        return this.tick(time, true);\n    }\n}\n// Legacy interface\nfunction animateValue(options) {\n    return new MainThreadAnimation(options);\n}\n\nexport { MainThreadAnimation, animateValue };\n","/**\n * Implement a practical max duration for keyframe generation\n * to prevent infinite loops\n */\nconst maxGeneratorDuration = 20000;\nfunction calcGeneratorDuration(generator) {\n    let duration = 0;\n    const timeStep = 50;\n    let state = generator.next(duration);\n    while (!state.done && duration < maxGeneratorDuration) {\n        duration += timeStep;\n        state = generator.next(duration);\n    }\n    return duration >= maxGeneratorDuration ? Infinity : duration;\n}\n\nexport { calcGeneratorDuration, maxGeneratorDuration };\n","const isBezierDefinition = (easing) => Array.isArray(easing) && typeof easing[0] === \"number\";\n\nexport { isBezierDefinition };\n","import { isBezierDefinition } from '../../../easing/utils/is-bezier-definition.mjs';\n\nfunction isWaapiSupportedEasing(easing) {\n    return Boolean(!easing ||\n        (typeof easing === \"string\" && easing in supportedWaapiEasing) ||\n        isBezierDefinition(easing) ||\n        (Array.isArray(easing) && easing.every(isWaapiSupportedEasing)));\n}\nconst cubicBezierAsString = ([a, b, c, d]) => `cubic-bezier(${a}, ${b}, ${c}, ${d})`;\nconst supportedWaapiEasing = {\n    linear: \"linear\",\n    ease: \"ease\",\n    easeIn: \"ease-in\",\n    easeOut: \"ease-out\",\n    easeInOut: \"ease-in-out\",\n    circIn: cubicBezierAsString([0, 0.65, 0.55, 1]),\n    circOut: cubicBezierAsString([0.55, 0, 1, 0.45]),\n    backIn: cubicBezierAsString([0.31, 0.01, 0.66, -0.59]),\n    backOut: cubicBezierAsString([0.33, 1.53, 0.69, 0.99]),\n};\nfunction mapEasingToNativeEasingWithDefault(easing) {\n    return (mapEasingToNativeEasing(easing) ||\n        supportedWaapiEasing.easeOut);\n}\nfunction mapEasingToNativeEasing(easing) {\n    if (!easing) {\n        return undefined;\n    }\n    else if (isBezierDefinition(easing)) {\n        return cubicBezierAsString(easing);\n    }\n    else if (Array.isArray(easing)) {\n        return easing.map(mapEasingToNativeEasingWithDefault);\n    }\n    else {\n        return supportedWaapiEasing[easing];\n    }\n}\n\nexport { cubicBezierAsString, isWaapiSupportedEasing, mapEasingToNativeEasing, supportedWaapiEasing };\n","import { time } from '../../frameloop/sync-time.mjs';\nimport { DOMKeyframesResolver } from '../../render/dom/DOMKeyframesResolver.mjs';\nimport { memo } from '../../utils/memo.mjs';\nimport { noop } from '../../utils/noop.mjs';\nimport { millisecondsToSeconds, secondsToMilliseconds } from '../../utils/time-conversion.mjs';\nimport { BaseAnimation } from './BaseAnimation.mjs';\nimport { MainThreadAnimation } from './MainThreadAnimation.mjs';\nimport { animateStyle } from './waapi/index.mjs';\nimport { isWaapiSupportedEasing } from './waapi/easing.mjs';\nimport { getFinalKeyframe } from './waapi/utils/get-final-keyframe.mjs';\n\nconst supportsWaapi = memo(() => Object.hasOwnProperty.call(Element.prototype, \"animate\"));\n/**\n * A list of values that can be hardware-accelerated.\n */\nconst acceleratedValues = new Set([\n    \"opacity\",\n    \"clipPath\",\n    \"filter\",\n    \"transform\",\n    // TODO: Can be accelerated but currently disabled until https://issues.chromium.org/issues/41491098 is resolved\n    // or until we implement support for linear() easing.\n    // \"background-color\"\n]);\n/**\n * 10ms is chosen here as it strikes a balance between smooth\n * results (more than one keyframe per frame at 60fps) and\n * keyframe quantity.\n */\nconst sampleDelta = 10; //ms\n/**\n * Implement a practical max duration for keyframe generation\n * to prevent infinite loops\n */\nconst maxDuration = 20000;\n/**\n * Check if an animation can run natively via WAAPI or requires pregenerated keyframes.\n * WAAPI doesn't support spring or function easings so we run these as JS animation before\n * handing off.\n */\nfunction requiresPregeneratedKeyframes(options) {\n    return (options.type === \"spring\" ||\n        options.name === \"backgroundColor\" ||\n        !isWaapiSupportedEasing(options.ease));\n}\nfunction pregenerateKeyframes(keyframes, options) {\n    /**\n     * Create a main-thread animation to pregenerate keyframes.\n     * We sample this at regular intervals to generate keyframes that we then\n     * linearly interpolate between.\n     */\n    const sampleAnimation = new MainThreadAnimation({\n        ...options,\n        keyframes,\n        repeat: 0,\n        delay: 0,\n        isGenerator: true,\n    });\n    let state = { done: false, value: keyframes[0] };\n    const pregeneratedKeyframes = [];\n    /**\n     * Bail after 20 seconds of pre-generated keyframes as it's likely\n     * we're heading for an infinite loop.\n     */\n    let t = 0;\n    while (!state.done && t < maxDuration) {\n        state = sampleAnimation.sample(t);\n        pregeneratedKeyframes.push(state.value);\n        t += sampleDelta;\n    }\n    return {\n        times: undefined,\n        keyframes: pregeneratedKeyframes,\n        duration: t - sampleDelta,\n        ease: \"linear\",\n    };\n}\nclass AcceleratedAnimation extends BaseAnimation {\n    constructor(options) {\n        super(options);\n        const { name, motionValue, keyframes } = this.options;\n        this.resolver = new DOMKeyframesResolver(keyframes, (resolvedKeyframes, finalKeyframe) => this.onKeyframesResolved(resolvedKeyframes, finalKeyframe), name, motionValue);\n        this.resolver.scheduleResolve();\n    }\n    initPlayback(keyframes, finalKeyframe) {\n        var _a;\n        let { duration = 300, times, ease, type, motionValue, name, } = this.options;\n        /**\n         * If element has since been unmounted, return false to indicate\n         * the animation failed to initialised.\n         */\n        if (!((_a = motionValue.owner) === null || _a === void 0 ? void 0 : _a.current)) {\n            return false;\n        }\n        /**\n         * If this animation needs pre-generated keyframes then generate.\n         */\n        if (requiresPregeneratedKeyframes(this.options)) {\n            const { onComplete, onUpdate, motionValue, ...options } = this.options;\n            const pregeneratedAnimation = pregenerateKeyframes(keyframes, options);\n            keyframes = pregeneratedAnimation.keyframes;\n            // If this is a very short animation, ensure we have\n            // at least two keyframes to animate between as older browsers\n            // can't animate between a single keyframe.\n            if (keyframes.length === 1) {\n                keyframes[1] = keyframes[0];\n            }\n            duration = pregeneratedAnimation.duration;\n            times = pregeneratedAnimation.times;\n            ease = pregeneratedAnimation.ease;\n            type = \"keyframes\";\n        }\n        const animation = animateStyle(motionValue.owner.current, name, keyframes, { ...this.options, duration, times, ease });\n        // Override the browser calculated startTime with one synchronised to other JS\n        // and WAAPI animations starting this event loop.\n        animation.startTime = time.now();\n        if (this.pendingTimeline) {\n            animation.timeline = this.pendingTimeline;\n            this.pendingTimeline = undefined;\n        }\n        else {\n            /**\n             * Prefer the `onfinish` prop as it's more widely supported than\n             * the `finished` promise.\n             *\n             * Here, we synchronously set the provided MotionValue to the end\n             * keyframe. If we didn't, when the WAAPI animation is finished it would\n             * be removed from the element which would then revert to its old styles.\n             */\n            animation.onfinish = () => {\n                const { onComplete } = this.options;\n                motionValue.set(getFinalKeyframe(keyframes, this.options, finalKeyframe));\n                onComplete && onComplete();\n                this.cancel();\n                this.resolveFinishedPromise();\n            };\n        }\n        return {\n            animation,\n            duration,\n            times,\n            type,\n            ease,\n            keyframes: keyframes,\n        };\n    }\n    get duration() {\n        const { resolved } = this;\n        if (!resolved)\n            return 0;\n        const { duration } = resolved;\n        return millisecondsToSeconds(duration);\n    }\n    get time() {\n        const { resolved } = this;\n        if (!resolved)\n            return 0;\n        const { animation } = resolved;\n        return millisecondsToSeconds(animation.currentTime || 0);\n    }\n    set time(newTime) {\n        const { resolved } = this;\n        if (!resolved)\n            return;\n        const { animation } = resolved;\n        animation.currentTime = secondsToMilliseconds(newTime);\n    }\n    get speed() {\n        const { resolved } = this;\n        if (!resolved)\n            return 1;\n        const { animation } = resolved;\n        return animation.playbackRate;\n    }\n    set speed(newSpeed) {\n        const { resolved } = this;\n        if (!resolved)\n            return;\n        const { animation } = resolved;\n        animation.playbackRate = newSpeed;\n    }\n    get state() {\n        const { resolved } = this;\n        if (!resolved)\n            return \"idle\";\n        const { animation } = resolved;\n        return animation.playState;\n    }\n    /**\n     * Replace the default DocumentTimeline with another AnimationTimeline.\n     * Currently used for scroll animations.\n     */\n    attachTimeline(timeline) {\n        if (!this._resolved) {\n            this.pendingTimeline = timeline;\n        }\n        else {\n            const { resolved } = this;\n            if (!resolved)\n                return noop;\n            const { animation } = resolved;\n            animation.timeline = timeline;\n            animation.onfinish = null;\n        }\n        return noop;\n    }\n    play() {\n        if (this.isStopped)\n            return;\n        const { resolved } = this;\n        if (!resolved)\n            return;\n        const { animation } = resolved;\n        if (animation.playState === \"finished\") {\n            this.updateFinishedPromise();\n        }\n        animation.play();\n    }\n    pause() {\n        const { resolved } = this;\n        if (!resolved)\n            return;\n        const { animation } = resolved;\n        animation.pause();\n    }\n    stop() {\n        this.resolver.cancel();\n        this.isStopped = true;\n        if (this.state === \"idle\")\n            return;\n        const { resolved } = this;\n        if (!resolved)\n            return;\n        const { animation, keyframes, duration, type, ease, times } = resolved;\n        if (animation.playState === \"idle\" ||\n            animation.playState === \"finished\") {\n            return;\n        }\n        /**\n         * WAAPI doesn't natively have any interruption capabilities.\n         *\n         * Rather than read commited styles back out of the DOM, we can\n         * create a renderless JS animation and sample it twice to calculate\n         * its current value, \"previous\" value, and therefore allow\n         * Motion to calculate velocity for any subsequent animation.\n         */\n        if (this.time) {\n            const { motionValue, onUpdate, onComplete, ...options } = this.options;\n            const sampleAnimation = new MainThreadAnimation({\n                ...options,\n                keyframes,\n                duration,\n                type,\n                ease,\n                times,\n                isGenerator: true,\n            });\n            const sampleTime = secondsToMilliseconds(this.time);\n            motionValue.setWithVelocity(sampleAnimation.sample(sampleTime - sampleDelta).value, sampleAnimation.sample(sampleTime).value, sampleDelta);\n        }\n        this.cancel();\n    }\n    complete() {\n        const { resolved } = this;\n        if (!resolved)\n            return;\n        resolved.animation.finish();\n    }\n    cancel() {\n        const { resolved } = this;\n        if (!resolved)\n            return;\n        resolved.animation.cancel();\n    }\n    static supports(options) {\n        const { motionValue, name, repeatDelay, repeatType, damping, type } = options;\n        return (supportsWaapi() &&\n            name &&\n            acceleratedValues.has(name) &&\n            motionValue &&\n            motionValue.owner &&\n            motionValue.owner.current instanceof HTMLElement &&\n            /**\n             * If we're outputting values to onUpdate then we can't use WAAPI as there's\n             * no way to read the value from WAAPI every frame.\n             */\n            !motionValue.owner.getProps().onUpdate &&\n            !repeatDelay &&\n            repeatType !== \"mirror\" &&\n            damping !== 0 &&\n            type !== \"inertia\");\n    }\n}\n\nexport { AcceleratedAnimation };\n","function memo(callback) {\n    let result;\n    return () => {\n        if (result === undefined)\n            result = callback();\n        return result;\n    };\n}\n\nexport { memo };\n","import { mapEasingToNativeEasing } from './easing.mjs';\n\nfunction animateStyle(element, valueName, keyframes, { delay = 0, duration = 300, repeat = 0, repeatType = \"loop\", ease, times, } = {}) {\n    const keyframeOptions = { [valueName]: keyframes };\n    if (times)\n        keyframeOptions.offset = times;\n    const easing = mapEasingToNativeEasing(ease);\n    /**\n     * If this is an easing array, apply to keyframes, not animation as a whole\n     */\n    if (Array.isArray(easing))\n        keyframeOptions.easing = easing;\n    return element.animate(keyframeOptions, {\n        delay,\n        duration,\n        easing: !Array.isArray(easing) ? easing : \"linear\",\n        fill: \"both\",\n        iterations: repeat + 1,\n        direction: repeatType === \"reverse\" ? \"alternate\" : \"normal\",\n    });\n}\n\nexport { animateStyle };\n","import { secondsToMilliseconds } from '../../utils/time-conversion.mjs';\nimport { getDefaultTransition } from '../utils/default-transitions.mjs';\nimport { getValueTransition, isTransitionDefined } from '../utils/transitions.mjs';\nimport { MotionGlobalConfig } from '../../utils/GlobalConfig.mjs';\nimport { instantAnimationState } from '../../utils/use-instant-transition-state.mjs';\nimport { getFinalKeyframe } from '../animators/waapi/utils/get-final-keyframe.mjs';\nimport { frame } from '../../frameloop/frame.mjs';\nimport { AcceleratedAnimation } from '../animators/AcceleratedAnimation.mjs';\nimport { MainThreadAnimation } from '../animators/MainThreadAnimation.mjs';\n\nconst animateMotionValue = (name, value, target, transition = {}, element, isHandoff) => (onComplete) => {\n    const valueTransition = getValueTransition(transition, name) || {};\n    /**\n     * Most transition values are currently completely overwritten by value-specific\n     * transitions. In the future it'd be nicer to blend these transitions. But for now\n     * delay actually does inherit from the root transition if not value-specific.\n     */\n    const delay = valueTransition.delay || transition.delay || 0;\n    /**\n     * Elapsed isn't a public transition option but can be passed through from\n     * optimized appear effects in milliseconds.\n     */\n    let { elapsed = 0 } = transition;\n    elapsed = elapsed - secondsToMilliseconds(delay);\n    let options = {\n        keyframes: Array.isArray(target) ? target : [null, target],\n        ease: \"easeOut\",\n        velocity: value.getVelocity(),\n        ...valueTransition,\n        delay: -elapsed,\n        onUpdate: (v) => {\n            value.set(v);\n            valueTransition.onUpdate && valueTransition.onUpdate(v);\n        },\n        onComplete: () => {\n            onComplete();\n            valueTransition.onComplete && valueTransition.onComplete();\n        },\n        name,\n        motionValue: value,\n        element: isHandoff ? undefined : element,\n    };\n    /**\n     * If there's no transition defined for this value, we can generate\n     * unqiue transition settings for this value.\n     */\n    if (!isTransitionDefined(valueTransition)) {\n        options = {\n            ...options,\n            ...getDefaultTransition(name, options),\n        };\n    }\n    /**\n     * Both WAAPI and our internal animation functions use durations\n     * as defined by milliseconds, while our external API defines them\n     * as seconds.\n     */\n    if (options.duration) {\n        options.duration = secondsToMilliseconds(options.duration);\n    }\n    if (options.repeatDelay) {\n        options.repeatDelay = secondsToMilliseconds(options.repeatDelay);\n    }\n    if (options.from !== undefined) {\n        options.keyframes[0] = options.from;\n    }\n    let shouldSkip = false;\n    if (options.type === false ||\n        (options.duration === 0 && !options.repeatDelay)) {\n        options.duration = 0;\n        if (options.delay === 0) {\n            shouldSkip = true;\n        }\n    }\n    if (instantAnimationState.current ||\n        MotionGlobalConfig.skipAnimations) {\n        shouldSkip = true;\n        options.duration = 0;\n        options.delay = 0;\n    }\n    /**\n     * If we can or must skip creating the animation, and apply only\n     * the final keyframe, do so. We also check once keyframes are resolved but\n     * this early check prevents the need to create an animation at all.\n     */\n    if (shouldSkip && !isHandoff && value.get() !== undefined) {\n        const finalKeyframe = getFinalKeyframe(options.keyframes, valueTransition);\n        if (finalKeyframe !== undefined) {\n            frame.update(() => {\n                options.onUpdate(finalKeyframe);\n                options.onComplete();\n            });\n            return;\n        }\n    }\n    /**\n     * Animate via WAAPI if possible. If this is a handoff animation, the optimised animation will be running via\n     * WAAPI. Therefore, this animation must be JS to ensure it runs \"under\" the\n     * optimised animation.\n     */\n    if (!isHandoff && AcceleratedAnimation.supports(options)) {\n        return new AcceleratedAnimation(options);\n    }\n    else {\n        return new MainThreadAnimation(options);\n    }\n};\n\nexport { animateMotionValue };\n","import { isMotionValue } from '../utils/is-motion-value.mjs';\n\nfunction isWillChangeMotionValue(value) {\n    return Boolean(isMotionValue(value) && value.add);\n}\n\nexport { isWillChangeMotionValue };\n","function addUniqueItem(arr, item) {\n    if (arr.indexOf(item) === -1)\n        arr.push(item);\n}\nfunction removeItem(arr, item) {\n    const index = arr.indexOf(item);\n    if (index > -1)\n        arr.splice(index, 1);\n}\n// Adapted from array-move\nfunction moveItem([...arr], fromIndex, toIndex) {\n    const startIndex = fromIndex < 0 ? arr.length + fromIndex : fromIndex;\n    if (startIndex >= 0 && startIndex < arr.length) {\n        const endIndex = toIndex < 0 ? arr.length + toIndex : toIndex;\n        const [item] = arr.splice(fromIndex, 1);\n        arr.splice(endIndex, 0, item);\n    }\n    return arr;\n}\n\nexport { addUniqueItem, moveItem, removeItem };\n","import { addUniqueItem, removeItem } from './array.mjs';\n\nclass SubscriptionManager {\n    constructor() {\n        this.subscriptions = [];\n    }\n    add(handler) {\n        addUniqueItem(this.subscriptions, handler);\n        return () => removeItem(this.subscriptions, handler);\n    }\n    notify(a, b, c) {\n        const numSubscriptions = this.subscriptions.length;\n        if (!numSubscriptions)\n            return;\n        if (numSubscriptions === 1) {\n            /**\n             * If there's only a single handler we can just call it without invoking a loop.\n             */\n            this.subscriptions[0](a, b, c);\n        }\n        else {\n            for (let i = 0; i < numSubscriptions; i++) {\n                /**\n                 * Check whether the handler exists before firing as it's possible\n                 * the subscriptions were modified during this loop running.\n                 */\n                const handler = this.subscriptions[i];\n                handler && handler(a, b, c);\n            }\n        }\n    }\n    getSize() {\n        return this.subscriptions.length;\n    }\n    clear() {\n        this.subscriptions.length = 0;\n    }\n}\n\nexport { SubscriptionManager };\n","import { SubscriptionManager } from '../utils/subscription-manager.mjs';\nimport { velocityPerSecond } from '../utils/velocity-per-second.mjs';\nimport { warnOnce } from '../utils/warn-once.mjs';\nimport { time } from '../frameloop/sync-time.mjs';\nimport { frame } from '../frameloop/frame.mjs';\n\n/**\n * Maximum time between the value of two frames, beyond which we\n * assume the velocity has since been 0.\n */\nconst MAX_VELOCITY_DELTA = 30;\nconst isFloat = (value) => {\n    return !isNaN(parseFloat(value));\n};\nconst collectMotionValues = {\n    current: undefined,\n};\n/**\n * `MotionValue` is used to track the state and velocity of motion values.\n *\n * @public\n */\nclass MotionValue {\n    /**\n     * @param init - The initiating value\n     * @param config - Optional configuration options\n     *\n     * -  `transformer`: A function to transform incoming values with.\n     *\n     * @internal\n     */\n    constructor(init, options = {}) {\n        /**\n         * This will be replaced by the build step with the latest version number.\n         * When MotionValues are provided to motion components, warn if versions are mixed.\n         */\n        this.version = \"11.1.7\";\n        /**\n         * Tracks whether this value can output a velocity. Currently this is only true\n         * if the value is numerical, but we might be able to widen the scope here and support\n         * other value types.\n         *\n         * @internal\n         */\n        this.canTrackVelocity = false;\n        /**\n         * An object containing a SubscriptionManager for each active event.\n         */\n        this.events = {};\n        this.updateAndNotify = (v, render = true) => {\n            const currentTime = time.now();\n            /**\n             * If we're updating the value during another frame or eventloop\n             * than the previous frame, then the we set the previous frame value\n             * to current.\n             */\n            if (this.updatedAt !== currentTime) {\n                this.setPrevFrameValue();\n            }\n            this.prev = this.current;\n            this.setCurrent(v);\n            // Update update subscribers\n            if (this.current !== this.prev && this.events.change) {\n                this.events.change.notify(this.current);\n            }\n            // Update render subscribers\n            if (render && this.events.renderRequest) {\n                this.events.renderRequest.notify(this.current);\n            }\n        };\n        this.hasAnimated = false;\n        this.setCurrent(init);\n        this.canTrackVelocity = isFloat(this.current);\n        this.owner = options.owner;\n    }\n    setCurrent(current) {\n        this.current = current;\n        this.updatedAt = time.now();\n    }\n    setPrevFrameValue(prevFrameValue = this.current) {\n        this.prevFrameValue = prevFrameValue;\n        this.prevUpdatedAt = this.updatedAt;\n    }\n    /**\n     * Adds a function that will be notified when the `MotionValue` is updated.\n     *\n     * It returns a function that, when called, will cancel the subscription.\n     *\n     * When calling `onChange` inside a React component, it should be wrapped with the\n     * `useEffect` hook. As it returns an unsubscribe function, this should be returned\n     * from the `useEffect` function to ensure you don't add duplicate subscribers..\n     *\n     * ```jsx\n     * export const MyComponent = () => {\n     *   const x = useMotionValue(0)\n     *   const y = useMotionValue(0)\n     *   const opacity = useMotionValue(1)\n     *\n     *   useEffect(() => {\n     *     function updateOpacity() {\n     *       const maxXY = Math.max(x.get(), y.get())\n     *       const newOpacity = transform(maxXY, [0, 100], [1, 0])\n     *       opacity.set(newOpacity)\n     *     }\n     *\n     *     const unsubscribeX = x.on(\"change\", updateOpacity)\n     *     const unsubscribeY = y.on(\"change\", updateOpacity)\n     *\n     *     return () => {\n     *       unsubscribeX()\n     *       unsubscribeY()\n     *     }\n     *   }, [])\n     *\n     *   return <motion.div style={{ x }} />\n     * }\n     * ```\n     *\n     * @param subscriber - A function that receives the latest value.\n     * @returns A function that, when called, will cancel this subscription.\n     *\n     * @deprecated\n     */\n    onChange(subscription) {\n        if (process.env.NODE_ENV !== \"production\") {\n            warnOnce(false, `value.onChange(callback) is deprecated. Switch to value.on(\"change\", callback).`);\n        }\n        return this.on(\"change\", subscription);\n    }\n    on(eventName, callback) {\n        if (!this.events[eventName]) {\n            this.events[eventName] = new SubscriptionManager();\n        }\n        const unsubscribe = this.events[eventName].add(callback);\n        if (eventName === \"change\") {\n            return () => {\n                unsubscribe();\n                /**\n                 * If we have no more change listeners by the start\n                 * of the next frame, stop active animations.\n                 */\n                frame.read(() => {\n                    if (!this.events.change.getSize()) {\n                        this.stop();\n                    }\n                });\n            };\n        }\n        return unsubscribe;\n    }\n    clearListeners() {\n        for (const eventManagers in this.events) {\n            this.events[eventManagers].clear();\n        }\n    }\n    /**\n     * Attaches a passive effect to the `MotionValue`.\n     *\n     * @internal\n     */\n    attach(passiveEffect, stopPassiveEffect) {\n        this.passiveEffect = passiveEffect;\n        this.stopPassiveEffect = stopPassiveEffect;\n    }\n    /**\n     * Sets the state of the `MotionValue`.\n     *\n     * @remarks\n     *\n     * ```jsx\n     * const x = useMotionValue(0)\n     * x.set(10)\n     * ```\n     *\n     * @param latest - Latest value to set.\n     * @param render - Whether to notify render subscribers. Defaults to `true`\n     *\n     * @public\n     */\n    set(v, render = true) {\n        if (!render || !this.passiveEffect) {\n            this.updateAndNotify(v, render);\n        }\n        else {\n            this.passiveEffect(v, this.updateAndNotify);\n        }\n    }\n    setWithVelocity(prev, current, delta) {\n        this.set(current);\n        this.prev = undefined;\n        this.prevFrameValue = prev;\n        this.prevUpdatedAt = this.updatedAt - delta;\n    }\n    /**\n     * Set the state of the `MotionValue`, stopping any active animations,\n     * effects, and resets velocity to `0`.\n     */\n    jump(v, endAnimation = true) {\n        this.updateAndNotify(v);\n        this.prev = v;\n        this.prevUpdatedAt = this.prevFrameValue = undefined;\n        endAnimation && this.stop();\n        if (this.stopPassiveEffect)\n            this.stopPassiveEffect();\n    }\n    /**\n     * Returns the latest state of `MotionValue`\n     *\n     * @returns - The latest state of `MotionValue`\n     *\n     * @public\n     */\n    get() {\n        if (collectMotionValues.current) {\n            collectMotionValues.current.push(this);\n        }\n        return this.current;\n    }\n    /**\n     * @public\n     */\n    getPrevious() {\n        return this.prev;\n    }\n    /**\n     * Returns the latest velocity of `MotionValue`\n     *\n     * @returns - The latest velocity of `MotionValue`. Returns `0` if the state is non-numerical.\n     *\n     * @public\n     */\n    getVelocity() {\n        const currentTime = time.now();\n        if (!this.canTrackVelocity ||\n            this.prevFrameValue === undefined ||\n            currentTime - this.updatedAt > MAX_VELOCITY_DELTA) {\n            return 0;\n        }\n        const delta = Math.min(this.updatedAt - this.prevUpdatedAt, MAX_VELOCITY_DELTA);\n        // Casts because of parseFloat's poor typing\n        return velocityPerSecond(parseFloat(this.current) -\n            parseFloat(this.prevFrameValue), delta);\n    }\n    /**\n     * Registers a new animation to control this `MotionValue`. Only one\n     * animation can drive a `MotionValue` at one time.\n     *\n     * ```jsx\n     * value.start()\n     * ```\n     *\n     * @param animation - A function that starts the provided animation\n     *\n     * @internal\n     */\n    start(startAnimation) {\n        this.stop();\n        return new Promise((resolve) => {\n            this.hasAnimated = true;\n            this.animation = startAnimation(resolve);\n            if (this.events.animationStart) {\n                this.events.animationStart.notify();\n            }\n        }).then(() => {\n            if (this.events.animationComplete) {\n                this.events.animationComplete.notify();\n            }\n            this.clearAnimation();\n        });\n    }\n    /**\n     * Stop the currently active animation.\n     *\n     * @public\n     */\n    stop() {\n        if (this.animation) {\n            this.animation.stop();\n            if (this.events.animationCancel) {\n                this.events.animationCancel.notify();\n            }\n        }\n        this.clearAnimation();\n    }\n    /**\n     * Returns `true` if this value is currently animating.\n     *\n     * @public\n     */\n    isAnimating() {\n        return !!this.animation;\n    }\n    clearAnimation() {\n        delete this.animation;\n    }\n    /**\n     * Destroy and clean up subscribers to this `MotionValue`.\n     *\n     * The `MotionValue` hooks like `useMotionValue` and `useTransform` automatically\n     * handle the lifecycle of the returned `MotionValue`, so this method is only necessary if you've manually\n     * created a `MotionValue` via the `motionValue` function.\n     *\n     * @public\n     */\n    destroy() {\n        this.clearListeners();\n        this.stop();\n        if (this.stopPassiveEffect) {\n            this.stopPassiveEffect();\n        }\n    }\n}\nfunction motionValue(init, options) {\n    return new MotionValue(init, options);\n}\n\nexport { MotionValue, collectMotionValues, motionValue };\n","import { resolveFinalValueInKeyframes } from '../../utils/resolve-value.mjs';\nimport { motionValue } from '../../value/index.mjs';\nimport { resolveVariant } from './resolve-dynamic-variants.mjs';\n\n/**\n * Set VisualElement's MotionValue, creating a new MotionValue for it if\n * it doesn't exist.\n */\nfunction setMotionValue(visualElement, key, value) {\n    if (visualElement.hasValue(key)) {\n        visualElement.getValue(key).set(value);\n    }\n    else {\n        visualElement.addValue(key, motionValue(value));\n    }\n}\nfunction setTarget(visualElement, definition) {\n    const resolved = resolveVariant(visualElement, definition);\n    let { transitionEnd = {}, transition = {}, ...target } = resolved || {};\n    target = { ...target, ...transitionEnd };\n    for (const key in target) {\n        const value = resolveFinalValueInKeyframes(target[key]);\n        setMotionValue(visualElement, key, value);\n    }\n}\n\nexport { setTarget };\n","import { transformProps } from '../../render/html/utils/transform.mjs';\nimport { optimizedAppearDataAttribute } from '../optimized-appear/data-id.mjs';\nimport { animateMotionValue } from './motion-value.mjs';\nimport { isWillChangeMotionValue } from '../../value/use-will-change/is.mjs';\nimport { setTarget } from '../../render/utils/setters.mjs';\nimport { getValueTransition } from '../utils/transitions.mjs';\nimport { frame } from '../../frameloop/frame.mjs';\n\n/**\n * Decide whether we should block this animation. Previously, we achieved this\n * just by checking whether the key was listed in protectedKeys, but this\n * posed problems if an animation was triggered by afterChildren and protectedKeys\n * had been set to true in the meantime.\n */\nfunction shouldBlockAnimation({ protectedKeys, needsAnimating }, key) {\n    const shouldBlock = protectedKeys.hasOwnProperty(key) && needsAnimating[key] !== true;\n    needsAnimating[key] = false;\n    return shouldBlock;\n}\nfunction animateTarget(visualElement, targetAndTransition, { delay = 0, transitionOverride, type } = {}) {\n    var _a;\n    let { transition = visualElement.getDefaultTransition(), transitionEnd, ...target } = targetAndTransition;\n    const willChange = visualElement.getValue(\"willChange\");\n    if (transitionOverride)\n        transition = transitionOverride;\n    const animations = [];\n    const animationTypeState = type &&\n        visualElement.animationState &&\n        visualElement.animationState.getState()[type];\n    for (const key in target) {\n        const value = visualElement.getValue(key, (_a = visualElement.latestValues[key]) !== null && _a !== void 0 ? _a : null);\n        const valueTarget = target[key];\n        if (valueTarget === undefined ||\n            (animationTypeState &&\n                shouldBlockAnimation(animationTypeState, key))) {\n            continue;\n        }\n        const valueTransition = {\n            delay,\n            elapsed: 0,\n            ...getValueTransition(transition || {}, key),\n        };\n        /**\n         * If this is the first time a value is being animated, check\n         * to see if we're handling off from an existing animation.\n         */\n        let isHandoff = false;\n        if (window.HandoffAppearAnimations) {\n            const props = visualElement.getProps();\n            const appearId = props[optimizedAppearDataAttribute];\n            if (appearId) {\n                const elapsed = window.HandoffAppearAnimations(appearId, key);\n                if (elapsed !== null) {\n                    valueTransition.elapsed = elapsed;\n                    isHandoff = true;\n                }\n            }\n        }\n        value.start(animateMotionValue(key, value, valueTarget, visualElement.shouldReduceMotion && transformProps.has(key)\n            ? { type: false }\n            : valueTransition, visualElement, isHandoff));\n        const animation = value.animation;\n        if (animation) {\n            if (isWillChangeMotionValue(willChange)) {\n                willChange.add(key);\n                animation.then(() => willChange.remove(key));\n            }\n            animations.push(animation);\n        }\n    }\n    if (transitionEnd) {\n        Promise.all(animations).then(() => {\n            frame.update(() => {\n                transitionEnd && setTarget(visualElement, transitionEnd);\n            });\n        });\n    }\n    return animations;\n}\n\nexport { animateTarget };\n","import { resolveVariant } from '../../render/utils/resolve-dynamic-variants.mjs';\nimport { animateTarget } from './visual-element-target.mjs';\n\nfunction animateVariant(visualElement, variant, options = {}) {\n    var _a;\n    const resolved = resolveVariant(visualElement, variant, options.type === \"exit\"\n        ? (_a = visualElement.presenceContext) === null || _a === void 0 ? void 0 : _a.custom\n        : undefined);\n    let { transition = visualElement.getDefaultTransition() || {} } = resolved || {};\n    if (options.transitionOverride) {\n        transition = options.transitionOverride;\n    }\n    /**\n     * If we have a variant, create a callback that runs it as an animation.\n     * Otherwise, we resolve a Promise immediately for a composable no-op.\n     */\n    const getAnimation = resolved\n        ? () => Promise.all(animateTarget(visualElement, resolved, options))\n        : () => Promise.resolve();\n    /**\n     * If we have children, create a callback that runs all their animations.\n     * Otherwise, we resolve a Promise immediately for a composable no-op.\n     */\n    const getChildAnimations = visualElement.variantChildren && visualElement.variantChildren.size\n        ? (forwardDelay = 0) => {\n            const { delayChildren = 0, staggerChildren, staggerDirection, } = transition;\n            return animateChildren(visualElement, variant, delayChildren + forwardDelay, staggerChildren, staggerDirection, options);\n        }\n        : () => Promise.resolve();\n    /**\n     * If the transition explicitly defines a \"when\" option, we need to resolve either\n     * this animation or all children animations before playing the other.\n     */\n    const { when } = transition;\n    if (when) {\n        const [first, last] = when === \"beforeChildren\"\n            ? [getAnimation, getChildAnimations]\n            : [getChildAnimations, getAnimation];\n        return first().then(() => last());\n    }\n    else {\n        return Promise.all([getAnimation(), getChildAnimations(options.delay)]);\n    }\n}\nfunction animateChildren(visualElement, variant, delayChildren = 0, staggerChildren = 0, staggerDirection = 1, options) {\n    const animations = [];\n    const maxStaggerDuration = (visualElement.variantChildren.size - 1) * staggerChildren;\n    const generateStaggerDuration = staggerDirection === 1\n        ? (i = 0) => i * staggerChildren\n        : (i = 0) => maxStaggerDuration - i * staggerChildren;\n    Array.from(visualElement.variantChildren)\n        .sort(sortByTreeOrder)\n        .forEach((child, i) => {\n        child.notify(\"AnimationStart\", variant);\n        animations.push(animateVariant(child, variant, {\n            ...options,\n            delay: delayChildren + generateStaggerDuration(i),\n        }).then(() => child.notify(\"AnimationComplete\", variant)));\n    });\n    return Promise.all(animations);\n}\nfunction sortByTreeOrder(a, b) {\n    return a.sortNodePosition(b);\n}\n\nexport { animateVariant, sortByTreeOrder };\n","import { isAnimationControls } from '../../animation/utils/is-animation-controls.mjs';\nimport { isKeyframesTarget } from '../../animation/utils/is-keyframes-target.mjs';\nimport { shallowCompare } from '../../utils/shallow-compare.mjs';\nimport { isVariantLabel } from './is-variant-label.mjs';\nimport { resolveVariant } from './resolve-dynamic-variants.mjs';\nimport { variantPriorityOrder } from './variant-props.mjs';\nimport { animateVisualElement } from '../../animation/interfaces/visual-element.mjs';\n\nconst reversePriorityOrder = [...variantPriorityOrder].reverse();\nconst numAnimationTypes = variantPriorityOrder.length;\nfunction animateList(visualElement) {\n    return (animations) => Promise.all(animations.map(({ animation, options }) => animateVisualElement(visualElement, animation, options)));\n}\nfunction createAnimationState(visualElement) {\n    let animate = animateList(visualElement);\n    const state = createState();\n    let isInitialRender = true;\n    /**\n     * This function will be used to reduce the animation definitions for\n     * each active animation type into an object of resolved values for it.\n     */\n    const buildResolvedTypeValues = (type) => (acc, definition) => {\n        var _a;\n        const resolved = resolveVariant(visualElement, definition, type === \"exit\"\n            ? (_a = visualElement.presenceContext) === null || _a === void 0 ? void 0 : _a.custom\n            : undefined);\n        if (resolved) {\n            const { transition, transitionEnd, ...target } = resolved;\n            acc = { ...acc, ...target, ...transitionEnd };\n        }\n        return acc;\n    };\n    /**\n     * This just allows us to inject mocked animation functions\n     * @internal\n     */\n    function setAnimateFunction(makeAnimator) {\n        animate = makeAnimator(visualElement);\n    }\n    /**\n     * When we receive new props, we need to:\n     * 1. Create a list of protected keys for each type. This is a directory of\n     *    value keys that are currently being \"handled\" by types of a higher priority\n     *    so that whenever an animation is played of a given type, these values are\n     *    protected from being animated.\n     * 2. Determine if an animation type needs animating.\n     * 3. Determine if any values have been removed from a type and figure out\n     *    what to animate those to.\n     */\n    function animateChanges(changedActiveType) {\n        const props = visualElement.getProps();\n        const context = visualElement.getVariantContext(true) || {};\n        /**\n         * A list of animations that we'll build into as we iterate through the animation\n         * types. This will get executed at the end of the function.\n         */\n        const animations = [];\n        /**\n         * Keep track of which values have been removed. Then, as we hit lower priority\n         * animation types, we can check if they contain removed values and animate to that.\n         */\n        const removedKeys = new Set();\n        /**\n         * A dictionary of all encountered keys. This is an object to let us build into and\n         * copy it without iteration. Each time we hit an animation type we set its protected\n         * keys - the keys its not allowed to animate - to the latest version of this object.\n         */\n        let encounteredKeys = {};\n        /**\n         * If a variant has been removed at a given index, and this component is controlling\n         * variant animations, we want to ensure lower-priority variants are forced to animate.\n         */\n        let removedVariantIndex = Infinity;\n        /**\n         * Iterate through all animation types in reverse priority order. For each, we want to\n         * detect which values it's handling and whether or not they've changed (and therefore\n         * need to be animated). If any values have been removed, we want to detect those in\n         * lower priority props and flag for animation.\n         */\n        for (let i = 0; i < numAnimationTypes; i++) {\n            const type = reversePriorityOrder[i];\n            const typeState = state[type];\n            const prop = props[type] !== undefined\n                ? props[type]\n                : context[type];\n            const propIsVariant = isVariantLabel(prop);\n            /**\n             * If this type has *just* changed isActive status, set activeDelta\n             * to that status. Otherwise set to null.\n             */\n            const activeDelta = type === changedActiveType ? typeState.isActive : null;\n            if (activeDelta === false)\n                removedVariantIndex = i;\n            /**\n             * If this prop is an inherited variant, rather than been set directly on the\n             * component itself, we want to make sure we allow the parent to trigger animations.\n             *\n             * TODO: Can probably change this to a !isControllingVariants check\n             */\n            let isInherited = prop === context[type] &&\n                prop !== props[type] &&\n                propIsVariant;\n            /**\n             *\n             */\n            if (isInherited &&\n                isInitialRender &&\n                visualElement.manuallyAnimateOnMount) {\n                isInherited = false;\n            }\n            /**\n             * Set all encountered keys so far as the protected keys for this type. This will\n             * be any key that has been animated or otherwise handled by active, higher-priortiy types.\n             */\n            typeState.protectedKeys = { ...encounteredKeys };\n            // Check if we can skip analysing this prop early\n            if (\n            // If it isn't active and hasn't *just* been set as inactive\n            (!typeState.isActive && activeDelta === null) ||\n                // If we didn't and don't have any defined prop for this animation type\n                (!prop && !typeState.prevProp) ||\n                // Or if the prop doesn't define an animation\n                isAnimationControls(prop) ||\n                typeof prop === \"boolean\") {\n                continue;\n            }\n            /**\n             * As we go look through the values defined on this type, if we detect\n             * a changed value or a value that was removed in a higher priority, we set\n             * this to true and add this prop to the animation list.\n             */\n            const variantDidChange = checkVariantsDidChange(typeState.prevProp, prop);\n            let shouldAnimateType = variantDidChange ||\n                // If we're making this variant active, we want to always make it active\n                (type === changedActiveType &&\n                    typeState.isActive &&\n                    !isInherited &&\n                    propIsVariant) ||\n                // If we removed a higher-priority variant (i is in reverse order)\n                (i > removedVariantIndex && propIsVariant);\n            let handledRemovedValues = false;\n            /**\n             * As animations can be set as variant lists, variants or target objects, we\n             * coerce everything to an array if it isn't one already\n             */\n            const definitionList = Array.isArray(prop) ? prop : [prop];\n            /**\n             * Build an object of all the resolved values. We'll use this in the subsequent\n             * animateChanges calls to determine whether a value has changed.\n             */\n            let resolvedValues = definitionList.reduce(buildResolvedTypeValues(type), {});\n            if (activeDelta === false)\n                resolvedValues = {};\n            /**\n             * Now we need to loop through all the keys in the prev prop and this prop,\n             * and decide:\n             * 1. If the value has changed, and needs animating\n             * 2. If it has been removed, and needs adding to the removedKeys set\n             * 3. If it has been removed in a higher priority type and needs animating\n             * 4. If it hasn't been removed in a higher priority but hasn't changed, and\n             *    needs adding to the type's protectedKeys list.\n             */\n            const { prevResolvedValues = {} } = typeState;\n            const allKeys = {\n                ...prevResolvedValues,\n                ...resolvedValues,\n            };\n            const markToAnimate = (key) => {\n                shouldAnimateType = true;\n                if (removedKeys.has(key)) {\n                    handledRemovedValues = true;\n                    removedKeys.delete(key);\n                }\n                typeState.needsAnimating[key] = true;\n                const motionValue = visualElement.getValue(key);\n                if (motionValue)\n                    motionValue.liveStyle = false;\n            };\n            for (const key in allKeys) {\n                const next = resolvedValues[key];\n                const prev = prevResolvedValues[key];\n                // If we've already handled this we can just skip ahead\n                if (encounteredKeys.hasOwnProperty(key))\n                    continue;\n                /**\n                 * If the value has changed, we probably want to animate it.\n                 */\n                let valueHasChanged = false;\n                if (isKeyframesTarget(next) && isKeyframesTarget(prev)) {\n                    valueHasChanged = !shallowCompare(next, prev);\n                }\n                else {\n                    valueHasChanged = next !== prev;\n                }\n                if (valueHasChanged) {\n                    if (next !== undefined && next !== null) {\n                        // If next is defined and doesn't equal prev, it needs animating\n                        markToAnimate(key);\n                    }\n                    else {\n                        // If it's undefined, it's been removed.\n                        removedKeys.add(key);\n                    }\n                }\n                else if (next !== undefined && removedKeys.has(key)) {\n                    /**\n                     * If next hasn't changed and it isn't undefined, we want to check if it's\n                     * been removed by a higher priority\n                     */\n                    markToAnimate(key);\n                }\n                else {\n                    /**\n                     * If it hasn't changed, we add it to the list of protected values\n                     * to ensure it doesn't get animated.\n                     */\n                    typeState.protectedKeys[key] = true;\n                }\n            }\n            /**\n             * Update the typeState so next time animateChanges is called we can compare the\n             * latest prop and resolvedValues to these.\n             */\n            typeState.prevProp = prop;\n            typeState.prevResolvedValues = resolvedValues;\n            /**\n             *\n             */\n            if (typeState.isActive) {\n                encounteredKeys = { ...encounteredKeys, ...resolvedValues };\n            }\n            if (isInitialRender && visualElement.blockInitialAnimation) {\n                shouldAnimateType = false;\n            }\n            /**\n             * If this is an inherited prop we want to hard-block animations\n             */\n            if (shouldAnimateType && (!isInherited || handledRemovedValues)) {\n                animations.push(...definitionList.map((animation) => ({\n                    animation: animation,\n                    options: { type },\n                })));\n            }\n        }\n        /**\n         * If there are some removed value that haven't been dealt with,\n         * we need to create a new animation that falls back either to the value\n         * defined in the style prop, or the last read value.\n         */\n        if (removedKeys.size) {\n            const fallbackAnimation = {};\n            removedKeys.forEach((key) => {\n                const fallbackTarget = visualElement.getBaseTarget(key);\n                const motionValue = visualElement.getValue(key);\n                if (motionValue)\n                    motionValue.liveStyle = true;\n                // @ts-expect-error - @mattgperry to figure if we should do something here\n                fallbackAnimation[key] = fallbackTarget !== null && fallbackTarget !== void 0 ? fallbackTarget : null;\n            });\n            animations.push({ animation: fallbackAnimation });\n        }\n        let shouldAnimate = Boolean(animations.length);\n        if (isInitialRender &&\n            (props.initial === false || props.initial === props.animate) &&\n            !visualElement.manuallyAnimateOnMount) {\n            shouldAnimate = false;\n        }\n        isInitialRender = false;\n        return shouldAnimate ? animate(animations) : Promise.resolve();\n    }\n    /**\n     * Change whether a certain animation type is active.\n     */\n    function setActive(type, isActive) {\n        var _a;\n        // If the active state hasn't changed, we can safely do nothing here\n        if (state[type].isActive === isActive)\n            return Promise.resolve();\n        // Propagate active change to children\n        (_a = visualElement.variantChildren) === null || _a === void 0 ? void 0 : _a.forEach((child) => { var _a; return (_a = child.animationState) === null || _a === void 0 ? void 0 : _a.setActive(type, isActive); });\n        state[type].isActive = isActive;\n        const animations = animateChanges(type);\n        for (const key in state) {\n            state[key].protectedKeys = {};\n        }\n        return animations;\n    }\n    return {\n        animateChanges,\n        setActive,\n        setAnimateFunction,\n        getState: () => state,\n    };\n}\nfunction checkVariantsDidChange(prev, next) {\n    if (typeof next === \"string\") {\n        return next !== prev;\n    }\n    else if (Array.isArray(next)) {\n        return !shallowCompare(next, prev);\n    }\n    return false;\n}\nfunction createTypeState(isActive = false) {\n    return {\n        isActive,\n        protectedKeys: {},\n        needsAnimating: {},\n        prevResolvedValues: {},\n    };\n}\nfunction createState() {\n    return {\n        animate: createTypeState(true),\n        whileInView: createTypeState(),\n        whileHover: createTypeState(),\n        whileTap: createTypeState(),\n        whileDrag: createTypeState(),\n        whileFocus: createTypeState(),\n        exit: createTypeState(),\n    };\n}\n\nexport { checkVariantsDidChange, createAnimationState };\n","import { resolveVariant } from '../../render/utils/resolve-dynamic-variants.mjs';\nimport { animateTarget } from './visual-element-target.mjs';\nimport { animateVariant } from './visual-element-variant.mjs';\nimport { frame } from '../../frameloop/frame.mjs';\n\nfunction animateVisualElement(visualElement, definition, options = {}) {\n    visualElement.notify(\"AnimationStart\", definition);\n    let animation;\n    if (Array.isArray(definition)) {\n        const animations = definition.map((variant) => animateVariant(visualElement, variant, options));\n        animation = Promise.all(animations);\n    }\n    else if (typeof definition === \"string\") {\n        animation = animateVariant(visualElement, definition, options);\n    }\n    else {\n        const resolvedDefinition = typeof definition === \"function\"\n            ? resolveVariant(visualElement, definition, options.custom)\n            : definition;\n        animation = Promise.all(animateTarget(visualElement, resolvedDefinition, options));\n    }\n    return animation.then(() => {\n        frame.postRender(() => {\n            visualElement.notify(\"AnimationComplete\", definition);\n        });\n    });\n}\n\nexport { animateVisualElement };\n","import { Feature } from '../Feature.mjs';\n\nlet id = 0;\nclass ExitAnimationFeature extends Feature {\n    constructor() {\n        super(...arguments);\n        this.id = id++;\n    }\n    update() {\n        if (!this.node.presenceContext)\n            return;\n        const { isPresent, onExitComplete } = this.node.presenceContext;\n        const { isPresent: prevIsPresent } = this.node.prevPresenceContext || {};\n        if (!this.node.animationState || isPresent === prevIsPresent) {\n            return;\n        }\n        const exitAnimation = this.node.animationState.setActive(\"exit\", !isPresent);\n        if (onExitComplete && !isPresent) {\n            exitAnimation.then(() => onExitComplete(this.id));\n        }\n    }\n    mount() {\n        const { register } = this.node.presenceContext || {};\n        if (register) {\n            this.unmount = register(this.id);\n        }\n    }\n    unmount() { }\n}\n\nexport { ExitAnimationFeature };\n","import { AnimationFeature } from './animation/index.mjs';\nimport { ExitAnimationFeature } from './animation/exit.mjs';\n\nconst animations = {\n    animation: {\n        Feature: AnimationFeature,\n    },\n    exit: {\n        Feature: ExitAnimationFeature,\n    },\n};\n\nexport { animations };\n","import { isAnimationControls } from '../../../animation/utils/is-animation-controls.mjs';\nimport { createAnimationState } from '../../../render/utils/animation-state.mjs';\nimport { Feature } from '../Feature.mjs';\n\nclass AnimationFeature extends Feature {\n    /**\n     * We dynamically generate the AnimationState manager as it contains a reference\n     * to the underlying animation library. We only want to load that if we load this,\n     * so people can optionally code split it out using the `m` component.\n     */\n    constructor(node) {\n        super(node);\n        node.animationState || (node.animationState = createAnimationState(node));\n    }\n    updateAnimationControlsSubscription() {\n        const { animate } = this.node.getProps();\n        this.unmount();\n        if (isAnimationControls(animate)) {\n            this.unmount = animate.subscribe(this.node);\n        }\n    }\n    /**\n     * Subscribe any provided AnimationControls to the component's VisualElement\n     */\n    mount() {\n        this.updateAnimationControlsSubscription();\n    }\n    update() {\n        const { animate } = this.node.getProps();\n        const { animate: prevAnimate } = this.node.prevProps || {};\n        if (animate !== prevAnimate) {\n            this.updateAnimationControlsSubscription();\n        }\n    }\n    unmount() { }\n}\n\nexport { AnimationFeature };\n","const distance = (a, b) => Math.abs(a - b);\nfunction distance2D(a, b) {\n    // Multi-dimensional\n    const xDelta = distance(a.x, b.x);\n    const yDelta = distance(a.y, b.y);\n    return Math.sqrt(xDelta ** 2 + yDelta ** 2);\n}\n\nexport { distance, distance2D };\n","import { extractEventInfo } from '../../events/event-info.mjs';\nimport { secondsToMilliseconds, millisecondsToSeconds } from '../../utils/time-conversion.mjs';\nimport { addPointerEvent } from '../../events/add-pointer-event.mjs';\nimport { pipe } from '../../utils/pipe.mjs';\nimport { distance2D } from '../../utils/distance.mjs';\nimport { isPrimaryPointer } from '../../events/utils/is-primary-pointer.mjs';\nimport { frame, cancelFrame, frameData } from '../../frameloop/frame.mjs';\n\n/**\n * @internal\n */\nclass PanSession {\n    constructor(event, handlers, { transformPagePoint, contextWindow, dragSnapToOrigin = false } = {}) {\n        /**\n         * @internal\n         */\n        this.startEvent = null;\n        /**\n         * @internal\n         */\n        this.lastMoveEvent = null;\n        /**\n         * @internal\n         */\n        this.lastMoveEventInfo = null;\n        /**\n         * @internal\n         */\n        this.handlers = {};\n        /**\n         * @internal\n         */\n        this.contextWindow = window;\n        this.updatePoint = () => {\n            if (!(this.lastMoveEvent && this.lastMoveEventInfo))\n                return;\n            const info = getPanInfo(this.lastMoveEventInfo, this.history);\n            const isPanStarted = this.startEvent !== null;\n            // Only start panning if the offset is larger than 3 pixels. If we make it\n            // any larger than this we'll want to reset the pointer history\n            // on the first update to avoid visual snapping to the cursoe.\n            const isDistancePastThreshold = distance2D(info.offset, { x: 0, y: 0 }) >= 3;\n            if (!isPanStarted && !isDistancePastThreshold)\n                return;\n            const { point } = info;\n            const { timestamp } = frameData;\n            this.history.push({ ...point, timestamp });\n            const { onStart, onMove } = this.handlers;\n            if (!isPanStarted) {\n                onStart && onStart(this.lastMoveEvent, info);\n                this.startEvent = this.lastMoveEvent;\n            }\n            onMove && onMove(this.lastMoveEvent, info);\n        };\n        this.handlePointerMove = (event, info) => {\n            this.lastMoveEvent = event;\n            this.lastMoveEventInfo = transformPoint(info, this.transformPagePoint);\n            // Throttle mouse move event to once per frame\n            frame.update(this.updatePoint, true);\n        };\n        this.handlePointerUp = (event, info) => {\n            this.end();\n            const { onEnd, onSessionEnd, resumeAnimation } = this.handlers;\n            if (this.dragSnapToOrigin)\n                resumeAnimation && resumeAnimation();\n            if (!(this.lastMoveEvent && this.lastMoveEventInfo))\n                return;\n            const panInfo = getPanInfo(event.type === \"pointercancel\"\n                ? this.lastMoveEventInfo\n                : transformPoint(info, this.transformPagePoint), this.history);\n            if (this.startEvent && onEnd) {\n                onEnd(event, panInfo);\n            }\n            onSessionEnd && onSessionEnd(event, panInfo);\n        };\n        // If we have more than one touch, don't start detecting this gesture\n        if (!isPrimaryPointer(event))\n            return;\n        this.dragSnapToOrigin = dragSnapToOrigin;\n        this.handlers = handlers;\n        this.transformPagePoint = transformPagePoint;\n        this.contextWindow = contextWindow || window;\n        const info = extractEventInfo(event);\n        const initialInfo = transformPoint(info, this.transformPagePoint);\n        const { point } = initialInfo;\n        const { timestamp } = frameData;\n        this.history = [{ ...point, timestamp }];\n        const { onSessionStart } = handlers;\n        onSessionStart &&\n            onSessionStart(event, getPanInfo(initialInfo, this.history));\n        this.removeListeners = pipe(addPointerEvent(this.contextWindow, \"pointermove\", this.handlePointerMove), addPointerEvent(this.contextWindow, \"pointerup\", this.handlePointerUp), addPointerEvent(this.contextWindow, \"pointercancel\", this.handlePointerUp));\n    }\n    updateHandlers(handlers) {\n        this.handlers = handlers;\n    }\n    end() {\n        this.removeListeners && this.removeListeners();\n        cancelFrame(this.updatePoint);\n    }\n}\nfunction transformPoint(info, transformPagePoint) {\n    return transformPagePoint ? { point: transformPagePoint(info.point) } : info;\n}\nfunction subtractPoint(a, b) {\n    return { x: a.x - b.x, y: a.y - b.y };\n}\nfunction getPanInfo({ point }, history) {\n    return {\n        point,\n        delta: subtractPoint(point, lastDevicePoint(history)),\n        offset: subtractPoint(point, startDevicePoint(history)),\n        velocity: getVelocity(history, 0.1),\n    };\n}\nfunction startDevicePoint(history) {\n    return history[0];\n}\nfunction lastDevicePoint(history) {\n    return history[history.length - 1];\n}\nfunction getVelocity(history, timeDelta) {\n    if (history.length < 2) {\n        return { x: 0, y: 0 };\n    }\n    let i = history.length - 1;\n    let timestampedPoint = null;\n    const lastPoint = lastDevicePoint(history);\n    while (i >= 0) {\n        timestampedPoint = history[i];\n        if (lastPoint.timestamp - timestampedPoint.timestamp >\n            secondsToMilliseconds(timeDelta)) {\n            break;\n        }\n        i--;\n    }\n    if (!timestampedPoint) {\n        return { x: 0, y: 0 };\n    }\n    const time = millisecondsToSeconds(lastPoint.timestamp - timestampedPoint.timestamp);\n    if (time === 0) {\n        return { x: 0, y: 0 };\n    }\n    const currentVelocity = {\n        x: (lastPoint.x - timestampedPoint.x) / time,\n        y: (lastPoint.y - timestampedPoint.y) / time,\n    };\n    if (currentVelocity.x === Infinity) {\n        currentVelocity.x = 0;\n    }\n    if (currentVelocity.y === Infinity) {\n        currentVelocity.y = 0;\n    }\n    return currentVelocity;\n}\n\nexport { PanSession };\n","import { mixNumber } from '../../utils/mix/number.mjs';\n\nfunction calcLength(axis) {\n    return axis.max - axis.min;\n}\nfunction isNear(value, target = 0, maxDistance = 0.01) {\n    return Math.abs(value - target) <= maxDistance;\n}\nfunction calcAxisDelta(delta, source, target, origin = 0.5) {\n    delta.origin = origin;\n    delta.originPoint = mixNumber(source.min, source.max, delta.origin);\n    delta.scale = calcLength(target) / calcLength(source);\n    if (isNear(delta.scale, 1, 0.0001) || isNaN(delta.scale))\n        delta.scale = 1;\n    delta.translate =\n        mixNumber(target.min, target.max, delta.origin) - delta.originPoint;\n    if (isNear(delta.translate) || isNaN(delta.translate))\n        delta.translate = 0;\n}\nfunction calcBoxDelta(delta, source, target, origin) {\n    calcAxisDelta(delta.x, source.x, target.x, origin ? origin.originX : undefined);\n    calcAxisDelta(delta.y, source.y, target.y, origin ? origin.originY : undefined);\n}\nfunction calcRelativeAxis(target, relative, parent) {\n    target.min = parent.min + relative.min;\n    target.max = target.min + calcLength(relative);\n}\nfunction calcRelativeBox(target, relative, parent) {\n    calcRelativeAxis(target.x, relative.x, parent.x);\n    calcRelativeAxis(target.y, relative.y, parent.y);\n}\nfunction calcRelativeAxisPosition(target, layout, parent) {\n    target.min = layout.min - parent.min;\n    target.max = target.min + calcLength(layout);\n}\nfunction calcRelativePosition(target, layout, parent) {\n    calcRelativeAxisPosition(target.x, layout.x, parent.x);\n    calcRelativeAxisPosition(target.y, layout.y, parent.y);\n}\n\nexport { calcAxisDelta, calcBoxDelta, calcLength, calcRelativeAxis, calcRelativeAxisPosition, calcRelativeBox, calcRelativePosition, isNear };\n","import { progress } from '../../../utils/progress.mjs';\nimport { calcLength } from '../../../projection/geometry/delta-calc.mjs';\nimport { clamp } from '../../../utils/clamp.mjs';\nimport { mixNumber } from '../../../utils/mix/number.mjs';\n\n/**\n * Apply constraints to a point. These constraints are both physical along an\n * axis, and an elastic factor that determines how much to constrain the point\n * by if it does lie outside the defined parameters.\n */\nfunction applyConstraints(point, { min, max }, elastic) {\n    if (min !== undefined && point < min) {\n        // If we have a min point defined, and this is outside of that, constrain\n        point = elastic\n            ? mixNumber(min, point, elastic.min)\n            : Math.max(point, min);\n    }\n    else if (max !== undefined && point > max) {\n        // If we have a max point defined, and this is outside of that, constrain\n        point = elastic\n            ? mixNumber(max, point, elastic.max)\n            : Math.min(point, max);\n    }\n    return point;\n}\n/**\n * Calculate constraints in terms of the viewport when defined relatively to the\n * measured axis. This is measured from the nearest edge, so a max constraint of 200\n * on an axis with a max value of 300 would return a constraint of 500 - axis length\n */\nfunction calcRelativeAxisConstraints(axis, min, max) {\n    return {\n        min: min !== undefined ? axis.min + min : undefined,\n        max: max !== undefined\n            ? axis.max + max - (axis.max - axis.min)\n            : undefined,\n    };\n}\n/**\n * Calculate constraints in terms of the viewport when\n * defined relatively to the measured bounding box.\n */\nfunction calcRelativeConstraints(layoutBox, { top, left, bottom, right }) {\n    return {\n        x: calcRelativeAxisConstraints(layoutBox.x, left, right),\n        y: calcRelativeAxisConstraints(layoutBox.y, top, bottom),\n    };\n}\n/**\n * Calculate viewport constraints when defined as another viewport-relative axis\n */\nfunction calcViewportAxisConstraints(layoutAxis, constraintsAxis) {\n    let min = constraintsAxis.min - layoutAxis.min;\n    let max = constraintsAxis.max - layoutAxis.max;\n    // If the constraints axis is actually smaller than the layout axis then we can\n    // flip the constraints\n    if (constraintsAxis.max - constraintsAxis.min <\n        layoutAxis.max - layoutAxis.min) {\n        [min, max] = [max, min];\n    }\n    return { min, max };\n}\n/**\n * Calculate viewport constraints when defined as another viewport-relative box\n */\nfunction calcViewportConstraints(layoutBox, constraintsBox) {\n    return {\n        x: calcViewportAxisConstraints(layoutBox.x, constraintsBox.x),\n        y: calcViewportAxisConstraints(layoutBox.y, constraintsBox.y),\n    };\n}\n/**\n * Calculate a transform origin relative to the source axis, between 0-1, that results\n * in an asthetically pleasing scale/transform needed to project from source to target.\n */\nfunction calcOrigin(source, target) {\n    let origin = 0.5;\n    const sourceLength = calcLength(source);\n    const targetLength = calcLength(target);\n    if (targetLength > sourceLength) {\n        origin = progress(target.min, target.max - sourceLength, source.min);\n    }\n    else if (sourceLength > targetLength) {\n        origin = progress(source.min, source.max - targetLength, target.min);\n    }\n    return clamp(0, 1, origin);\n}\n/**\n * Rebase the calculated viewport constraints relative to the layout.min point.\n */\nfunction rebaseAxisConstraints(layout, constraints) {\n    const relativeConstraints = {};\n    if (constraints.min !== undefined) {\n        relativeConstraints.min = constraints.min - layout.min;\n    }\n    if (constraints.max !== undefined) {\n        relativeConstraints.max = constraints.max - layout.min;\n    }\n    return relativeConstraints;\n}\nconst defaultElastic = 0.35;\n/**\n * Accepts a dragElastic prop and returns resolved elastic values for each axis.\n */\nfunction resolveDragElastic(dragElastic = defaultElastic) {\n    if (dragElastic === false) {\n        dragElastic = 0;\n    }\n    else if (dragElastic === true) {\n        dragElastic = defaultElastic;\n    }\n    return {\n        x: resolveAxisElastic(dragElastic, \"left\", \"right\"),\n        y: resolveAxisElastic(dragElastic, \"top\", \"bottom\"),\n    };\n}\nfunction resolveAxisElastic(dragElastic, minLabel, maxLabel) {\n    return {\n        min: resolvePointElastic(dragElastic, minLabel),\n        max: resolvePointElastic(dragElastic, maxLabel),\n    };\n}\nfunction resolvePointElastic(dragElastic, label) {\n    return typeof dragElastic === \"number\"\n        ? dragElastic\n        : dragElastic[label] || 0;\n}\n\nexport { applyConstraints, calcOrigin, calcRelativeAxisConstraints, calcRelativeConstraints, calcViewportAxisConstraints, calcViewportConstraints, defaultElastic, rebaseAxisConstraints, resolveAxisElastic, resolveDragElastic, resolvePointElastic };\n","const createAxisDelta = () => ({\n    translate: 0,\n    scale: 1,\n    origin: 0,\n    originPoint: 0,\n});\nconst createDelta = () => ({\n    x: createAxisDelta(),\n    y: createAxisDelta(),\n});\nconst createAxis = () => ({ min: 0, max: 0 });\nconst createBox = () => ({\n    x: createAxis(),\n    y: createAxis(),\n});\n\nexport { createAxis, createAxisDelta, createBox, createDelta };\n","function eachAxis(callback) {\n    return [callback(\"x\"), callback(\"y\")];\n}\n\nexport { eachAxis };\n","/**\n * Bounding boxes tend to be defined as top, left, right, bottom. For various operations\n * it's easier to consider each axis individually. This function returns a bounding box\n * as a map of single-axis min/max values.\n */\nfunction convertBoundingBoxToBox({ top, left, right, bottom, }) {\n    return {\n        x: { min: left, max: right },\n        y: { min: top, max: bottom },\n    };\n}\nfunction convertBoxToBoundingBox({ x, y }) {\n    return { top: y.min, right: x.max, bottom: y.max, left: x.min };\n}\n/**\n * Applies a TransformPoint function to a bounding box. TransformPoint is usually a function\n * provided by Framer to allow measured points to be corrected for device scaling. This is used\n * when measuring DOM elements and DOM event points.\n */\nfunction transformBoxPoints(point, transformPoint) {\n    if (!transformPoint)\n        return point;\n    const topLeft = transformPoint({ x: point.left, y: point.top });\n    const bottomRight = transformPoint({ x: point.right, y: point.bottom });\n    return {\n        top: topLeft.y,\n        left: topLeft.x,\n        bottom: bottomRight.y,\n        right: bottomRight.x,\n    };\n}\n\nexport { convertBoundingBoxToBox, convertBoxToBoundingBox, transformBoxPoints };\n","function isIdentityScale(scale) {\n    return scale === undefined || scale === 1;\n}\nfunction hasScale({ scale, scaleX, scaleY }) {\n    return (!isIdentityScale(scale) ||\n        !isIdentityScale(scaleX) ||\n        !isIdentityScale(scaleY));\n}\nfunction hasTransform(values) {\n    return (hasScale(values) ||\n        has2DTranslate(values) ||\n        values.z ||\n        values.rotate ||\n        values.rotateX ||\n        values.rotateY ||\n        values.skewX ||\n        values.skewY);\n}\nfunction has2DTranslate(values) {\n    return is2DTranslate(values.x) || is2DTranslate(values.y);\n}\nfunction is2DTranslate(value) {\n    return value && value !== \"0%\";\n}\n\nexport { has2DTranslate, hasScale, hasTransform };\n","import { mixNumber } from '../../utils/mix/number.mjs';\nimport { hasTransform } from '../utils/has-transform.mjs';\n\n/**\n * Scales a point based on a factor and an originPoint\n */\nfunction scalePoint(point, scale, originPoint) {\n    const distanceFromOrigin = point - originPoint;\n    const scaled = scale * distanceFromOrigin;\n    return originPoint + scaled;\n}\n/**\n * Applies a translate/scale delta to a point\n */\nfunction applyPointDelta(point, translate, scale, originPoint, boxScale) {\n    if (boxScale !== undefined) {\n        point = scalePoint(point, boxScale, originPoint);\n    }\n    return scalePoint(point, scale, originPoint) + translate;\n}\n/**\n * Applies a translate/scale delta to an axis\n */\nfunction applyAxisDelta(axis, translate = 0, scale = 1, originPoint, boxScale) {\n    axis.min = applyPointDelta(axis.min, translate, scale, originPoint, boxScale);\n    axis.max = applyPointDelta(axis.max, translate, scale, originPoint, boxScale);\n}\n/**\n * Applies a translate/scale delta to a box\n */\nfunction applyBoxDelta(box, { x, y }) {\n    applyAxisDelta(box.x, x.translate, x.scale, x.originPoint);\n    applyAxisDelta(box.y, y.translate, y.scale, y.originPoint);\n}\n/**\n * Apply a tree of deltas to a box. We do this to calculate the effect of all the transforms\n * in a tree upon our box before then calculating how to project it into our desired viewport-relative box\n *\n * This is the final nested loop within updateLayoutDelta for future refactoring\n */\nfunction applyTreeDeltas(box, treeScale, treePath, isSharedTransition = false) {\n    const treeLength = treePath.length;\n    if (!treeLength)\n        return;\n    // Reset the treeScale\n    treeScale.x = treeScale.y = 1;\n    let node;\n    let delta;\n    for (let i = 0; i < treeLength; i++) {\n        node = treePath[i];\n        delta = node.projectionDelta;\n        /**\n         * TODO: Prefer to remove this, but currently we have motion components with\n         * display: contents in Framer.\n         */\n        const instance = node.instance;\n        if (instance &&\n            instance.style &&\n            instance.style.display === \"contents\") {\n            continue;\n        }\n        if (isSharedTransition &&\n            node.options.layoutScroll &&\n            node.scroll &&\n            node !== node.root) {\n            transformBox(box, {\n                x: -node.scroll.offset.x,\n                y: -node.scroll.offset.y,\n            });\n        }\n        if (delta) {\n            // Incoporate each ancestor's scale into a culmulative treeScale for this component\n            treeScale.x *= delta.x.scale;\n            treeScale.y *= delta.y.scale;\n            // Apply each ancestor's calculated delta into this component's recorded layout box\n            applyBoxDelta(box, delta);\n        }\n        if (isSharedTransition && hasTransform(node.latestValues)) {\n            transformBox(box, node.latestValues);\n        }\n    }\n    /**\n     * Snap tree scale back to 1 if it's within a non-perceivable threshold.\n     * This will help reduce useless scales getting rendered.\n     */\n    treeScale.x = snapToDefault(treeScale.x);\n    treeScale.y = snapToDefault(treeScale.y);\n}\nfunction snapToDefault(scale) {\n    if (Number.isInteger(scale))\n        return scale;\n    return scale > 1.0000000000001 || scale < 0.999999999999 ? scale : 1;\n}\nfunction translateAxis(axis, distance) {\n    axis.min = axis.min + distance;\n    axis.max = axis.max + distance;\n}\n/**\n * Apply a transform to an axis from the latest resolved motion values.\n * This function basically acts as a bridge between a flat motion value map\n * and applyAxisDelta\n */\nfunction transformAxis(axis, transforms, [key, scaleKey, originKey]) {\n    const axisOrigin = transforms[originKey] !== undefined ? transforms[originKey] : 0.5;\n    const originPoint = mixNumber(axis.min, axis.max, axisOrigin);\n    // Apply the axis delta to the final axis\n    applyAxisDelta(axis, transforms[key], transforms[scaleKey], originPoint, transforms.scale);\n}\n/**\n * The names of the motion values we want to apply as translation, scale and origin.\n */\nconst xKeys = [\"x\", \"scaleX\", \"originX\"];\nconst yKeys = [\"y\", \"scaleY\", \"originY\"];\n/**\n * Apply a transform to a box from the latest resolved motion values.\n */\nfunction transformBox(box, transform) {\n    transformAxis(box.x, transform, xKeys);\n    transformAxis(box.y, transform, yKeys);\n}\n\nexport { applyAxisDelta, applyBoxDelta, applyPointDelta, applyTreeDeltas, scalePoint, transformAxis, transformBox, translateAxis };\n","import { convertBoundingBoxToBox, transformBoxPoints } from '../geometry/conversion.mjs';\nimport { translateAxis } from '../geometry/delta-apply.mjs';\n\nfunction measureViewportBox(instance, transformPoint) {\n    return convertBoundingBoxToBox(transformBoxPoints(instance.getBoundingClientRect(), transformPoint));\n}\nfunction measurePageBox(element, rootProjectionNode, transformPagePoint) {\n    const viewportBox = measureViewportBox(element, transformPagePoint);\n    const { scroll } = rootProjectionNode;\n    if (scroll) {\n        translateAxis(viewportBox.x, scroll.offset.x);\n        translateAxis(viewportBox.y, scroll.offset.y);\n    }\n    return viewportBox;\n}\n\nexport { measurePageBox, measureViewportBox };\n","// Fixes https://github.com/framer/motion/issues/2270\nconst getContextWindow = ({ current }) => {\n    return current ? current.ownerDocument.defaultView : null;\n};\n\nexport { getContextWindow };\n","import { invariant } from '../../utils/errors.mjs';\nimport { PanSession } from '../pan/PanSession.mjs';\nimport { getGlobalLock } from './utils/lock.mjs';\nimport { isRefObject } from '../../utils/is-ref-object.mjs';\nimport { addPointerEvent } from '../../events/add-pointer-event.mjs';\nimport { applyConstraints, calcRelativeConstraints, resolveDragElastic, calcViewportConstraints, rebaseAxisConstraints, calcOrigin, defaultElastic } from './utils/constraints.mjs';\nimport { createBox } from '../../projection/geometry/models.mjs';\nimport { eachAxis } from '../../projection/utils/each-axis.mjs';\nimport { measurePageBox } from '../../projection/utils/measure.mjs';\nimport { extractEventInfo } from '../../events/event-info.mjs';\nimport { convertBoxToBoundingBox, convertBoundingBoxToBox } from '../../projection/geometry/conversion.mjs';\nimport { addDomEvent } from '../../events/add-dom-event.mjs';\nimport { calcLength } from '../../projection/geometry/delta-calc.mjs';\nimport { mixNumber } from '../../utils/mix/number.mjs';\nimport { percent } from '../../value/types/numbers/units.mjs';\nimport { animateMotionValue } from '../../animation/interfaces/motion-value.mjs';\nimport { getContextWindow } from '../../utils/get-context-window.mjs';\n\nconst elementDragControls = new WeakMap();\n/**\n *\n */\n// let latestPointerEvent: PointerEvent\nclass VisualElementDragControls {\n    constructor(visualElement) {\n        // This is a reference to the global drag gesture lock, ensuring only one component\n        // can \"capture\" the drag of one or both axes.\n        // TODO: Look into moving this into pansession?\n        this.openGlobalLock = null;\n        this.isDragging = false;\n        this.currentDirection = null;\n        this.originPoint = { x: 0, y: 0 };\n        /**\n         * The permitted boundaries of travel, in pixels.\n         */\n        this.constraints = false;\n        this.hasMutatedConstraints = false;\n        /**\n         * The per-axis resolved elastic values.\n         */\n        this.elastic = createBox();\n        this.visualElement = visualElement;\n    }\n    start(originEvent, { snapToCursor = false } = {}) {\n        /**\n         * Don't start dragging if this component is exiting\n         */\n        const { presenceContext } = this.visualElement;\n        if (presenceContext && presenceContext.isPresent === false)\n            return;\n        const onSessionStart = (event) => {\n            const { dragSnapToOrigin } = this.getProps();\n            // Stop or pause any animations on both axis values immediately. This allows the user to throw and catch\n            // the component.\n            dragSnapToOrigin ? this.pauseAnimation() : this.stopAnimation();\n            if (snapToCursor) {\n                this.snapToCursor(extractEventInfo(event, \"page\").point);\n            }\n        };\n        const onStart = (event, info) => {\n            // Attempt to grab the global drag gesture lock - maybe make this part of PanSession\n            const { drag, dragPropagation, onDragStart } = this.getProps();\n            if (drag && !dragPropagation) {\n                if (this.openGlobalLock)\n                    this.openGlobalLock();\n                this.openGlobalLock = getGlobalLock(drag);\n                // If we don 't have the lock, don't start dragging\n                if (!this.openGlobalLock)\n                    return;\n            }\n            this.isDragging = true;\n            this.currentDirection = null;\n            this.resolveConstraints();\n            if (this.visualElement.projection) {\n                this.visualElement.projection.isAnimationBlocked = true;\n                this.visualElement.projection.target = undefined;\n            }\n            /**\n             * Record gesture origin\n             */\n            eachAxis((axis) => {\n                let current = this.getAxisMotionValue(axis).get() || 0;\n                /**\n                 * If the MotionValue is a percentage value convert to px\n                 */\n                if (percent.test(current)) {\n                    const { projection } = this.visualElement;\n                    if (projection && projection.layout) {\n                        const measuredAxis = projection.layout.layoutBox[axis];\n                        if (measuredAxis) {\n                            const length = calcLength(measuredAxis);\n                            current = length * (parseFloat(current) / 100);\n                        }\n                    }\n                }\n                this.originPoint[axis] = current;\n            });\n            // Fire onDragStart event\n            if (onDragStart)\n                onDragStart(event, info);\n            const { animationState } = this.visualElement;\n            animationState && animationState.setActive(\"whileDrag\", true);\n        };\n        const onMove = (event, info) => {\n            // latestPointerEvent = event\n            const { dragPropagation, dragDirectionLock, onDirectionLock, onDrag, } = this.getProps();\n            // If we didn't successfully receive the gesture lock, early return.\n            if (!dragPropagation && !this.openGlobalLock)\n                return;\n            const { offset } = info;\n            // Attempt to detect drag direction if directionLock is true\n            if (dragDirectionLock && this.currentDirection === null) {\n                this.currentDirection = getCurrentDirection(offset);\n                // If we've successfully set a direction, notify listener\n                if (this.currentDirection !== null) {\n                    onDirectionLock && onDirectionLock(this.currentDirection);\n                }\n                return;\n            }\n            // Update each point with the latest position\n            this.updateAxis(\"x\", info.point, offset);\n            this.updateAxis(\"y\", info.point, offset);\n            /**\n             * Ideally we would leave the renderer to fire naturally at the end of\n             * this frame but if the element is about to change layout as the result\n             * of a re-render we want to ensure the browser can read the latest\n             * bounding box to ensure the pointer and element don't fall out of sync.\n             */\n            this.visualElement.render();\n            /**\n             * This must fire after the render call as it might trigger a state\n             * change which itself might trigger a layout update.\n             */\n            onDrag && onDrag(event, info);\n        };\n        const onSessionEnd = (event, info) => this.stop(event, info);\n        const resumeAnimation = () => eachAxis((axis) => {\n            var _a;\n            return this.getAnimationState(axis) === \"paused\" &&\n                ((_a = this.getAxisMotionValue(axis).animation) === null || _a === void 0 ? void 0 : _a.play());\n        });\n        const { dragSnapToOrigin } = this.getProps();\n        this.panSession = new PanSession(originEvent, {\n            onSessionStart,\n            onStart,\n            onMove,\n            onSessionEnd,\n            resumeAnimation,\n        }, {\n            transformPagePoint: this.visualElement.getTransformPagePoint(),\n            dragSnapToOrigin,\n            contextWindow: getContextWindow(this.visualElement),\n        });\n    }\n    stop(event, info) {\n        const isDragging = this.isDragging;\n        this.cancel();\n        if (!isDragging)\n            return;\n        const { velocity } = info;\n        this.startAnimation(velocity);\n        const { onDragEnd } = this.getProps();\n        if (onDragEnd)\n            onDragEnd(event, info);\n    }\n    cancel() {\n        this.isDragging = false;\n        const { projection, animationState } = this.visualElement;\n        if (projection) {\n            projection.isAnimationBlocked = false;\n        }\n        this.panSession && this.panSession.end();\n        this.panSession = undefined;\n        const { dragPropagation } = this.getProps();\n        if (!dragPropagation && this.openGlobalLock) {\n            this.openGlobalLock();\n            this.openGlobalLock = null;\n        }\n        animationState && animationState.setActive(\"whileDrag\", false);\n    }\n    updateAxis(axis, _point, offset) {\n        const { drag } = this.getProps();\n        // If we're not dragging this axis, do an early return.\n        if (!offset || !shouldDrag(axis, drag, this.currentDirection))\n            return;\n        const axisValue = this.getAxisMotionValue(axis);\n        let next = this.originPoint[axis] + offset[axis];\n        // Apply constraints\n        if (this.constraints && this.constraints[axis]) {\n            next = applyConstraints(next, this.constraints[axis], this.elastic[axis]);\n        }\n        axisValue.set(next);\n    }\n    resolveConstraints() {\n        var _a;\n        const { dragConstraints, dragElastic } = this.getProps();\n        const layout = this.visualElement.projection &&\n            !this.visualElement.projection.layout\n            ? this.visualElement.projection.measure(false)\n            : (_a = this.visualElement.projection) === null || _a === void 0 ? void 0 : _a.layout;\n        const prevConstraints = this.constraints;\n        if (dragConstraints && isRefObject(dragConstraints)) {\n            if (!this.constraints) {\n                this.constraints = this.resolveRefConstraints();\n            }\n        }\n        else {\n            if (dragConstraints && layout) {\n                this.constraints = calcRelativeConstraints(layout.layoutBox, dragConstraints);\n            }\n            else {\n                this.constraints = false;\n            }\n        }\n        this.elastic = resolveDragElastic(dragElastic);\n        /**\n         * If we're outputting to external MotionValues, we want to rebase the measured constraints\n         * from viewport-relative to component-relative.\n         */\n        if (prevConstraints !== this.constraints &&\n            layout &&\n            this.constraints &&\n            !this.hasMutatedConstraints) {\n            eachAxis((axis) => {\n                if (this.constraints !== false &&\n                    this.getAxisMotionValue(axis)) {\n                    this.constraints[axis] = rebaseAxisConstraints(layout.layoutBox[axis], this.constraints[axis]);\n                }\n            });\n        }\n    }\n    resolveRefConstraints() {\n        const { dragConstraints: constraints, onMeasureDragConstraints } = this.getProps();\n        if (!constraints || !isRefObject(constraints))\n            return false;\n        const constraintsElement = constraints.current;\n        invariant(constraintsElement !== null, \"If `dragConstraints` is set as a React ref, that ref must be passed to another component's `ref` prop.\");\n        const { projection } = this.visualElement;\n        // TODO\n        if (!projection || !projection.layout)\n            return false;\n        const constraintsBox = measurePageBox(constraintsElement, projection.root, this.visualElement.getTransformPagePoint());\n        let measuredConstraints = calcViewportConstraints(projection.layout.layoutBox, constraintsBox);\n        /**\n         * If there's an onMeasureDragConstraints listener we call it and\n         * if different constraints are returned, set constraints to that\n         */\n        if (onMeasureDragConstraints) {\n            const userConstraints = onMeasureDragConstraints(convertBoxToBoundingBox(measuredConstraints));\n            this.hasMutatedConstraints = !!userConstraints;\n            if (userConstraints) {\n                measuredConstraints = convertBoundingBoxToBox(userConstraints);\n            }\n        }\n        return measuredConstraints;\n    }\n    startAnimation(velocity) {\n        const { drag, dragMomentum, dragElastic, dragTransition, dragSnapToOrigin, onDragTransitionEnd, } = this.getProps();\n        const constraints = this.constraints || {};\n        const momentumAnimations = eachAxis((axis) => {\n            if (!shouldDrag(axis, drag, this.currentDirection)) {\n                return;\n            }\n            let transition = (constraints && constraints[axis]) || {};\n            if (dragSnapToOrigin)\n                transition = { min: 0, max: 0 };\n            /**\n             * Overdamp the boundary spring if `dragElastic` is disabled. There's still a frame\n             * of spring animations so we should look into adding a disable spring option to `inertia`.\n             * We could do something here where we affect the `bounceStiffness` and `bounceDamping`\n             * using the value of `dragElastic`.\n             */\n            const bounceStiffness = dragElastic ? 200 : 1000000;\n            const bounceDamping = dragElastic ? 40 : 10000000;\n            const inertia = {\n                type: \"inertia\",\n                velocity: dragMomentum ? velocity[axis] : 0,\n                bounceStiffness,\n                bounceDamping,\n                timeConstant: 750,\n                restDelta: 1,\n                restSpeed: 10,\n                ...dragTransition,\n                ...transition,\n            };\n            // If we're not animating on an externally-provided `MotionValue` we can use the\n            // component's animation controls which will handle interactions with whileHover (etc),\n            // otherwise we just have to animate the `MotionValue` itself.\n            return this.startAxisValueAnimation(axis, inertia);\n        });\n        // Run all animations and then resolve the new drag constraints.\n        return Promise.all(momentumAnimations).then(onDragTransitionEnd);\n    }\n    startAxisValueAnimation(axis, transition) {\n        const axisValue = this.getAxisMotionValue(axis);\n        return axisValue.start(animateMotionValue(axis, axisValue, 0, transition, this.visualElement));\n    }\n    stopAnimation() {\n        eachAxis((axis) => this.getAxisMotionValue(axis).stop());\n    }\n    pauseAnimation() {\n        eachAxis((axis) => { var _a; return (_a = this.getAxisMotionValue(axis).animation) === null || _a === void 0 ? void 0 : _a.pause(); });\n    }\n    getAnimationState(axis) {\n        var _a;\n        return (_a = this.getAxisMotionValue(axis).animation) === null || _a === void 0 ? void 0 : _a.state;\n    }\n    /**\n     * Drag works differently depending on which props are provided.\n     *\n     * - If _dragX and _dragY are provided, we output the gesture delta directly to those motion values.\n     * - Otherwise, we apply the delta to the x/y motion values.\n     */\n    getAxisMotionValue(axis) {\n        const dragKey = `_drag${axis.toUpperCase()}`;\n        const props = this.visualElement.getProps();\n        const externalMotionValue = props[dragKey];\n        return externalMotionValue\n            ? externalMotionValue\n            : this.visualElement.getValue(axis, (props.initial\n                ? props.initial[axis]\n                : undefined) || 0);\n    }\n    snapToCursor(point) {\n        eachAxis((axis) => {\n            const { drag } = this.getProps();\n            // If we're not dragging this axis, do an early return.\n            if (!shouldDrag(axis, drag, this.currentDirection))\n                return;\n            const { projection } = this.visualElement;\n            const axisValue = this.getAxisMotionValue(axis);\n            if (projection && projection.layout) {\n                const { min, max } = projection.layout.layoutBox[axis];\n                axisValue.set(point[axis] - mixNumber(min, max, 0.5));\n            }\n        });\n    }\n    /**\n     * When the viewport resizes we want to check if the measured constraints\n     * have changed and, if so, reposition the element within those new constraints\n     * relative to where it was before the resize.\n     */\n    scalePositionWithinConstraints() {\n        if (!this.visualElement.current)\n            return;\n        const { drag, dragConstraints } = this.getProps();\n        const { projection } = this.visualElement;\n        if (!isRefObject(dragConstraints) || !projection || !this.constraints)\n            return;\n        /**\n         * Stop current animations as there can be visual glitching if we try to do\n         * this mid-animation\n         */\n        this.stopAnimation();\n        /**\n         * Record the relative position of the dragged element relative to the\n         * constraints box and save as a progress value.\n         */\n        const boxProgress = { x: 0, y: 0 };\n        eachAxis((axis) => {\n            const axisValue = this.getAxisMotionValue(axis);\n            if (axisValue && this.constraints !== false) {\n                const latest = axisValue.get();\n                boxProgress[axis] = calcOrigin({ min: latest, max: latest }, this.constraints[axis]);\n            }\n        });\n        /**\n         * Update the layout of this element and resolve the latest drag constraints\n         */\n        const { transformTemplate } = this.visualElement.getProps();\n        this.visualElement.current.style.transform = transformTemplate\n            ? transformTemplate({}, \"\")\n            : \"none\";\n        projection.root && projection.root.updateScroll();\n        projection.updateLayout();\n        this.resolveConstraints();\n        /**\n         * For each axis, calculate the current progress of the layout axis\n         * within the new constraints.\n         */\n        eachAxis((axis) => {\n            if (!shouldDrag(axis, drag, null))\n                return;\n            /**\n             * Calculate a new transform based on the previous box progress\n             */\n            const axisValue = this.getAxisMotionValue(axis);\n            const { min, max } = this.constraints[axis];\n            axisValue.set(mixNumber(min, max, boxProgress[axis]));\n        });\n    }\n    addListeners() {\n        if (!this.visualElement.current)\n            return;\n        elementDragControls.set(this.visualElement, this);\n        const element = this.visualElement.current;\n        /**\n         * Attach a pointerdown event listener on this DOM element to initiate drag tracking.\n         */\n        const stopPointerListener = addPointerEvent(element, \"pointerdown\", (event) => {\n            const { drag, dragListener = true } = this.getProps();\n            drag && dragListener && this.start(event);\n        });\n        const measureDragConstraints = () => {\n            const { dragConstraints } = this.getProps();\n            if (isRefObject(dragConstraints)) {\n                this.constraints = this.resolveRefConstraints();\n            }\n        };\n        const { projection } = this.visualElement;\n        const stopMeasureLayoutListener = projection.addEventListener(\"measure\", measureDragConstraints);\n        if (projection && !projection.layout) {\n            projection.root && projection.root.updateScroll();\n            projection.updateLayout();\n        }\n        measureDragConstraints();\n        /**\n         * Attach a window resize listener to scale the draggable target within its defined\n         * constraints as the window resizes.\n         */\n        const stopResizeListener = addDomEvent(window, \"resize\", () => this.scalePositionWithinConstraints());\n        /**\n         * If the element's layout changes, calculate the delta and apply that to\n         * the drag gesture's origin point.\n         */\n        const stopLayoutUpdateListener = projection.addEventListener(\"didUpdate\", (({ delta, hasLayoutChanged }) => {\n            if (this.isDragging && hasLayoutChanged) {\n                eachAxis((axis) => {\n                    const motionValue = this.getAxisMotionValue(axis);\n                    if (!motionValue)\n                        return;\n                    this.originPoint[axis] += delta[axis].translate;\n                    motionValue.set(motionValue.get() + delta[axis].translate);\n                });\n                this.visualElement.render();\n            }\n        }));\n        return () => {\n            stopResizeListener();\n            stopPointerListener();\n            stopMeasureLayoutListener();\n            stopLayoutUpdateListener && stopLayoutUpdateListener();\n        };\n    }\n    getProps() {\n        const props = this.visualElement.getProps();\n        const { drag = false, dragDirectionLock = false, dragPropagation = false, dragConstraints = false, dragElastic = defaultElastic, dragMomentum = true, } = props;\n        return {\n            ...props,\n            drag,\n            dragDirectionLock,\n            dragPropagation,\n            dragConstraints,\n            dragElastic,\n            dragMomentum,\n        };\n    }\n}\nfunction shouldDrag(direction, drag, currentDirection) {\n    return ((drag === true || drag === direction) &&\n        (currentDirection === null || currentDirection === direction));\n}\n/**\n * Based on an x/y offset determine the current drag direction. If both axis' offsets are lower\n * than the provided threshold, return `null`.\n *\n * @param offset - The x/y offset from origin.\n * @param lockThreshold - (Optional) - the minimum absolute offset before we can determine a drag direction.\n */\nfunction getCurrentDirection(offset, lockThreshold = 10) {\n    let direction = null;\n    if (Math.abs(offset.y) > lockThreshold) {\n        direction = \"y\";\n    }\n    else if (Math.abs(offset.x) > lockThreshold) {\n        direction = \"x\";\n    }\n    return direction;\n}\n\nexport { VisualElementDragControls, elementDragControls };\n","import { PanSession } from './PanSession.mjs';\nimport { addPointerEvent } from '../../events/add-pointer-event.mjs';\nimport { Feature } from '../../motion/features/Feature.mjs';\nimport { noop } from '../../utils/noop.mjs';\nimport { getContextWindow } from '../../utils/get-context-window.mjs';\n\nconst asyncHandler = (handler) => (event, info) => {\n    if (handler) {\n        handler(event, info);\n    }\n};\nclass PanGesture extends Feature {\n    constructor() {\n        super(...arguments);\n        this.removePointerDownListener = noop;\n    }\n    onPointerDown(pointerDownEvent) {\n        this.session = new PanSession(pointerDownEvent, this.createPanHandlers(), {\n            transformPagePoint: this.node.getTransformPagePoint(),\n            contextWindow: getContextWindow(this.node),\n        });\n    }\n    createPanHandlers() {\n        const { onPanSessionStart, onPanStart, onPan, onPanEnd } = this.node.getProps();\n        return {\n            onSessionStart: asyncHandler(onPanSessionStart),\n            onStart: asyncHandler(onPanStart),\n            onMove: onPan,\n            onEnd: (event, info) => {\n                delete this.session;\n                if (onPanEnd)\n                    onPanEnd(event, info);\n            },\n        };\n    }\n    mount() {\n        this.removePointerDownListener = addPointerEvent(this.node.current, \"pointerdown\", (event) => this.onPointerDown(event));\n    }\n    update() {\n        this.session && this.session.updateHandlers(this.createPanHandlers());\n    }\n    unmount() {\n        this.removePointerDownListener();\n        this.session && this.session.end();\n    }\n}\n\nexport { PanGesture };\n","/**\n * This should only ever be modified on the client otherwise it'll\n * persist through server requests. If we need instanced states we\n * could lazy-init via root.\n */\nconst globalProjectionState = {\n    /**\n     * Global flag as to whether the tree has animated since the last time\n     * we resized the window\n     */\n    hasAnimatedSinceResize: true,\n    /**\n     * We set this to true once, on the first update. Any nodes added to the tree beyond that\n     * update will be given a `data-projection-id` attribute.\n     */\n    hasEverUpdated: false,\n};\n\nexport { globalProjectionState };\n","import { px } from '../../value/types/numbers/units.mjs';\n\nfunction pixelsToPercent(pixels, axis) {\n    if (axis.max === axis.min)\n        return 0;\n    return (pixels / (axis.max - axis.min)) * 100;\n}\n/**\n * We always correct borderRadius as a percentage rather than pixels to reduce paints.\n * For example, if you are projecting a box that is 100px wide with a 10px borderRadius\n * into a box that is 200px wide with a 20px borderRadius, that is actually a 10%\n * borderRadius in both states. If we animate between the two in pixels that will trigger\n * a paint each time. If we animate between the two in percentage we'll avoid a paint.\n */\nconst correctBorderRadius = {\n    correct: (latest, node) => {\n        if (!node.target)\n            return latest;\n        /**\n         * If latest is a string, if it's a percentage we can return immediately as it's\n         * going to be stretched appropriately. Otherwise, if it's a pixel, convert it to a number.\n         */\n        if (typeof latest === \"string\") {\n            if (px.test(latest)) {\n                latest = parseFloat(latest);\n            }\n            else {\n                return latest;\n            }\n        }\n        /**\n         * If latest is a number, it's a pixel value. We use the current viewportBox to calculate that\n         * pixel value as a percentage of each axis\n         */\n        const x = pixelsToPercent(latest, node.target.x);\n        const y = pixelsToPercent(latest, node.target.y);\n        return `${x}% ${y}%`;\n    },\n};\n\nexport { correctBorderRadius, pixelsToPercent };\n","import { mixNumber } from '../../utils/mix/number.mjs';\nimport { complex } from '../../value/types/complex/index.mjs';\n\nconst correctBoxShadow = {\n    correct: (latest, { treeScale, projectionDelta }) => {\n        const original = latest;\n        const shadow = complex.parse(latest);\n        // TODO: Doesn't support multiple shadows\n        if (shadow.length > 5)\n            return original;\n        const template = complex.createTransformer(latest);\n        const offset = typeof shadow[0] !== \"number\" ? 1 : 0;\n        // Calculate the overall context scale\n        const xScale = projectionDelta.x.scale * treeScale.x;\n        const yScale = projectionDelta.y.scale * treeScale.y;\n        shadow[0 + offset] /= xScale;\n        shadow[1 + offset] /= yScale;\n        /**\n         * Ideally we'd correct x and y scales individually, but because blur and\n         * spread apply to both we have to take a scale average and apply that instead.\n         * We could potentially improve the outcome of this by incorporating the ratio between\n         * the two scales.\n         */\n        const averageScale = mixNumber(xScale, yScale, 0.5);\n        // Blur\n        if (typeof shadow[2 + offset] === \"number\")\n            shadow[2 + offset] /= averageScale;\n        // Spread\n        if (typeof shadow[3 + offset] === \"number\")\n            shadow[3 + offset] /= averageScale;\n        return template(shadow);\n    },\n};\n\nexport { correctBoxShadow };\n","import { jsx } from 'react/jsx-runtime';\nimport { useContext, Component } from 'react';\nimport { usePresence } from '../../../components/AnimatePresence/use-presence.mjs';\nimport { LayoutGroupContext } from '../../../context/LayoutGroupContext.mjs';\nimport { SwitchLayoutGroupContext } from '../../../context/SwitchLayoutGroupContext.mjs';\nimport { globalProjectionState } from '../../../projection/node/state.mjs';\nimport { correctBorderRadius } from '../../../projection/styles/scale-border-radius.mjs';\nimport { correctBoxShadow } from '../../../projection/styles/scale-box-shadow.mjs';\nimport { addScaleCorrector } from '../../../projection/styles/scale-correction.mjs';\nimport { microtask } from '../../../frameloop/microtask.mjs';\nimport { frame } from '../../../frameloop/frame.mjs';\n\nclass MeasureLayoutWithContext extends Component {\n    /**\n     * This only mounts projection nodes for components that\n     * need measuring, we might want to do it for all components\n     * in order to incorporate transforms\n     */\n    componentDidMount() {\n        const { visualElement, layoutGroup, switchLayoutGroup, layoutId } = this.props;\n        const { projection } = visualElement;\n        addScaleCorrector(defaultScaleCorrectors);\n        if (projection) {\n            if (layoutGroup.group)\n                layoutGroup.group.add(projection);\n            if (switchLayoutGroup && switchLayoutGroup.register && layoutId) {\n                switchLayoutGroup.register(projection);\n            }\n            projection.root.didUpdate();\n            projection.addEventListener(\"animationComplete\", () => {\n                this.safeToRemove();\n            });\n            projection.setOptions({\n                ...projection.options,\n                onExitComplete: () => this.safeToRemove(),\n            });\n        }\n        globalProjectionState.hasEverUpdated = true;\n    }\n    getSnapshotBeforeUpdate(prevProps) {\n        const { layoutDependency, visualElement, drag, isPresent } = this.props;\n        const projection = visualElement.projection;\n        if (!projection)\n            return null;\n        /**\n         * TODO: We use this data in relegate to determine whether to\n         * promote a previous element. There's no guarantee its presence data\n         * will have updated by this point - if a bug like this arises it will\n         * have to be that we markForRelegation and then find a new lead some other way,\n         * perhaps in didUpdate\n         */\n        projection.isPresent = isPresent;\n        if (drag ||\n            prevProps.layoutDependency !== layoutDependency ||\n            layoutDependency === undefined) {\n            projection.willUpdate();\n        }\n        else {\n            this.safeToRemove();\n        }\n        if (prevProps.isPresent !== isPresent) {\n            if (isPresent) {\n                projection.promote();\n            }\n            else if (!projection.relegate()) {\n                /**\n                 * If there's another stack member taking over from this one,\n                 * it's in charge of the exit animation and therefore should\n                 * be in charge of the safe to remove. Otherwise we call it here.\n                 */\n                frame.postRender(() => {\n                    const stack = projection.getStack();\n                    if (!stack || !stack.members.length) {\n                        this.safeToRemove();\n                    }\n                });\n            }\n        }\n        return null;\n    }\n    componentDidUpdate() {\n        const { projection } = this.props.visualElement;\n        if (projection) {\n            projection.root.didUpdate();\n            microtask.postRender(() => {\n                if (!projection.currentAnimation && projection.isLead()) {\n                    this.safeToRemove();\n                }\n            });\n        }\n    }\n    componentWillUnmount() {\n        const { visualElement, layoutGroup, switchLayoutGroup: promoteContext, } = this.props;\n        const { projection } = visualElement;\n        if (projection) {\n            projection.scheduleCheckAfterUnmount();\n            if (layoutGroup && layoutGroup.group)\n                layoutGroup.group.remove(projection);\n            if (promoteContext && promoteContext.deregister)\n                promoteContext.deregister(projection);\n        }\n    }\n    safeToRemove() {\n        const { safeToRemove } = this.props;\n        safeToRemove && safeToRemove();\n    }\n    render() {\n        return null;\n    }\n}\nfunction MeasureLayout(props) {\n    const [isPresent, safeToRemove] = usePresence();\n    const layoutGroup = useContext(LayoutGroupContext);\n    return (jsx(MeasureLayoutWithContext, { ...props, layoutGroup: layoutGroup, switchLayoutGroup: useContext(SwitchLayoutGroupContext), isPresent: isPresent, safeToRemove: safeToRemove }));\n}\nconst defaultScaleCorrectors = {\n    borderRadius: {\n        ...correctBorderRadius,\n        applyTo: [\n            \"borderTopLeftRadius\",\n            \"borderTopRightRadius\",\n            \"borderBottomLeftRadius\",\n            \"borderBottomRightRadius\",\n        ],\n    },\n    borderTopLeftRadius: correctBorderRadius,\n    borderTopRightRadius: correctBorderRadius,\n    borderBottomLeftRadius: correctBorderRadius,\n    borderBottomRightRadius: correctBorderRadius,\n    boxShadow: correctBoxShadow,\n};\n\nexport { MeasureLayout };\n","import { useContext, useId, useEffect } from 'react';\nimport { PresenceContext } from '../../context/PresenceContext.mjs';\n\n/**\n * When a component is the child of `AnimatePresence`, it can use `usePresence`\n * to access information about whether it's still present in the React tree.\n *\n * ```jsx\n * import { usePresence } from \"framer-motion\"\n *\n * export const Component = () => {\n *   const [isPresent, safeToRemove] = usePresence()\n *\n *   useEffect(() => {\n *     !isPresent && setTimeout(safeToRemove, 1000)\n *   }, [isPresent])\n *\n *   return <div />\n * }\n * ```\n *\n * If `isPresent` is `false`, it means that a component has been removed the tree, but\n * `AnimatePresence` won't really remove it until `safeToRemove` has been called.\n *\n * @public\n */\nfunction usePresence() {\n    const context = useContext(PresenceContext);\n    if (context === null)\n        return [true, null];\n    const { isPresent, onExitComplete, register } = context;\n    // It's safe to call the following hooks conditionally (after an early return) because the context will always\n    // either be null or non-null for the lifespan of the component.\n    const id = useId();\n    useEffect(() => register(id), []);\n    const safeToRemove = () => onExitComplete && onExitComplete(id);\n    return !isPresent && onExitComplete ? [false, safeToRemove] : [true];\n}\n/**\n * Similar to `usePresence`, except `useIsPresent` simply returns whether or not the component is present.\n * There is no `safeToRemove` function.\n *\n * ```jsx\n * import { useIsPresent } from \"framer-motion\"\n *\n * export const Component = () => {\n *   const isPresent = useIsPresent()\n *\n *   useEffect(() => {\n *     !isPresent && console.log(\"I've been removed!\")\n *   }, [isPresent])\n *\n *   return <div />\n * }\n * ```\n *\n * @public\n */\nfunction useIsPresent() {\n    return isPresent(useContext(PresenceContext));\n}\nfunction isPresent(context) {\n    return context === null ? true : context.isPresent;\n}\n\nexport { isPresent, useIsPresent, usePresence };\n","import { circOut } from '../../easing/circ.mjs';\nimport { progress } from '../../utils/progress.mjs';\nimport { mixNumber } from '../../utils/mix/number.mjs';\nimport { noop } from '../../utils/noop.mjs';\nimport { percent, px } from '../../value/types/numbers/units.mjs';\n\nconst borders = [\"TopLeft\", \"TopRight\", \"BottomLeft\", \"BottomRight\"];\nconst numBorders = borders.length;\nconst asNumber = (value) => typeof value === \"string\" ? parseFloat(value) : value;\nconst isPx = (value) => typeof value === \"number\" || px.test(value);\nfunction mixValues(target, follow, lead, progress, shouldCrossfadeOpacity, isOnlyMember) {\n    if (shouldCrossfadeOpacity) {\n        target.opacity = mixNumber(0, \n        // TODO Reinstate this if only child\n        lead.opacity !== undefined ? lead.opacity : 1, easeCrossfadeIn(progress));\n        target.opacityExit = mixNumber(follow.opacity !== undefined ? follow.opacity : 1, 0, easeCrossfadeOut(progress));\n    }\n    else if (isOnlyMember) {\n        target.opacity = mixNumber(follow.opacity !== undefined ? follow.opacity : 1, lead.opacity !== undefined ? lead.opacity : 1, progress);\n    }\n    /**\n     * Mix border radius\n     */\n    for (let i = 0; i < numBorders; i++) {\n        const borderLabel = `border${borders[i]}Radius`;\n        let followRadius = getRadius(follow, borderLabel);\n        let leadRadius = getRadius(lead, borderLabel);\n        if (followRadius === undefined && leadRadius === undefined)\n            continue;\n        followRadius || (followRadius = 0);\n        leadRadius || (leadRadius = 0);\n        const canMix = followRadius === 0 ||\n            leadRadius === 0 ||\n            isPx(followRadius) === isPx(leadRadius);\n        if (canMix) {\n            target[borderLabel] = Math.max(mixNumber(asNumber(followRadius), asNumber(leadRadius), progress), 0);\n            if (percent.test(leadRadius) || percent.test(followRadius)) {\n                target[borderLabel] += \"%\";\n            }\n        }\n        else {\n            target[borderLabel] = leadRadius;\n        }\n    }\n    /**\n     * Mix rotation\n     */\n    if (follow.rotate || lead.rotate) {\n        target.rotate = mixNumber(follow.rotate || 0, lead.rotate || 0, progress);\n    }\n}\nfunction getRadius(values, radiusName) {\n    return values[radiusName] !== undefined\n        ? values[radiusName]\n        : values.borderRadius;\n}\n// /**\n//  * We only want to mix the background color if there's a follow element\n//  * that we're not crossfading opacity between. For instance with switch\n//  * AnimateSharedLayout animations, this helps the illusion of a continuous\n//  * element being animated but also cuts down on the number of paints triggered\n//  * for elements where opacity is doing that work for us.\n//  */\n// if (\n//     !hasFollowElement &&\n//     latestLeadValues.backgroundColor &&\n//     latestFollowValues.backgroundColor\n// ) {\n//     /**\n//      * This isn't ideal performance-wise as mixColor is creating a new function every frame.\n//      * We could probably create a mixer that runs at the start of the animation but\n//      * the idea behind the crossfader is that it runs dynamically between two potentially\n//      * changing targets (ie opacity or borderRadius may be animating independently via variants)\n//      */\n//     leadState.backgroundColor = followState.backgroundColor = mixColor(\n//         latestFollowValues.backgroundColor as string,\n//         latestLeadValues.backgroundColor as string\n//     )(p)\n// }\nconst easeCrossfadeIn = compress(0, 0.5, circOut);\nconst easeCrossfadeOut = compress(0.5, 0.95, noop);\nfunction compress(min, max, easing) {\n    return (p) => {\n        // Could replace ifs with clamp\n        if (p < min)\n            return 0;\n        if (p > max)\n            return 1;\n        return easing(progress(min, max, p));\n    };\n}\n\nexport { mixValues };\n","/**\n * Reset an axis to the provided origin box.\n *\n * This is a mutative operation.\n */\nfunction copyAxisInto(axis, originAxis) {\n    axis.min = originAxis.min;\n    axis.max = originAxis.max;\n}\n/**\n * Reset a box to the provided origin box.\n *\n * This is a mutative operation.\n */\nfunction copyBoxInto(box, originBox) {\n    copyAxisInto(box.x, originBox.x);\n    copyAxisInto(box.y, originBox.y);\n}\n\nexport { copyAxisInto, copyBoxInto };\n","import { mixNumber } from '../../utils/mix/number.mjs';\nimport { percent } from '../../value/types/numbers/units.mjs';\nimport { scalePoint } from './delta-apply.mjs';\n\n/**\n * Remove a delta from a point. This is essentially the steps of applyPointDelta in reverse\n */\nfunction removePointDelta(point, translate, scale, originPoint, boxScale) {\n    point -= translate;\n    point = scalePoint(point, 1 / scale, originPoint);\n    if (boxScale !== undefined) {\n        point = scalePoint(point, 1 / boxScale, originPoint);\n    }\n    return point;\n}\n/**\n * Remove a delta from an axis. This is essentially the steps of applyAxisDelta in reverse\n */\nfunction removeAxisDelta(axis, translate = 0, scale = 1, origin = 0.5, boxScale, originAxis = axis, sourceAxis = axis) {\n    if (percent.test(translate)) {\n        translate = parseFloat(translate);\n        const relativeProgress = mixNumber(sourceAxis.min, sourceAxis.max, translate / 100);\n        translate = relativeProgress - sourceAxis.min;\n    }\n    if (typeof translate !== \"number\")\n        return;\n    let originPoint = mixNumber(originAxis.min, originAxis.max, origin);\n    if (axis === originAxis)\n        originPoint -= translate;\n    axis.min = removePointDelta(axis.min, translate, scale, originPoint, boxScale);\n    axis.max = removePointDelta(axis.max, translate, scale, originPoint, boxScale);\n}\n/**\n * Remove a transforms from an axis. This is essentially the steps of applyAxisTransforms in reverse\n * and acts as a bridge between motion values and removeAxisDelta\n */\nfunction removeAxisTransforms(axis, transforms, [key, scaleKey, originKey], origin, sourceAxis) {\n    removeAxisDelta(axis, transforms[key], transforms[scaleKey], transforms[originKey], transforms.scale, origin, sourceAxis);\n}\n/**\n * The names of the motion values we want to apply as translation, scale and origin.\n */\nconst xKeys = [\"x\", \"scaleX\", \"originX\"];\nconst yKeys = [\"y\", \"scaleY\", \"originY\"];\n/**\n * Remove a transforms from an box. This is essentially the steps of applyAxisBox in reverse\n * and acts as a bridge between motion values and removeAxisDelta\n */\nfunction removeBoxTransforms(box, transforms, originBox, sourceBox) {\n    removeAxisTransforms(box.x, transforms, xKeys, originBox ? originBox.x : undefined, sourceBox ? sourceBox.x : undefined);\n    removeAxisTransforms(box.y, transforms, yKeys, originBox ? originBox.y : undefined, sourceBox ? sourceBox.y : undefined);\n}\n\nexport { removeAxisDelta, removeAxisTransforms, removeBoxTransforms, removePointDelta };\n","import { calcLength } from './delta-calc.mjs';\n\nfunction isAxisDeltaZero(delta) {\n    return delta.translate === 0 && delta.scale === 1;\n}\nfunction isDeltaZero(delta) {\n    return isAxisDeltaZero(delta.x) && isAxisDeltaZero(delta.y);\n}\nfunction boxEquals(a, b) {\n    return (a.x.min === b.x.min &&\n        a.x.max === b.x.max &&\n        a.y.min === b.y.min &&\n        a.y.max === b.y.max);\n}\nfunction boxEqualsRounded(a, b) {\n    return (Math.round(a.x.min) === Math.round(b.x.min) &&\n        Math.round(a.x.max) === Math.round(b.x.max) &&\n        Math.round(a.y.min) === Math.round(b.y.min) &&\n        Math.round(a.y.max) === Math.round(b.y.max));\n}\nfunction aspectRatio(box) {\n    return calcLength(box.x) / calcLength(box.y);\n}\n\nexport { aspectRatio, boxEquals, boxEqualsRounded, isDeltaZero };\n","import { addUniqueItem, removeItem } from '../../utils/array.mjs';\n\nclass NodeStack {\n    constructor() {\n        this.members = [];\n    }\n    add(node) {\n        addUniqueItem(this.members, node);\n        node.scheduleRender();\n    }\n    remove(node) {\n        removeItem(this.members, node);\n        if (node === this.prevLead) {\n            this.prevLead = undefined;\n        }\n        if (node === this.lead) {\n            const prevLead = this.members[this.members.length - 1];\n            if (prevLead) {\n                this.promote(prevLead);\n            }\n        }\n    }\n    relegate(node) {\n        const indexOfNode = this.members.findIndex((member) => node === member);\n        if (indexOfNode === 0)\n            return false;\n        /**\n         * Find the next projection node that is present\n         */\n        let prevLead;\n        for (let i = indexOfNode; i >= 0; i--) {\n            const member = this.members[i];\n            if (member.isPresent !== false) {\n                prevLead = member;\n                break;\n            }\n        }\n        if (prevLead) {\n            this.promote(prevLead);\n            return true;\n        }\n        else {\n            return false;\n        }\n    }\n    promote(node, preserveFollowOpacity) {\n        const prevLead = this.lead;\n        if (node === prevLead)\n            return;\n        this.prevLead = prevLead;\n        this.lead = node;\n        node.show();\n        if (prevLead) {\n            prevLead.instance && prevLead.scheduleRender();\n            node.scheduleRender();\n            node.resumeFrom = prevLead;\n            if (preserveFollowOpacity) {\n                node.resumeFrom.preserveOpacity = true;\n            }\n            if (prevLead.snapshot) {\n                node.snapshot = prevLead.snapshot;\n                node.snapshot.latestValues =\n                    prevLead.animationValues || prevLead.latestValues;\n            }\n            if (node.root && node.root.isUpdating) {\n                node.isLayoutDirty = true;\n            }\n            const { crossfade } = node.options;\n            if (crossfade === false) {\n                prevLead.hide();\n            }\n            /**\n             * TODO:\n             *   - Test border radius when previous node was deleted\n             *   - boxShadow mixing\n             *   - Shared between element A in scrolled container and element B (scroll stays the same or changes)\n             *   - Shared between element A in transformed container and element B (transform stays the same or changes)\n             *   - Shared between element A in scrolled page and element B (scroll stays the same or changes)\n             * ---\n             *   - Crossfade opacity of root nodes\n             *   - layoutId changes after animation\n             *   - layoutId changes mid animation\n             */\n        }\n    }\n    exitAnimationComplete() {\n        this.members.forEach((node) => {\n            const { options, resumingFrom } = node;\n            options.onExitComplete && options.onExitComplete();\n            if (resumingFrom) {\n                resumingFrom.options.onExitComplete &&\n                    resumingFrom.options.onExitComplete();\n            }\n        });\n    }\n    scheduleRender() {\n        this.members.forEach((node) => {\n            node.instance && node.scheduleRender(false);\n        });\n    }\n    /**\n     * Clear any leads that have been removed this render to prevent them from being\n     * used in future animations and to prevent memory leaks\n     */\n    removeLeadSnapshot() {\n        if (this.lead && this.lead.snapshot) {\n            this.lead.snapshot = undefined;\n        }\n    }\n}\n\nexport { NodeStack };\n","function buildProjectionTransform(delta, treeScale, latestTransform) {\n    let transform = \"\";\n    /**\n     * The translations we use to calculate are always relative to the viewport coordinate space.\n     * But when we apply scales, we also scale the coordinate space of an element and its children.\n     * For instance if we have a treeScale (the culmination of all parent scales) of 0.5 and we need\n     * to move an element 100 pixels, we actually need to move it 200 in within that scaled space.\n     */\n    const xTranslate = delta.x.translate / treeScale.x;\n    const yTranslate = delta.y.translate / treeScale.y;\n    const zTranslate = (latestTransform === null || latestTransform === void 0 ? void 0 : latestTransform.z) || 0;\n    if (xTranslate || yTranslate || zTranslate) {\n        transform = `translate3d(${xTranslate}px, ${yTranslate}px, ${zTranslate}px) `;\n    }\n    /**\n     * Apply scale correction for the tree transform.\n     * This will apply scale to the screen-orientated axes.\n     */\n    if (treeScale.x !== 1 || treeScale.y !== 1) {\n        transform += `scale(${1 / treeScale.x}, ${1 / treeScale.y}) `;\n    }\n    if (latestTransform) {\n        const { transformPerspective, rotate, rotateX, rotateY, skewX, skewY } = latestTransform;\n        if (transformPerspective)\n            transform = `perspective(${transformPerspective}px) ${transform}`;\n        if (rotate)\n            transform += `rotate(${rotate}deg) `;\n        if (rotateX)\n            transform += `rotateX(${rotateX}deg) `;\n        if (rotateY)\n            transform += `rotateY(${rotateY}deg) `;\n        if (skewX)\n            transform += `skewX(${skewX}deg) `;\n        if (skewY)\n            transform += `skewY(${skewY}deg) `;\n    }\n    /**\n     * Apply scale to match the size of the element to the size we want it.\n     * This will apply scale to the element-orientated axes.\n     */\n    const elementScaleX = delta.x.scale * treeScale.x;\n    const elementScaleY = delta.y.scale * treeScale.y;\n    if (elementScaleX !== 1 || elementScaleY !== 1) {\n        transform += `scale(${elementScaleX}, ${elementScaleY})`;\n    }\n    return transform || \"none\";\n}\n\nexport { buildProjectionTransform };\n","const compareByDepth = (a, b) => a.depth - b.depth;\n\nexport { compareByDepth };\n","import { addUniqueItem, removeItem } from '../../utils/array.mjs';\nimport { compareByDepth } from './compare-by-depth.mjs';\n\nclass FlatTree {\n    constructor() {\n        this.children = [];\n        this.isDirty = false;\n    }\n    add(child) {\n        addUniqueItem(this.children, child);\n        this.isDirty = true;\n    }\n    remove(child) {\n        removeItem(this.children, child);\n        this.isDirty = true;\n    }\n    forEach(callback) {\n        this.isDirty && this.children.sort(compareByDepth);\n        this.isDirty = false;\n        this.children.forEach(callback);\n    }\n}\n\nexport { FlatTree };\n","import { SubscriptionManager } from '../../utils/subscription-manager.mjs';\nimport { mixValues } from '../animation/mix-values.mjs';\nimport { copyBoxInto } from '../geometry/copy.mjs';\nimport { translateAxis, transformBox, applyBoxDelta, applyTreeDeltas } from '../geometry/delta-apply.mjs';\nimport { calcRelativePosition, calcRelativeBox, calcBoxDelta, calcLength, isNear } from '../geometry/delta-calc.mjs';\nimport { removeBoxTransforms } from '../geometry/delta-remove.mjs';\nimport { createBox, createDelta } from '../geometry/models.mjs';\nimport { getValueTransition } from '../../animation/utils/transitions.mjs';\nimport { boxEqualsRounded, isDeltaZero, aspectRatio, boxEquals } from '../geometry/utils.mjs';\nimport { NodeStack } from '../shared/stack.mjs';\nimport { scaleCorrectors } from '../styles/scale-correction.mjs';\nimport { buildProjectionTransform } from '../styles/transform.mjs';\nimport { eachAxis } from '../utils/each-axis.mjs';\nimport { hasTransform, hasScale, has2DTranslate } from '../utils/has-transform.mjs';\nimport { FlatTree } from '../../render/utils/flat-tree.mjs';\nimport { resolveMotionValue } from '../../value/utils/resolve-motion-value.mjs';\nimport { globalProjectionState } from './state.mjs';\nimport { delay } from '../../utils/delay.mjs';\nimport { mixNumber } from '../../utils/mix/number.mjs';\nimport { record } from '../../debug/record.mjs';\nimport { isSVGElement } from '../../render/dom/utils/is-svg-element.mjs';\nimport { animateSingleValue } from '../../animation/interfaces/single-value.mjs';\nimport { clamp } from '../../utils/clamp.mjs';\nimport { cancelFrame, frameData, steps, frame } from '../../frameloop/frame.mjs';\nimport { noop } from '../../utils/noop.mjs';\nimport { time } from '../../frameloop/sync-time.mjs';\nimport { microtask } from '../../frameloop/microtask.mjs';\n\nconst transformAxes = [\"\", \"X\", \"Y\", \"Z\"];\nconst hiddenVisibility = { visibility: \"hidden\" };\n/**\n * We use 1000 as the animation target as 0-1000 maps better to pixels than 0-1\n * which has a noticeable difference in spring animations\n */\nconst animationTarget = 1000;\nlet id = 0;\n/**\n * Use a mutable data object for debug data so as to not create a new\n * object every frame.\n */\nconst projectionFrameData = {\n    type: \"projectionFrame\",\n    totalNodes: 0,\n    resolvedTargetDeltas: 0,\n    recalculatedProjection: 0,\n};\nfunction resetDistortingTransform(key, visualElement, values, sharedAnimationValues) {\n    const { latestValues } = visualElement;\n    // Record the distorting transform and then temporarily set it to 0\n    if (latestValues[key]) {\n        values[key] = latestValues[key];\n        visualElement.setStaticValue(key, 0);\n        if (sharedAnimationValues) {\n            sharedAnimationValues[key] = 0;\n        }\n    }\n}\nfunction createProjectionNode({ attachResizeListener, defaultParent, measureScroll, checkIsScrollRoot, resetTransform, }) {\n    return class ProjectionNode {\n        constructor(latestValues = {}, parent = defaultParent === null || defaultParent === void 0 ? void 0 : defaultParent()) {\n            /**\n             * A unique ID generated for every projection node.\n             */\n            this.id = id++;\n            /**\n             * An id that represents a unique session instigated by startUpdate.\n             */\n            this.animationId = 0;\n            /**\n             * A Set containing all this component's children. This is used to iterate\n             * through the children.\n             *\n             * TODO: This could be faster to iterate as a flat array stored on the root node.\n             */\n            this.children = new Set();\n            /**\n             * Options for the node. We use this to configure what kind of layout animations\n             * we should perform (if any).\n             */\n            this.options = {};\n            /**\n             * We use this to detect when its safe to shut down part of a projection tree.\n             * We have to keep projecting children for scale correction and relative projection\n             * until all their parents stop performing layout animations.\n             */\n            this.isTreeAnimating = false;\n            this.isAnimationBlocked = false;\n            /**\n             * Flag to true if we think this layout has been changed. We can't always know this,\n             * currently we set it to true every time a component renders, or if it has a layoutDependency\n             * if that has changed between renders. Additionally, components can be grouped by LayoutGroup\n             * and if one node is dirtied, they all are.\n             */\n            this.isLayoutDirty = false;\n            /**\n             * Flag to true if we think the projection calculations for this node needs\n             * recalculating as a result of an updated transform or layout animation.\n             */\n            this.isProjectionDirty = false;\n            /**\n             * Flag to true if the layout *or* transform has changed. This then gets propagated\n             * throughout the projection tree, forcing any element below to recalculate on the next frame.\n             */\n            this.isSharedProjectionDirty = false;\n            /**\n             * Flag transform dirty. This gets propagated throughout the whole tree but is only\n             * respected by shared nodes.\n             */\n            this.isTransformDirty = false;\n            /**\n             * Block layout updates for instant layout transitions throughout the tree.\n             */\n            this.updateManuallyBlocked = false;\n            this.updateBlockedByResize = false;\n            /**\n             * Set to true between the start of the first `willUpdate` call and the end of the `didUpdate`\n             * call.\n             */\n            this.isUpdating = false;\n            /**\n             * If this is an SVG element we currently disable projection transforms\n             */\n            this.isSVG = false;\n            /**\n             * Flag to true (during promotion) if a node doing an instant layout transition needs to reset\n             * its projection styles.\n             */\n            this.needsReset = false;\n            /**\n             * Flags whether this node should have its transform reset prior to measuring.\n             */\n            this.shouldResetTransform = false;\n            /**\n             * An object representing the calculated contextual/accumulated/tree scale.\n             * This will be used to scale calculcated projection transforms, as these are\n             * calculated in screen-space but need to be scaled for elements to layoutly\n             * make it to their calculated destinations.\n             *\n             * TODO: Lazy-init\n             */\n            this.treeScale = { x: 1, y: 1 };\n            /**\n             *\n             */\n            this.eventHandlers = new Map();\n            this.hasTreeAnimated = false;\n            // Note: Currently only running on root node\n            this.updateScheduled = false;\n            this.projectionUpdateScheduled = false;\n            this.checkUpdateFailed = () => {\n                if (this.isUpdating) {\n                    this.isUpdating = false;\n                    this.clearAllSnapshots();\n                }\n            };\n            /**\n             * This is a multi-step process as shared nodes might be of different depths. Nodes\n             * are sorted by depth order, so we need to resolve the entire tree before moving to\n             * the next step.\n             */\n            this.updateProjection = () => {\n                this.projectionUpdateScheduled = false;\n                /**\n                 * Reset debug counts. Manually resetting rather than creating a new\n                 * object each frame.\n                 */\n                projectionFrameData.totalNodes =\n                    projectionFrameData.resolvedTargetDeltas =\n                        projectionFrameData.recalculatedProjection =\n                            0;\n                this.nodes.forEach(propagateDirtyNodes);\n                this.nodes.forEach(resolveTargetDelta);\n                this.nodes.forEach(calcProjection);\n                this.nodes.forEach(cleanDirtyNodes);\n                record(projectionFrameData);\n            };\n            this.hasProjected = false;\n            this.isVisible = true;\n            this.animationProgress = 0;\n            /**\n             * Shared layout\n             */\n            // TODO Only running on root node\n            this.sharedNodes = new Map();\n            this.latestValues = latestValues;\n            this.root = parent ? parent.root || parent : this;\n            this.path = parent ? [...parent.path, parent] : [];\n            this.parent = parent;\n            this.depth = parent ? parent.depth + 1 : 0;\n            for (let i = 0; i < this.path.length; i++) {\n                this.path[i].shouldResetTransform = true;\n            }\n            if (this.root === this)\n                this.nodes = new FlatTree();\n        }\n        addEventListener(name, handler) {\n            if (!this.eventHandlers.has(name)) {\n                this.eventHandlers.set(name, new SubscriptionManager());\n            }\n            return this.eventHandlers.get(name).add(handler);\n        }\n        notifyListeners(name, ...args) {\n            const subscriptionManager = this.eventHandlers.get(name);\n            subscriptionManager && subscriptionManager.notify(...args);\n        }\n        hasListeners(name) {\n            return this.eventHandlers.has(name);\n        }\n        /**\n         * Lifecycles\n         */\n        mount(instance, isLayoutDirty = this.root.hasTreeAnimated) {\n            if (this.instance)\n                return;\n            this.isSVG = isSVGElement(instance);\n            this.instance = instance;\n            const { layoutId, layout, visualElement } = this.options;\n            if (visualElement && !visualElement.current) {\n                visualElement.mount(instance);\n            }\n            this.root.nodes.add(this);\n            this.parent && this.parent.children.add(this);\n            if (isLayoutDirty && (layout || layoutId)) {\n                this.isLayoutDirty = true;\n            }\n            if (attachResizeListener) {\n                let cancelDelay;\n                const resizeUnblockUpdate = () => (this.root.updateBlockedByResize = false);\n                attachResizeListener(instance, () => {\n                    this.root.updateBlockedByResize = true;\n                    cancelDelay && cancelDelay();\n                    cancelDelay = delay(resizeUnblockUpdate, 250);\n                    if (globalProjectionState.hasAnimatedSinceResize) {\n                        globalProjectionState.hasAnimatedSinceResize = false;\n                        this.nodes.forEach(finishAnimation);\n                    }\n                });\n            }\n            if (layoutId) {\n                this.root.registerSharedNode(layoutId, this);\n            }\n            // Only register the handler if it requires layout animation\n            if (this.options.animate !== false &&\n                visualElement &&\n                (layoutId || layout)) {\n                this.addEventListener(\"didUpdate\", ({ delta, hasLayoutChanged, hasRelativeTargetChanged, layout: newLayout, }) => {\n                    if (this.isTreeAnimationBlocked()) {\n                        this.target = undefined;\n                        this.relativeTarget = undefined;\n                        return;\n                    }\n                    // TODO: Check here if an animation exists\n                    const layoutTransition = this.options.transition ||\n                        visualElement.getDefaultTransition() ||\n                        defaultLayoutTransition;\n                    const { onLayoutAnimationStart, onLayoutAnimationComplete, } = visualElement.getProps();\n                    /**\n                     * The target layout of the element might stay the same,\n                     * but its position relative to its parent has changed.\n                     */\n                    const targetChanged = !this.targetLayout ||\n                        !boxEqualsRounded(this.targetLayout, newLayout) ||\n                        hasRelativeTargetChanged;\n                    /**\n                     * If the layout hasn't seemed to have changed, it might be that the\n                     * element is visually in the same place in the document but its position\n                     * relative to its parent has indeed changed. So here we check for that.\n                     */\n                    const hasOnlyRelativeTargetChanged = !hasLayoutChanged && hasRelativeTargetChanged;\n                    if (this.options.layoutRoot ||\n                        (this.resumeFrom && this.resumeFrom.instance) ||\n                        hasOnlyRelativeTargetChanged ||\n                        (hasLayoutChanged &&\n                            (targetChanged || !this.currentAnimation))) {\n                        if (this.resumeFrom) {\n                            this.resumingFrom = this.resumeFrom;\n                            this.resumingFrom.resumingFrom = undefined;\n                        }\n                        this.setAnimationOrigin(delta, hasOnlyRelativeTargetChanged);\n                        const animationOptions = {\n                            ...getValueTransition(layoutTransition, \"layout\"),\n                            onPlay: onLayoutAnimationStart,\n                            onComplete: onLayoutAnimationComplete,\n                        };\n                        if (visualElement.shouldReduceMotion ||\n                            this.options.layoutRoot) {\n                            animationOptions.delay = 0;\n                            animationOptions.type = false;\n                        }\n                        this.startAnimation(animationOptions);\n                    }\n                    else {\n                        /**\n                         * If the layout hasn't changed and we have an animation that hasn't started yet,\n                         * finish it immediately. Otherwise it will be animating from a location\n                         * that was probably never commited to screen and look like a jumpy box.\n                         */\n                        if (!hasLayoutChanged) {\n                            finishAnimation(this);\n                        }\n                        if (this.isLead() && this.options.onExitComplete) {\n                            this.options.onExitComplete();\n                        }\n                    }\n                    this.targetLayout = newLayout;\n                });\n            }\n        }\n        unmount() {\n            this.options.layoutId && this.willUpdate();\n            this.root.nodes.remove(this);\n            const stack = this.getStack();\n            stack && stack.remove(this);\n            this.parent && this.parent.children.delete(this);\n            this.instance = undefined;\n            cancelFrame(this.updateProjection);\n        }\n        // only on the root\n        blockUpdate() {\n            this.updateManuallyBlocked = true;\n        }\n        unblockUpdate() {\n            this.updateManuallyBlocked = false;\n        }\n        isUpdateBlocked() {\n            return this.updateManuallyBlocked || this.updateBlockedByResize;\n        }\n        isTreeAnimationBlocked() {\n            return (this.isAnimationBlocked ||\n                (this.parent && this.parent.isTreeAnimationBlocked()) ||\n                false);\n        }\n        // Note: currently only running on root node\n        startUpdate() {\n            if (this.isUpdateBlocked())\n                return;\n            this.isUpdating = true;\n            this.nodes && this.nodes.forEach(resetSkewAndRotation);\n            this.animationId++;\n        }\n        getTransformTemplate() {\n            const { visualElement } = this.options;\n            return visualElement && visualElement.getProps().transformTemplate;\n        }\n        willUpdate(shouldNotifyListeners = true) {\n            this.root.hasTreeAnimated = true;\n            if (this.root.isUpdateBlocked()) {\n                this.options.onExitComplete && this.options.onExitComplete();\n                return;\n            }\n            !this.root.isUpdating && this.root.startUpdate();\n            if (this.isLayoutDirty)\n                return;\n            this.isLayoutDirty = true;\n            for (let i = 0; i < this.path.length; i++) {\n                const node = this.path[i];\n                node.shouldResetTransform = true;\n                node.updateScroll(\"snapshot\");\n                if (node.options.layoutRoot) {\n                    node.willUpdate(false);\n                }\n            }\n            const { layoutId, layout } = this.options;\n            if (layoutId === undefined && !layout)\n                return;\n            const transformTemplate = this.getTransformTemplate();\n            this.prevTransformTemplateValue = transformTemplate\n                ? transformTemplate(this.latestValues, \"\")\n                : undefined;\n            this.updateSnapshot();\n            shouldNotifyListeners && this.notifyListeners(\"willUpdate\");\n        }\n        update() {\n            this.updateScheduled = false;\n            const updateWasBlocked = this.isUpdateBlocked();\n            // When doing an instant transition, we skip the layout update,\n            // but should still clean up the measurements so that the next\n            // snapshot could be taken correctly.\n            if (updateWasBlocked) {\n                this.unblockUpdate();\n                this.clearAllSnapshots();\n                this.nodes.forEach(clearMeasurements);\n                return;\n            }\n            if (!this.isUpdating) {\n                this.nodes.forEach(clearIsLayoutDirty);\n            }\n            this.isUpdating = false;\n            /**\n             * Write\n             */\n            if (window.HandoffCancelAllAnimations) {\n                window.HandoffCancelAllAnimations();\n            }\n            this.nodes.forEach(resetTransformStyle);\n            /**\n             * Read ==================\n             */\n            // Update layout measurements of updated children\n            this.nodes.forEach(updateLayout);\n            /**\n             * Write\n             */\n            // Notify listeners that the layout is updated\n            this.nodes.forEach(notifyLayoutUpdate);\n            this.clearAllSnapshots();\n            /**\n             * Manually flush any pending updates. Ideally\n             * we could leave this to the following requestAnimationFrame but this seems\n             * to leave a flash of incorrectly styled content.\n             */\n            const now = time.now();\n            frameData.delta = clamp(0, 1000 / 60, now - frameData.timestamp);\n            frameData.timestamp = now;\n            frameData.isProcessing = true;\n            steps.update.process(frameData);\n            steps.preRender.process(frameData);\n            steps.render.process(frameData);\n            frameData.isProcessing = false;\n        }\n        didUpdate() {\n            if (!this.updateScheduled) {\n                this.updateScheduled = true;\n                microtask.read(() => this.update());\n            }\n        }\n        clearAllSnapshots() {\n            this.nodes.forEach(clearSnapshot);\n            this.sharedNodes.forEach(removeLeadSnapshots);\n        }\n        scheduleUpdateProjection() {\n            if (!this.projectionUpdateScheduled) {\n                this.projectionUpdateScheduled = true;\n                frame.preRender(this.updateProjection, false, true);\n            }\n        }\n        scheduleCheckAfterUnmount() {\n            /**\n             * If the unmounting node is in a layoutGroup and did trigger a willUpdate,\n             * we manually call didUpdate to give a chance to the siblings to animate.\n             * Otherwise, cleanup all snapshots to prevents future nodes from reusing them.\n             */\n            frame.postRender(() => {\n                if (this.isLayoutDirty) {\n                    this.root.didUpdate();\n                }\n                else {\n                    this.root.checkUpdateFailed();\n                }\n            });\n        }\n        /**\n         * Update measurements\n         */\n        updateSnapshot() {\n            if (this.snapshot || !this.instance)\n                return;\n            this.snapshot = this.measure();\n        }\n        updateLayout() {\n            if (!this.instance)\n                return;\n            // TODO: Incorporate into a forwarded scroll offset\n            this.updateScroll();\n            if (!(this.options.alwaysMeasureLayout && this.isLead()) &&\n                !this.isLayoutDirty) {\n                return;\n            }\n            /**\n             * When a node is mounted, it simply resumes from the prevLead's\n             * snapshot instead of taking a new one, but the ancestors scroll\n             * might have updated while the prevLead is unmounted. We need to\n             * update the scroll again to make sure the layout we measure is\n             * up to date.\n             */\n            if (this.resumeFrom && !this.resumeFrom.instance) {\n                for (let i = 0; i < this.path.length; i++) {\n                    const node = this.path[i];\n                    node.updateScroll();\n                }\n            }\n            const prevLayout = this.layout;\n            this.layout = this.measure(false);\n            this.layoutCorrected = createBox();\n            this.isLayoutDirty = false;\n            this.projectionDelta = undefined;\n            this.notifyListeners(\"measure\", this.layout.layoutBox);\n            const { visualElement } = this.options;\n            visualElement &&\n                visualElement.notify(\"LayoutMeasure\", this.layout.layoutBox, prevLayout ? prevLayout.layoutBox : undefined);\n        }\n        updateScroll(phase = \"measure\") {\n            let needsMeasurement = Boolean(this.options.layoutScroll && this.instance);\n            if (this.scroll &&\n                this.scroll.animationId === this.root.animationId &&\n                this.scroll.phase === phase) {\n                needsMeasurement = false;\n            }\n            if (needsMeasurement) {\n                this.scroll = {\n                    animationId: this.root.animationId,\n                    phase,\n                    isRoot: checkIsScrollRoot(this.instance),\n                    offset: measureScroll(this.instance),\n                };\n            }\n        }\n        resetTransform() {\n            if (!resetTransform)\n                return;\n            const isResetRequested = this.isLayoutDirty || this.shouldResetTransform;\n            const hasProjection = this.projectionDelta && !isDeltaZero(this.projectionDelta);\n            const transformTemplate = this.getTransformTemplate();\n            const transformTemplateValue = transformTemplate\n                ? transformTemplate(this.latestValues, \"\")\n                : undefined;\n            const transformTemplateHasChanged = transformTemplateValue !== this.prevTransformTemplateValue;\n            if (isResetRequested &&\n                (hasProjection ||\n                    hasTransform(this.latestValues) ||\n                    transformTemplateHasChanged)) {\n                resetTransform(this.instance, transformTemplateValue);\n                this.shouldResetTransform = false;\n                this.scheduleRender();\n            }\n        }\n        measure(removeTransform = true) {\n            const pageBox = this.measurePageBox();\n            let layoutBox = this.removeElementScroll(pageBox);\n            /**\n             * Measurements taken during the pre-render stage\n             * still have transforms applied so we remove them\n             * via calculation.\n             */\n            if (removeTransform) {\n                layoutBox = this.removeTransform(layoutBox);\n            }\n            roundBox(layoutBox);\n            return {\n                animationId: this.root.animationId,\n                measuredBox: pageBox,\n                layoutBox,\n                latestValues: {},\n                source: this.id,\n            };\n        }\n        measurePageBox() {\n            const { visualElement } = this.options;\n            if (!visualElement)\n                return createBox();\n            const box = visualElement.measureViewportBox();\n            // Remove viewport scroll to give page-relative coordinates\n            const { scroll } = this.root;\n            if (scroll) {\n                translateAxis(box.x, scroll.offset.x);\n                translateAxis(box.y, scroll.offset.y);\n            }\n            return box;\n        }\n        removeElementScroll(box) {\n            const boxWithoutScroll = createBox();\n            copyBoxInto(boxWithoutScroll, box);\n            /**\n             * Performance TODO: Keep a cumulative scroll offset down the tree\n             * rather than loop back up the path.\n             */\n            for (let i = 0; i < this.path.length; i++) {\n                const node = this.path[i];\n                const { scroll, options } = node;\n                if (node !== this.root && scroll && options.layoutScroll) {\n                    /**\n                     * If this is a new scroll root, we want to remove all previous scrolls\n                     * from the viewport box.\n                     */\n                    if (scroll.isRoot) {\n                        copyBoxInto(boxWithoutScroll, box);\n                        const { scroll: rootScroll } = this.root;\n                        /**\n                         * Undo the application of page scroll that was originally added\n                         * to the measured bounding box.\n                         */\n                        if (rootScroll) {\n                            translateAxis(boxWithoutScroll.x, -rootScroll.offset.x);\n                            translateAxis(boxWithoutScroll.y, -rootScroll.offset.y);\n                        }\n                    }\n                    translateAxis(boxWithoutScroll.x, scroll.offset.x);\n                    translateAxis(boxWithoutScroll.y, scroll.offset.y);\n                }\n            }\n            return boxWithoutScroll;\n        }\n        applyTransform(box, transformOnly = false) {\n            const withTransforms = createBox();\n            copyBoxInto(withTransforms, box);\n            for (let i = 0; i < this.path.length; i++) {\n                const node = this.path[i];\n                if (!transformOnly &&\n                    node.options.layoutScroll &&\n                    node.scroll &&\n                    node !== node.root) {\n                    transformBox(withTransforms, {\n                        x: -node.scroll.offset.x,\n                        y: -node.scroll.offset.y,\n                    });\n                }\n                if (!hasTransform(node.latestValues))\n                    continue;\n                transformBox(withTransforms, node.latestValues);\n            }\n            if (hasTransform(this.latestValues)) {\n                transformBox(withTransforms, this.latestValues);\n            }\n            return withTransforms;\n        }\n        removeTransform(box) {\n            const boxWithoutTransform = createBox();\n            copyBoxInto(boxWithoutTransform, box);\n            for (let i = 0; i < this.path.length; i++) {\n                const node = this.path[i];\n                if (!node.instance)\n                    continue;\n                if (!hasTransform(node.latestValues))\n                    continue;\n                hasScale(node.latestValues) && node.updateSnapshot();\n                const sourceBox = createBox();\n                const nodeBox = node.measurePageBox();\n                copyBoxInto(sourceBox, nodeBox);\n                removeBoxTransforms(boxWithoutTransform, node.latestValues, node.snapshot ? node.snapshot.layoutBox : undefined, sourceBox);\n            }\n            if (hasTransform(this.latestValues)) {\n                removeBoxTransforms(boxWithoutTransform, this.latestValues);\n            }\n            return boxWithoutTransform;\n        }\n        setTargetDelta(delta) {\n            this.targetDelta = delta;\n            this.root.scheduleUpdateProjection();\n            this.isProjectionDirty = true;\n        }\n        setOptions(options) {\n            this.options = {\n                ...this.options,\n                ...options,\n                crossfade: options.crossfade !== undefined ? options.crossfade : true,\n            };\n        }\n        clearMeasurements() {\n            this.scroll = undefined;\n            this.layout = undefined;\n            this.snapshot = undefined;\n            this.prevTransformTemplateValue = undefined;\n            this.targetDelta = undefined;\n            this.target = undefined;\n            this.isLayoutDirty = false;\n        }\n        forceRelativeParentToResolveTarget() {\n            if (!this.relativeParent)\n                return;\n            /**\n             * If the parent target isn't up-to-date, force it to update.\n             * This is an unfortunate de-optimisation as it means any updating relative\n             * projection will cause all the relative parents to recalculate back\n             * up the tree.\n             */\n            if (this.relativeParent.resolvedRelativeTargetAt !==\n                frameData.timestamp) {\n                this.relativeParent.resolveTargetDelta(true);\n            }\n        }\n        resolveTargetDelta(forceRecalculation = false) {\n            var _a;\n            /**\n             * Once the dirty status of nodes has been spread through the tree, we also\n             * need to check if we have a shared node of a different depth that has itself\n             * been dirtied.\n             */\n            const lead = this.getLead();\n            this.isProjectionDirty || (this.isProjectionDirty = lead.isProjectionDirty);\n            this.isTransformDirty || (this.isTransformDirty = lead.isTransformDirty);\n            this.isSharedProjectionDirty || (this.isSharedProjectionDirty = lead.isSharedProjectionDirty);\n            const isShared = Boolean(this.resumingFrom) || this !== lead;\n            /**\n             * We don't use transform for this step of processing so we don't\n             * need to check whether any nodes have changed transform.\n             */\n            const canSkip = !(forceRecalculation ||\n                (isShared && this.isSharedProjectionDirty) ||\n                this.isProjectionDirty ||\n                ((_a = this.parent) === null || _a === void 0 ? void 0 : _a.isProjectionDirty) ||\n                this.attemptToResolveRelativeTarget);\n            if (canSkip)\n                return;\n            const { layout, layoutId } = this.options;\n            /**\n             * If we have no layout, we can't perform projection, so early return\n             */\n            if (!this.layout || !(layout || layoutId))\n                return;\n            this.resolvedRelativeTargetAt = frameData.timestamp;\n            /**\n             * If we don't have a targetDelta but do have a layout, we can attempt to resolve\n             * a relativeParent. This will allow a component to perform scale correction\n             * even if no animation has started.\n             */\n            if (!this.targetDelta && !this.relativeTarget) {\n                const relativeParent = this.getClosestProjectingParent();\n                if (relativeParent &&\n                    relativeParent.layout &&\n                    this.animationProgress !== 1) {\n                    this.relativeParent = relativeParent;\n                    this.forceRelativeParentToResolveTarget();\n                    this.relativeTarget = createBox();\n                    this.relativeTargetOrigin = createBox();\n                    calcRelativePosition(this.relativeTargetOrigin, this.layout.layoutBox, relativeParent.layout.layoutBox);\n                    copyBoxInto(this.relativeTarget, this.relativeTargetOrigin);\n                }\n                else {\n                    this.relativeParent = this.relativeTarget = undefined;\n                }\n            }\n            /**\n             * If we have no relative target or no target delta our target isn't valid\n             * for this frame.\n             */\n            if (!this.relativeTarget && !this.targetDelta)\n                return;\n            /**\n             * Lazy-init target data structure\n             */\n            if (!this.target) {\n                this.target = createBox();\n                this.targetWithTransforms = createBox();\n            }\n            /**\n             * If we've got a relative box for this component, resolve it into a target relative to the parent.\n             */\n            if (this.relativeTarget &&\n                this.relativeTargetOrigin &&\n                this.relativeParent &&\n                this.relativeParent.target) {\n                this.forceRelativeParentToResolveTarget();\n                calcRelativeBox(this.target, this.relativeTarget, this.relativeParent.target);\n                /**\n                 * If we've only got a targetDelta, resolve it into a target\n                 */\n            }\n            else if (this.targetDelta) {\n                if (Boolean(this.resumingFrom)) {\n                    // TODO: This is creating a new object every frame\n                    this.target = this.applyTransform(this.layout.layoutBox);\n                }\n                else {\n                    copyBoxInto(this.target, this.layout.layoutBox);\n                }\n                applyBoxDelta(this.target, this.targetDelta);\n            }\n            else {\n                /**\n                 * If no target, use own layout as target\n                 */\n                copyBoxInto(this.target, this.layout.layoutBox);\n            }\n            /**\n             * If we've been told to attempt to resolve a relative target, do so.\n             */\n            if (this.attemptToResolveRelativeTarget) {\n                this.attemptToResolveRelativeTarget = false;\n                const relativeParent = this.getClosestProjectingParent();\n                if (relativeParent &&\n                    Boolean(relativeParent.resumingFrom) ===\n                        Boolean(this.resumingFrom) &&\n                    !relativeParent.options.layoutScroll &&\n                    relativeParent.target &&\n                    this.animationProgress !== 1) {\n                    this.relativeParent = relativeParent;\n                    this.forceRelativeParentToResolveTarget();\n                    this.relativeTarget = createBox();\n                    this.relativeTargetOrigin = createBox();\n                    calcRelativePosition(this.relativeTargetOrigin, this.target, relativeParent.target);\n                    copyBoxInto(this.relativeTarget, this.relativeTargetOrigin);\n                }\n                else {\n                    this.relativeParent = this.relativeTarget = undefined;\n                }\n            }\n            /**\n             * Increase debug counter for resolved target deltas\n             */\n            projectionFrameData.resolvedTargetDeltas++;\n        }\n        getClosestProjectingParent() {\n            if (!this.parent ||\n                hasScale(this.parent.latestValues) ||\n                has2DTranslate(this.parent.latestValues)) {\n                return undefined;\n            }\n            if (this.parent.isProjecting()) {\n                return this.parent;\n            }\n            else {\n                return this.parent.getClosestProjectingParent();\n            }\n        }\n        isProjecting() {\n            return Boolean((this.relativeTarget ||\n                this.targetDelta ||\n                this.options.layoutRoot) &&\n                this.layout);\n        }\n        calcProjection() {\n            var _a;\n            const lead = this.getLead();\n            const isShared = Boolean(this.resumingFrom) || this !== lead;\n            let canSkip = true;\n            /**\n             * If this is a normal layout animation and neither this node nor its nearest projecting\n             * is dirty then we can't skip.\n             */\n            if (this.isProjectionDirty || ((_a = this.parent) === null || _a === void 0 ? void 0 : _a.isProjectionDirty)) {\n                canSkip = false;\n            }\n            /**\n             * If this is a shared layout animation and this node's shared projection is dirty then\n             * we can't skip.\n             */\n            if (isShared &&\n                (this.isSharedProjectionDirty || this.isTransformDirty)) {\n                canSkip = false;\n            }\n            /**\n             * If we have resolved the target this frame we must recalculate the\n             * projection to ensure it visually represents the internal calculations.\n             */\n            if (this.resolvedRelativeTargetAt === frameData.timestamp) {\n                canSkip = false;\n            }\n            if (canSkip)\n                return;\n            const { layout, layoutId } = this.options;\n            /**\n             * If this section of the tree isn't animating we can\n             * delete our target sources for the following frame.\n             */\n            this.isTreeAnimating = Boolean((this.parent && this.parent.isTreeAnimating) ||\n                this.currentAnimation ||\n                this.pendingAnimation);\n            if (!this.isTreeAnimating) {\n                this.targetDelta = this.relativeTarget = undefined;\n            }\n            if (!this.layout || !(layout || layoutId))\n                return;\n            /**\n             * Reset the corrected box with the latest values from box, as we're then going\n             * to perform mutative operations on it.\n             */\n            copyBoxInto(this.layoutCorrected, this.layout.layoutBox);\n            /**\n             * Record previous tree scales before updating.\n             */\n            const prevTreeScaleX = this.treeScale.x;\n            const prevTreeScaleY = this.treeScale.y;\n            /**\n             * Apply all the parent deltas to this box to produce the corrected box. This\n             * is the layout box, as it will appear on screen as a result of the transforms of its parents.\n             */\n            applyTreeDeltas(this.layoutCorrected, this.treeScale, this.path, isShared);\n            /**\n             * If this layer needs to perform scale correction but doesn't have a target,\n             * use the layout as the target.\n             */\n            if (lead.layout &&\n                !lead.target &&\n                (this.treeScale.x !== 1 || this.treeScale.y !== 1)) {\n                lead.target = lead.layout.layoutBox;\n                lead.targetWithTransforms = createBox();\n            }\n            const { target } = lead;\n            if (!target) {\n                /**\n                 * If we don't have a target to project into, but we were previously\n                 * projecting, we want to remove the stored transform and schedule\n                 * a render to ensure the elements reflect the removed transform.\n                 */\n                if (this.projectionTransform) {\n                    this.projectionDelta = createDelta();\n                    this.projectionTransform = \"none\";\n                    this.scheduleRender();\n                }\n                return;\n            }\n            if (!this.projectionDelta) {\n                this.projectionDelta = createDelta();\n                this.projectionDeltaWithTransform = createDelta();\n            }\n            const prevProjectionTransform = this.projectionTransform;\n            /**\n             * Update the delta between the corrected box and the target box before user-set transforms were applied.\n             * This will allow us to calculate the corrected borderRadius and boxShadow to compensate\n             * for our layout reprojection, but still allow them to be scaled correctly by the user.\n             * It might be that to simplify this we may want to accept that user-set scale is also corrected\n             * and we wouldn't have to keep and calc both deltas, OR we could support a user setting\n             * to allow people to choose whether these styles are corrected based on just the\n             * layout reprojection or the final bounding box.\n             */\n            calcBoxDelta(this.projectionDelta, this.layoutCorrected, target, this.latestValues);\n            this.projectionTransform = buildProjectionTransform(this.projectionDelta, this.treeScale);\n            if (this.projectionTransform !== prevProjectionTransform ||\n                this.treeScale.x !== prevTreeScaleX ||\n                this.treeScale.y !== prevTreeScaleY) {\n                this.hasProjected = true;\n                this.scheduleRender();\n                this.notifyListeners(\"projectionUpdate\", target);\n            }\n            /**\n             * Increase debug counter for recalculated projections\n             */\n            projectionFrameData.recalculatedProjection++;\n        }\n        hide() {\n            this.isVisible = false;\n            // TODO: Schedule render\n        }\n        show() {\n            this.isVisible = true;\n            // TODO: Schedule render\n        }\n        scheduleRender(notifyAll = true) {\n            this.options.scheduleRender && this.options.scheduleRender();\n            if (notifyAll) {\n                const stack = this.getStack();\n                stack && stack.scheduleRender();\n            }\n            if (this.resumingFrom && !this.resumingFrom.instance) {\n                this.resumingFrom = undefined;\n            }\n        }\n        setAnimationOrigin(delta, hasOnlyRelativeTargetChanged = false) {\n            const snapshot = this.snapshot;\n            const snapshotLatestValues = snapshot\n                ? snapshot.latestValues\n                : {};\n            const mixedValues = { ...this.latestValues };\n            const targetDelta = createDelta();\n            if (!this.relativeParent ||\n                !this.relativeParent.options.layoutRoot) {\n                this.relativeTarget = this.relativeTargetOrigin = undefined;\n            }\n            this.attemptToResolveRelativeTarget = !hasOnlyRelativeTargetChanged;\n            const relativeLayout = createBox();\n            const snapshotSource = snapshot ? snapshot.source : undefined;\n            const layoutSource = this.layout ? this.layout.source : undefined;\n            const isSharedLayoutAnimation = snapshotSource !== layoutSource;\n            const stack = this.getStack();\n            const isOnlyMember = !stack || stack.members.length <= 1;\n            const shouldCrossfadeOpacity = Boolean(isSharedLayoutAnimation &&\n                !isOnlyMember &&\n                this.options.crossfade === true &&\n                !this.path.some(hasOpacityCrossfade));\n            this.animationProgress = 0;\n            let prevRelativeTarget;\n            this.mixTargetDelta = (latest) => {\n                const progress = latest / 1000;\n                mixAxisDelta(targetDelta.x, delta.x, progress);\n                mixAxisDelta(targetDelta.y, delta.y, progress);\n                this.setTargetDelta(targetDelta);\n                if (this.relativeTarget &&\n                    this.relativeTargetOrigin &&\n                    this.layout &&\n                    this.relativeParent &&\n                    this.relativeParent.layout) {\n                    calcRelativePosition(relativeLayout, this.layout.layoutBox, this.relativeParent.layout.layoutBox);\n                    mixBox(this.relativeTarget, this.relativeTargetOrigin, relativeLayout, progress);\n                    /**\n                     * If this is an unchanged relative target we can consider the\n                     * projection not dirty.\n                     */\n                    if (prevRelativeTarget &&\n                        boxEquals(this.relativeTarget, prevRelativeTarget)) {\n                        this.isProjectionDirty = false;\n                    }\n                    if (!prevRelativeTarget)\n                        prevRelativeTarget = createBox();\n                    copyBoxInto(prevRelativeTarget, this.relativeTarget);\n                }\n                if (isSharedLayoutAnimation) {\n                    this.animationValues = mixedValues;\n                    mixValues(mixedValues, snapshotLatestValues, this.latestValues, progress, shouldCrossfadeOpacity, isOnlyMember);\n                }\n                this.root.scheduleUpdateProjection();\n                this.scheduleRender();\n                this.animationProgress = progress;\n            };\n            this.mixTargetDelta(this.options.layoutRoot ? 1000 : 0);\n        }\n        startAnimation(options) {\n            this.notifyListeners(\"animationStart\");\n            this.currentAnimation && this.currentAnimation.stop();\n            if (this.resumingFrom && this.resumingFrom.currentAnimation) {\n                this.resumingFrom.currentAnimation.stop();\n            }\n            if (this.pendingAnimation) {\n                cancelFrame(this.pendingAnimation);\n                this.pendingAnimation = undefined;\n            }\n            /**\n             * Start the animation in the next frame to have a frame with progress 0,\n             * where the target is the same as when the animation started, so we can\n             * calculate the relative positions correctly for instant transitions.\n             */\n            this.pendingAnimation = frame.update(() => {\n                globalProjectionState.hasAnimatedSinceResize = true;\n                this.currentAnimation = animateSingleValue(0, animationTarget, {\n                    ...options,\n                    onUpdate: (latest) => {\n                        this.mixTargetDelta(latest);\n                        options.onUpdate && options.onUpdate(latest);\n                    },\n                    onComplete: () => {\n                        options.onComplete && options.onComplete();\n                        this.completeAnimation();\n                    },\n                });\n                if (this.resumingFrom) {\n                    this.resumingFrom.currentAnimation = this.currentAnimation;\n                }\n                this.pendingAnimation = undefined;\n            });\n        }\n        completeAnimation() {\n            if (this.resumingFrom) {\n                this.resumingFrom.currentAnimation = undefined;\n                this.resumingFrom.preserveOpacity = undefined;\n            }\n            const stack = this.getStack();\n            stack && stack.exitAnimationComplete();\n            this.resumingFrom =\n                this.currentAnimation =\n                    this.animationValues =\n                        undefined;\n            this.notifyListeners(\"animationComplete\");\n        }\n        finishAnimation() {\n            if (this.currentAnimation) {\n                this.mixTargetDelta && this.mixTargetDelta(animationTarget);\n                this.currentAnimation.stop();\n            }\n            this.completeAnimation();\n        }\n        applyTransformsToTarget() {\n            const lead = this.getLead();\n            let { targetWithTransforms, target, layout, latestValues } = lead;\n            if (!targetWithTransforms || !target || !layout)\n                return;\n            /**\n             * If we're only animating position, and this element isn't the lead element,\n             * then instead of projecting into the lead box we instead want to calculate\n             * a new target that aligns the two boxes but maintains the layout shape.\n             */\n            if (this !== lead &&\n                this.layout &&\n                layout &&\n                shouldAnimatePositionOnly(this.options.animationType, this.layout.layoutBox, layout.layoutBox)) {\n                target = this.target || createBox();\n                const xLength = calcLength(this.layout.layoutBox.x);\n                target.x.min = lead.target.x.min;\n                target.x.max = target.x.min + xLength;\n                const yLength = calcLength(this.layout.layoutBox.y);\n                target.y.min = lead.target.y.min;\n                target.y.max = target.y.min + yLength;\n            }\n            copyBoxInto(targetWithTransforms, target);\n            /**\n             * Apply the latest user-set transforms to the targetBox to produce the targetBoxFinal.\n             * This is the final box that we will then project into by calculating a transform delta and\n             * applying it to the corrected box.\n             */\n            transformBox(targetWithTransforms, latestValues);\n            /**\n             * Update the delta between the corrected box and the final target box, after\n             * user-set transforms are applied to it. This will be used by the renderer to\n             * create a transform style that will reproject the element from its layout layout\n             * into the desired bounding box.\n             */\n            calcBoxDelta(this.projectionDeltaWithTransform, this.layoutCorrected, targetWithTransforms, latestValues);\n        }\n        registerSharedNode(layoutId, node) {\n            if (!this.sharedNodes.has(layoutId)) {\n                this.sharedNodes.set(layoutId, new NodeStack());\n            }\n            const stack = this.sharedNodes.get(layoutId);\n            stack.add(node);\n            const config = node.options.initialPromotionConfig;\n            node.promote({\n                transition: config ? config.transition : undefined,\n                preserveFollowOpacity: config && config.shouldPreserveFollowOpacity\n                    ? config.shouldPreserveFollowOpacity(node)\n                    : undefined,\n            });\n        }\n        isLead() {\n            const stack = this.getStack();\n            return stack ? stack.lead === this : true;\n        }\n        getLead() {\n            var _a;\n            const { layoutId } = this.options;\n            return layoutId ? ((_a = this.getStack()) === null || _a === void 0 ? void 0 : _a.lead) || this : this;\n        }\n        getPrevLead() {\n            var _a;\n            const { layoutId } = this.options;\n            return layoutId ? (_a = this.getStack()) === null || _a === void 0 ? void 0 : _a.prevLead : undefined;\n        }\n        getStack() {\n            const { layoutId } = this.options;\n            if (layoutId)\n                return this.root.sharedNodes.get(layoutId);\n        }\n        promote({ needsReset, transition, preserveFollowOpacity, } = {}) {\n            const stack = this.getStack();\n            if (stack)\n                stack.promote(this, preserveFollowOpacity);\n            if (needsReset) {\n                this.projectionDelta = undefined;\n                this.needsReset = true;\n            }\n            if (transition)\n                this.setOptions({ transition });\n        }\n        relegate() {\n            const stack = this.getStack();\n            if (stack) {\n                return stack.relegate(this);\n            }\n            else {\n                return false;\n            }\n        }\n        resetSkewAndRotation() {\n            const { visualElement } = this.options;\n            if (!visualElement)\n                return;\n            // If there's no detected skew or rotation values, we can early return without a forced render.\n            let hasDistortingTransform = false;\n            /**\n             * An unrolled check for rotation values. Most elements don't have any rotation and\n             * skipping the nested loop and new object creation is 50% faster.\n             */\n            const { latestValues } = visualElement;\n            if (latestValues.z ||\n                latestValues.rotate ||\n                latestValues.rotateX ||\n                latestValues.rotateY ||\n                latestValues.rotateZ ||\n                latestValues.skewX ||\n                latestValues.skewY) {\n                hasDistortingTransform = true;\n            }\n            // If there's no distorting values, we don't need to do any more.\n            if (!hasDistortingTransform)\n                return;\n            const resetValues = {};\n            if (latestValues.z) {\n                resetDistortingTransform(\"z\", visualElement, resetValues, this.animationValues);\n            }\n            // Check the skew and rotate value of all axes and reset to 0\n            for (let i = 0; i < transformAxes.length; i++) {\n                resetDistortingTransform(`rotate${transformAxes[i]}`, visualElement, resetValues, this.animationValues);\n                resetDistortingTransform(`skew${transformAxes[i]}`, visualElement, resetValues, this.animationValues);\n            }\n            // Force a render of this element to apply the transform with all skews and rotations\n            // set to 0.\n            visualElement.render();\n            // Put back all the values we reset\n            for (const key in resetValues) {\n                visualElement.setStaticValue(key, resetValues[key]);\n                if (this.animationValues) {\n                    this.animationValues[key] = resetValues[key];\n                }\n            }\n            // Schedule a render for the next frame. This ensures we won't visually\n            // see the element with the reset rotate value applied.\n            visualElement.scheduleRender();\n        }\n        getProjectionStyles(styleProp) {\n            var _a, _b;\n            if (!this.instance || this.isSVG)\n                return undefined;\n            if (!this.isVisible) {\n                return hiddenVisibility;\n            }\n            const styles = {\n                visibility: \"\",\n            };\n            const transformTemplate = this.getTransformTemplate();\n            if (this.needsReset) {\n                this.needsReset = false;\n                styles.opacity = \"\";\n                styles.pointerEvents =\n                    resolveMotionValue(styleProp === null || styleProp === void 0 ? void 0 : styleProp.pointerEvents) || \"\";\n                styles.transform = transformTemplate\n                    ? transformTemplate(this.latestValues, \"\")\n                    : \"none\";\n                return styles;\n            }\n            const lead = this.getLead();\n            if (!this.projectionDelta || !this.layout || !lead.target) {\n                const emptyStyles = {};\n                if (this.options.layoutId) {\n                    emptyStyles.opacity =\n                        this.latestValues.opacity !== undefined\n                            ? this.latestValues.opacity\n                            : 1;\n                    emptyStyles.pointerEvents =\n                        resolveMotionValue(styleProp === null || styleProp === void 0 ? void 0 : styleProp.pointerEvents) || \"\";\n                }\n                if (this.hasProjected && !hasTransform(this.latestValues)) {\n                    emptyStyles.transform = transformTemplate\n                        ? transformTemplate({}, \"\")\n                        : \"none\";\n                    this.hasProjected = false;\n                }\n                return emptyStyles;\n            }\n            const valuesToRender = lead.animationValues || lead.latestValues;\n            this.applyTransformsToTarget();\n            styles.transform = buildProjectionTransform(this.projectionDeltaWithTransform, this.treeScale, valuesToRender);\n            if (transformTemplate) {\n                styles.transform = transformTemplate(valuesToRender, styles.transform);\n            }\n            const { x, y } = this.projectionDelta;\n            styles.transformOrigin = `${x.origin * 100}% ${y.origin * 100}% 0`;\n            if (lead.animationValues) {\n                /**\n                 * If the lead component is animating, assign this either the entering/leaving\n                 * opacity\n                 */\n                styles.opacity =\n                    lead === this\n                        ? (_b = (_a = valuesToRender.opacity) !== null && _a !== void 0 ? _a : this.latestValues.opacity) !== null && _b !== void 0 ? _b : 1\n                        : this.preserveOpacity\n                            ? this.latestValues.opacity\n                            : valuesToRender.opacityExit;\n            }\n            else {\n                /**\n                 * Or we're not animating at all, set the lead component to its layout\n                 * opacity and other components to hidden.\n                 */\n                styles.opacity =\n                    lead === this\n                        ? valuesToRender.opacity !== undefined\n                            ? valuesToRender.opacity\n                            : \"\"\n                        : valuesToRender.opacityExit !== undefined\n                            ? valuesToRender.opacityExit\n                            : 0;\n            }\n            /**\n             * Apply scale correction\n             */\n            for (const key in scaleCorrectors) {\n                if (valuesToRender[key] === undefined)\n                    continue;\n                const { correct, applyTo } = scaleCorrectors[key];\n                /**\n                 * Only apply scale correction to the value if we have an\n                 * active projection transform. Otherwise these values become\n                 * vulnerable to distortion if the element changes size without\n                 * a corresponding layout animation.\n                 */\n                const corrected = styles.transform === \"none\"\n                    ? valuesToRender[key]\n                    : correct(valuesToRender[key], lead);\n                if (applyTo) {\n                    const num = applyTo.length;\n                    for (let i = 0; i < num; i++) {\n                        styles[applyTo[i]] = corrected;\n                    }\n                }\n                else {\n                    styles[key] = corrected;\n                }\n            }\n            /**\n             * Disable pointer events on follow components. This is to ensure\n             * that if a follow component covers a lead component it doesn't block\n             * pointer events on the lead.\n             */\n            if (this.options.layoutId) {\n                styles.pointerEvents =\n                    lead === this\n                        ? resolveMotionValue(styleProp === null || styleProp === void 0 ? void 0 : styleProp.pointerEvents) || \"\"\n                        : \"none\";\n            }\n            return styles;\n        }\n        clearSnapshot() {\n            this.resumeFrom = this.snapshot = undefined;\n        }\n        // Only run on root\n        resetTree() {\n            this.root.nodes.forEach((node) => { var _a; return (_a = node.currentAnimation) === null || _a === void 0 ? void 0 : _a.stop(); });\n            this.root.nodes.forEach(clearMeasurements);\n            this.root.sharedNodes.clear();\n        }\n    };\n}\nfunction updateLayout(node) {\n    node.updateLayout();\n}\nfunction notifyLayoutUpdate(node) {\n    var _a;\n    const snapshot = ((_a = node.resumeFrom) === null || _a === void 0 ? void 0 : _a.snapshot) || node.snapshot;\n    if (node.isLead() &&\n        node.layout &&\n        snapshot &&\n        node.hasListeners(\"didUpdate\")) {\n        const { layoutBox: layout, measuredBox: measuredLayout } = node.layout;\n        const { animationType } = node.options;\n        const isShared = snapshot.source !== node.layout.source;\n        // TODO Maybe we want to also resize the layout snapshot so we don't trigger\n        // animations for instance if layout=\"size\" and an element has only changed position\n        if (animationType === \"size\") {\n            eachAxis((axis) => {\n                const axisSnapshot = isShared\n                    ? snapshot.measuredBox[axis]\n                    : snapshot.layoutBox[axis];\n                const length = calcLength(axisSnapshot);\n                axisSnapshot.min = layout[axis].min;\n                axisSnapshot.max = axisSnapshot.min + length;\n            });\n        }\n        else if (shouldAnimatePositionOnly(animationType, snapshot.layoutBox, layout)) {\n            eachAxis((axis) => {\n                const axisSnapshot = isShared\n                    ? snapshot.measuredBox[axis]\n                    : snapshot.layoutBox[axis];\n                const length = calcLength(layout[axis]);\n                axisSnapshot.max = axisSnapshot.min + length;\n                /**\n                 * Ensure relative target gets resized and rerendererd\n                 */\n                if (node.relativeTarget && !node.currentAnimation) {\n                    node.isProjectionDirty = true;\n                    node.relativeTarget[axis].max =\n                        node.relativeTarget[axis].min + length;\n                }\n            });\n        }\n        const layoutDelta = createDelta();\n        calcBoxDelta(layoutDelta, layout, snapshot.layoutBox);\n        const visualDelta = createDelta();\n        if (isShared) {\n            calcBoxDelta(visualDelta, node.applyTransform(measuredLayout, true), snapshot.measuredBox);\n        }\n        else {\n            calcBoxDelta(visualDelta, layout, snapshot.layoutBox);\n        }\n        const hasLayoutChanged = !isDeltaZero(layoutDelta);\n        let hasRelativeTargetChanged = false;\n        if (!node.resumeFrom) {\n            const relativeParent = node.getClosestProjectingParent();\n            /**\n             * If the relativeParent is itself resuming from a different element then\n             * the relative snapshot is not relavent\n             */\n            if (relativeParent && !relativeParent.resumeFrom) {\n                const { snapshot: parentSnapshot, layout: parentLayout } = relativeParent;\n                if (parentSnapshot && parentLayout) {\n                    const relativeSnapshot = createBox();\n                    calcRelativePosition(relativeSnapshot, snapshot.layoutBox, parentSnapshot.layoutBox);\n                    const relativeLayout = createBox();\n                    calcRelativePosition(relativeLayout, layout, parentLayout.layoutBox);\n                    if (!boxEqualsRounded(relativeSnapshot, relativeLayout)) {\n                        hasRelativeTargetChanged = true;\n                    }\n                    if (relativeParent.options.layoutRoot) {\n                        node.relativeTarget = relativeLayout;\n                        node.relativeTargetOrigin = relativeSnapshot;\n                        node.relativeParent = relativeParent;\n                    }\n                }\n            }\n        }\n        node.notifyListeners(\"didUpdate\", {\n            layout,\n            snapshot,\n            delta: visualDelta,\n            layoutDelta,\n            hasLayoutChanged,\n            hasRelativeTargetChanged,\n        });\n    }\n    else if (node.isLead()) {\n        const { onExitComplete } = node.options;\n        onExitComplete && onExitComplete();\n    }\n    /**\n     * Clearing transition\n     * TODO: Investigate why this transition is being passed in as {type: false } from Framer\n     * and why we need it at all\n     */\n    node.options.transition = undefined;\n}\nfunction propagateDirtyNodes(node) {\n    /**\n     * Increase debug counter for nodes encountered this frame\n     */\n    projectionFrameData.totalNodes++;\n    if (!node.parent)\n        return;\n    /**\n     * If this node isn't projecting, propagate isProjectionDirty. It will have\n     * no performance impact but it will allow the next child that *is* projecting\n     * but *isn't* dirty to just check its parent to see if *any* ancestor needs\n     * correcting.\n     */\n    if (!node.isProjecting()) {\n        node.isProjectionDirty = node.parent.isProjectionDirty;\n    }\n    /**\n     * Propagate isSharedProjectionDirty and isTransformDirty\n     * throughout the whole tree. A future revision can take another look at\n     * this but for safety we still recalcualte shared nodes.\n     */\n    node.isSharedProjectionDirty || (node.isSharedProjectionDirty = Boolean(node.isProjectionDirty ||\n        node.parent.isProjectionDirty ||\n        node.parent.isSharedProjectionDirty));\n    node.isTransformDirty || (node.isTransformDirty = node.parent.isTransformDirty);\n}\nfunction cleanDirtyNodes(node) {\n    node.isProjectionDirty =\n        node.isSharedProjectionDirty =\n            node.isTransformDirty =\n                false;\n}\nfunction clearSnapshot(node) {\n    node.clearSnapshot();\n}\nfunction clearMeasurements(node) {\n    node.clearMeasurements();\n}\nfunction clearIsLayoutDirty(node) {\n    node.isLayoutDirty = false;\n}\nfunction resetTransformStyle(node) {\n    const { visualElement } = node.options;\n    if (visualElement && visualElement.getProps().onBeforeLayoutMeasure) {\n        visualElement.notify(\"BeforeLayoutMeasure\");\n    }\n    node.resetTransform();\n}\nfunction finishAnimation(node) {\n    node.finishAnimation();\n    node.targetDelta = node.relativeTarget = node.target = undefined;\n    node.isProjectionDirty = true;\n}\nfunction resolveTargetDelta(node) {\n    node.resolveTargetDelta();\n}\nfunction calcProjection(node) {\n    node.calcProjection();\n}\nfunction resetSkewAndRotation(node) {\n    node.resetSkewAndRotation();\n}\nfunction removeLeadSnapshots(stack) {\n    stack.removeLeadSnapshot();\n}\nfunction mixAxisDelta(output, delta, p) {\n    output.translate = mixNumber(delta.translate, 0, p);\n    output.scale = mixNumber(delta.scale, 1, p);\n    output.origin = delta.origin;\n    output.originPoint = delta.originPoint;\n}\nfunction mixAxis(output, from, to, p) {\n    output.min = mixNumber(from.min, to.min, p);\n    output.max = mixNumber(from.max, to.max, p);\n}\nfunction mixBox(output, from, to, p) {\n    mixAxis(output.x, from.x, to.x, p);\n    mixAxis(output.y, from.y, to.y, p);\n}\nfunction hasOpacityCrossfade(node) {\n    return (node.animationValues && node.animationValues.opacityExit !== undefined);\n}\nconst defaultLayoutTransition = {\n    duration: 0.45,\n    ease: [0.4, 0, 0.1, 1],\n};\nconst userAgentContains = (string) => typeof navigator !== \"undefined\" &&\n    navigator.userAgent &&\n    navigator.userAgent.toLowerCase().includes(string);\n/**\n * Measured bounding boxes must be rounded in Safari and\n * left untouched in Chrome, otherwise non-integer layouts within scaled-up elements\n * can appear to jump.\n */\nconst roundPoint = userAgentContains(\"applewebkit/\") && !userAgentContains(\"chrome/\")\n    ? Math.round\n    : noop;\nfunction roundAxis(axis) {\n    // Round to the nearest .5 pixels to support subpixel layouts\n    axis.min = roundPoint(axis.min);\n    axis.max = roundPoint(axis.max);\n}\nfunction roundBox(box) {\n    roundAxis(box.x);\n    roundAxis(box.y);\n}\nfunction shouldAnimatePositionOnly(animationType, snapshot, layout) {\n    return (animationType === \"position\" ||\n        (animationType === \"preserve-aspect\" &&\n            !isNear(aspectRatio(snapshot), aspectRatio(layout), 0.2)));\n}\n\nexport { cleanDirtyNodes, createProjectionNode, mixAxis, mixAxisDelta, mixBox, propagateDirtyNodes };\n","function record(data) {\n    if (window.MotionDebug) {\n        window.MotionDebug.record(data);\n    }\n}\n\nexport { record };\n","function isSVGElement(element) {\n    return element instanceof SVGElement && element.tagName !== \"svg\";\n}\n\nexport { isSVGElement };\n","import { time } from '../frameloop/sync-time.mjs';\nimport { frame, cancelFrame } from '../frameloop/frame.mjs';\n\n/**\n * Timeout defined in ms\n */\nfunction delay(callback, timeout) {\n    const start = time.now();\n    const checkElapsed = ({ timestamp }) => {\n        const elapsed = timestamp - start;\n        if (elapsed >= timeout) {\n            cancelFrame(checkElapsed);\n            callback(elapsed - timeout);\n        }\n    };\n    frame.read(checkElapsed, true);\n    return () => cancelFrame(checkElapsed);\n}\n\nexport { delay };\n","import { animateMotionValue } from './motion-value.mjs';\nimport { motionValue } from '../../value/index.mjs';\nimport { isMotionValue } from '../../value/utils/is-motion-value.mjs';\n\nfunction animateSingleValue(value, keyframes, options) {\n    const motionValue$1 = isMotionValue(value) ? value : motionValue(value);\n    motionValue$1.start(animateMotionValue(\"\", motionValue$1, keyframes, options));\n    return motionValue$1.animation;\n}\n\nexport { animateSingleValue };\n","import { createProjectionNode } from './create-projection-node.mjs';\nimport { addDomEvent } from '../../events/add-dom-event.mjs';\n\nconst DocumentProjectionNode = createProjectionNode({\n    attachResizeListener: (ref, notify) => addDomEvent(ref, \"resize\", notify),\n    measureScroll: () => ({\n        x: document.documentElement.scrollLeft || document.body.scrollLeft,\n        y: document.documentElement.scrollTop || document.body.scrollTop,\n    }),\n    checkIsScrollRoot: () => true,\n});\n\nexport { DocumentProjectionNode };\n","import { createProjectionNode } from './create-projection-node.mjs';\nimport { DocumentProjectionNode } from './DocumentProjectionNode.mjs';\n\nconst rootProjectionNode = {\n    current: undefined,\n};\nconst HTMLProjectionNode = createProjectionNode({\n    measureScroll: (instance) => ({\n        x: instance.scrollLeft,\n        y: instance.scrollTop,\n    }),\n    defaultParent: () => {\n        if (!rootProjectionNode.current) {\n            const documentNode = new DocumentProjectionNode({});\n            documentNode.mount(window);\n            documentNode.setOptions({ layoutScroll: true });\n            rootProjectionNode.current = documentNode;\n        }\n        return rootProjectionNode.current;\n    },\n    resetTransform: (instance, value) => {\n        instance.style.transform = value !== undefined ? value : \"none\";\n    },\n    checkIsScrollRoot: (instance) => Boolean(window.getComputedStyle(instance).position === \"fixed\"),\n});\n\nexport { HTMLProjectionNode, rootProjectionNode };\n","import { DragGesture } from '../../gestures/drag/index.mjs';\nimport { PanGesture } from '../../gestures/pan/index.mjs';\nimport { MeasureLayout } from './layout/MeasureLayout.mjs';\nimport { HTMLProjectionNode } from '../../projection/node/HTMLProjectionNode.mjs';\n\nconst drag = {\n    pan: {\n        Feature: PanGesture,\n    },\n    drag: {\n        Feature: DragGesture,\n        ProjectionNode: HTMLProjectionNode,\n        MeasureLayout,\n    },\n};\n\nexport { drag };\n","import { Feature } from '../../motion/features/Feature.mjs';\nimport { noop } from '../../utils/noop.mjs';\nimport { VisualElementDragControls } from './VisualElementDragControls.mjs';\n\nclass DragGesture extends Feature {\n    constructor(node) {\n        super(node);\n        this.removeGroupControls = noop;\n        this.removeListeners = noop;\n        this.controls = new VisualElementDragControls(node);\n    }\n    mount() {\n        // If we've been provided a DragControls for manual control over the drag gesture,\n        // subscribe this component to it on mount.\n        const { dragControls } = this.node.getProps();\n        if (dragControls) {\n            this.removeGroupControls = dragControls.subscribe(this.controls);\n        }\n        this.removeListeners = this.controls.addListeners() || noop;\n    }\n    unmount() {\n        this.removeGroupControls();\n        this.removeListeners();\n    }\n}\n\nexport { DragGesture };\n","// Does this device prefer reduced motion? Returns `null` server-side.\nconst prefersReducedMotion = { current: null };\nconst hasReducedMotionListener = { current: false };\n\nexport { hasReducedMotionListener, prefersReducedMotion };\n","const visualElementStore = new WeakMap();\n\nexport { visualElementStore };\n","import { color } from '../../../value/types/color/index.mjs';\nimport { complex } from '../../../value/types/complex/index.mjs';\nimport { dimensionValueTypes } from './dimensions.mjs';\nimport { testValueType } from './test.mjs';\n\n/**\n * A list of all ValueTypes\n */\nconst valueTypes = [...dimensionValueTypes, color, complex];\n/**\n * Tests a value against the list of ValueTypes\n */\nconst findValueType = (v) => valueTypes.find(testValueType(v));\n\nexport { findValueType };\n","import { warning, invariant } from '../utils/errors.mjs';\nimport { createBox } from '../projection/geometry/models.mjs';\nimport { isRefObject } from '../utils/is-ref-object.mjs';\nimport { initPrefersReducedMotion } from '../utils/reduced-motion/index.mjs';\nimport { hasReducedMotionListener, prefersReducedMotion } from '../utils/reduced-motion/state.mjs';\nimport { SubscriptionManager } from '../utils/subscription-manager.mjs';\nimport { motionValue } from '../value/index.mjs';\nimport { isWillChangeMotionValue } from '../value/use-will-change/is.mjs';\nimport { isMotionValue } from '../value/utils/is-motion-value.mjs';\nimport { transformProps } from './html/utils/transform.mjs';\nimport { isControllingVariants, isVariantNode } from './utils/is-controlling-variants.mjs';\nimport { isVariantLabel } from './utils/is-variant-label.mjs';\nimport { updateMotionValuesFromProps } from './utils/motion-values.mjs';\nimport { resolveVariantFromProps } from './utils/resolve-variants.mjs';\nimport { warnOnce } from '../utils/warn-once.mjs';\nimport { featureDefinitions } from '../motion/features/definitions.mjs';\nimport { variantProps } from './utils/variant-props.mjs';\nimport { visualElementStore } from './store.mjs';\nimport { KeyframeResolver } from './utils/KeyframesResolver.mjs';\nimport { isNumericalString } from '../utils/is-numerical-string.mjs';\nimport { isZeroValueString } from '../utils/is-zero-value-string.mjs';\nimport { findValueType } from './dom/value-types/find.mjs';\nimport { complex } from '../value/types/complex/index.mjs';\nimport { getAnimatableNone } from './dom/value-types/animatable-none.mjs';\nimport { frame, cancelFrame } from '../frameloop/frame.mjs';\n\nconst featureNames = Object.keys(featureDefinitions);\nconst numFeatures = featureNames.length;\nconst propEventHandlers = [\n    \"AnimationStart\",\n    \"AnimationComplete\",\n    \"Update\",\n    \"BeforeLayoutMeasure\",\n    \"LayoutMeasure\",\n    \"LayoutAnimationStart\",\n    \"LayoutAnimationComplete\",\n];\nconst numVariantProps = variantProps.length;\nfunction getClosestProjectingNode(visualElement) {\n    if (!visualElement)\n        return undefined;\n    return visualElement.options.allowProjection !== false\n        ? visualElement.projection\n        : getClosestProjectingNode(visualElement.parent);\n}\n/**\n * A VisualElement is an imperative abstraction around UI elements such as\n * HTMLElement, SVGElement, Three.Object3D etc.\n */\nclass VisualElement {\n    /**\n     * This method takes React props and returns found MotionValues. For example, HTML\n     * MotionValues will be found within the style prop, whereas for Three.js within attribute arrays.\n     *\n     * This isn't an abstract method as it needs calling in the constructor, but it is\n     * intended to be one.\n     */\n    scrapeMotionValuesFromProps(_props, _prevProps, _visualElement) {\n        return {};\n    }\n    constructor({ parent, props, presenceContext, reducedMotionConfig, blockInitialAnimation, visualState, }, options = {}) {\n        this.resolveKeyframes = (keyframes, \n        // We use an onComplete callback here rather than a Promise as a Promise\n        // resolution is a microtask and we want to retain the ability to force\n        // the resolution of keyframes synchronously.\n        onComplete, name, value) => {\n            return new this.KeyframeResolver(keyframes, onComplete, name, value, this);\n        };\n        /**\n         * A reference to the current underlying Instance, e.g. a HTMLElement\n         * or Three.Mesh etc.\n         */\n        this.current = null;\n        /**\n         * A set containing references to this VisualElement's children.\n         */\n        this.children = new Set();\n        /**\n         * Determine what role this visual element should take in the variant tree.\n         */\n        this.isVariantNode = false;\n        this.isControllingVariants = false;\n        /**\n         * Decides whether this VisualElement should animate in reduced motion\n         * mode.\n         *\n         * TODO: This is currently set on every individual VisualElement but feels\n         * like it could be set globally.\n         */\n        this.shouldReduceMotion = null;\n        /**\n         * A map of all motion values attached to this visual element. Motion\n         * values are source of truth for any given animated value. A motion\n         * value might be provided externally by the component via props.\n         */\n        this.values = new Map();\n        this.KeyframeResolver = KeyframeResolver;\n        /**\n         * Cleanup functions for active features (hover/tap/exit etc)\n         */\n        this.features = {};\n        /**\n         * A map of every subscription that binds the provided or generated\n         * motion values onChange listeners to this visual element.\n         */\n        this.valueSubscriptions = new Map();\n        /**\n         * A reference to the previously-provided motion values as returned\n         * from scrapeMotionValuesFromProps. We use the keys in here to determine\n         * if any motion values need to be removed after props are updated.\n         */\n        this.prevMotionValues = {};\n        /**\n         * An object containing a SubscriptionManager for each active event.\n         */\n        this.events = {};\n        /**\n         * An object containing an unsubscribe function for each prop event subscription.\n         * For example, every \"Update\" event can have multiple subscribers via\n         * VisualElement.on(), but only one of those can be defined via the onUpdate prop.\n         */\n        this.propEventSubscriptions = {};\n        this.notifyUpdate = () => this.notify(\"Update\", this.latestValues);\n        this.render = () => {\n            if (!this.current)\n                return;\n            this.triggerBuild();\n            this.renderInstance(this.current, this.renderState, this.props.style, this.projection);\n        };\n        this.scheduleRender = () => frame.render(this.render, false, true);\n        const { latestValues, renderState } = visualState;\n        this.latestValues = latestValues;\n        this.baseTarget = { ...latestValues };\n        this.initialValues = props.initial ? { ...latestValues } : {};\n        this.renderState = renderState;\n        this.parent = parent;\n        this.props = props;\n        this.presenceContext = presenceContext;\n        this.depth = parent ? parent.depth + 1 : 0;\n        this.reducedMotionConfig = reducedMotionConfig;\n        this.options = options;\n        this.blockInitialAnimation = Boolean(blockInitialAnimation);\n        this.isControllingVariants = isControllingVariants(props);\n        this.isVariantNode = isVariantNode(props);\n        if (this.isVariantNode) {\n            this.variantChildren = new Set();\n        }\n        this.manuallyAnimateOnMount = Boolean(parent && parent.current);\n        /**\n         * Any motion values that are provided to the element when created\n         * aren't yet bound to the element, as this would technically be impure.\n         * However, we iterate through the motion values and set them to the\n         * initial values for this component.\n         *\n         * TODO: This is impure and we should look at changing this to run on mount.\n         * Doing so will break some tests but this isn't neccessarily a breaking change,\n         * more a reflection of the test.\n         */\n        const { willChange, ...initialMotionValues } = this.scrapeMotionValuesFromProps(props, {}, this);\n        for (const key in initialMotionValues) {\n            const value = initialMotionValues[key];\n            if (latestValues[key] !== undefined && isMotionValue(value)) {\n                value.set(latestValues[key], false);\n                if (isWillChangeMotionValue(willChange)) {\n                    willChange.add(key);\n                }\n            }\n        }\n    }\n    mount(instance) {\n        this.current = instance;\n        visualElementStore.set(instance, this);\n        if (this.projection && !this.projection.instance) {\n            this.projection.mount(instance);\n        }\n        if (this.parent && this.isVariantNode && !this.isControllingVariants) {\n            this.removeFromVariantTree = this.parent.addVariantChild(this);\n        }\n        this.values.forEach((value, key) => this.bindToMotionValue(key, value));\n        if (!hasReducedMotionListener.current) {\n            initPrefersReducedMotion();\n        }\n        this.shouldReduceMotion =\n            this.reducedMotionConfig === \"never\"\n                ? false\n                : this.reducedMotionConfig === \"always\"\n                    ? true\n                    : prefersReducedMotion.current;\n        if (process.env.NODE_ENV !== \"production\") {\n            warnOnce(this.shouldReduceMotion !== true, \"You have Reduced Motion enabled on your device. Animations may not appear as expected.\");\n        }\n        if (this.parent)\n            this.parent.children.add(this);\n        this.update(this.props, this.presenceContext);\n    }\n    unmount() {\n        var _a;\n        visualElementStore.delete(this.current);\n        this.projection && this.projection.unmount();\n        cancelFrame(this.notifyUpdate);\n        cancelFrame(this.render);\n        this.valueSubscriptions.forEach((remove) => remove());\n        this.removeFromVariantTree && this.removeFromVariantTree();\n        this.parent && this.parent.children.delete(this);\n        for (const key in this.events) {\n            this.events[key].clear();\n        }\n        for (const key in this.features) {\n            (_a = this.features[key]) === null || _a === void 0 ? void 0 : _a.unmount();\n        }\n        this.current = null;\n    }\n    bindToMotionValue(key, value) {\n        const valueIsTransform = transformProps.has(key);\n        const removeOnChange = value.on(\"change\", (latestValue) => {\n            this.latestValues[key] = latestValue;\n            this.props.onUpdate && frame.preRender(this.notifyUpdate);\n            if (valueIsTransform && this.projection) {\n                this.projection.isTransformDirty = true;\n            }\n        });\n        const removeOnRenderRequest = value.on(\"renderRequest\", this.scheduleRender);\n        this.valueSubscriptions.set(key, () => {\n            removeOnChange();\n            removeOnRenderRequest();\n            if (value.owner)\n                value.stop();\n        });\n    }\n    sortNodePosition(other) {\n        /**\n         * If these nodes aren't even of the same type we can't compare their depth.\n         */\n        if (!this.current ||\n            !this.sortInstanceNodePosition ||\n            this.type !== other.type) {\n            return 0;\n        }\n        return this.sortInstanceNodePosition(this.current, other.current);\n    }\n    loadFeatures({ children, ...renderedProps }, isStrict, preloadedFeatures, initialLayoutGroupConfig) {\n        let ProjectionNodeConstructor;\n        let MeasureLayout;\n        /**\n         * If we're in development mode, check to make sure we're not rendering a motion component\n         * as a child of LazyMotion, as this will break the file-size benefits of using it.\n         */\n        if (process.env.NODE_ENV !== \"production\" &&\n            preloadedFeatures &&\n            isStrict) {\n            const strictMessage = \"You have rendered a `motion` component within a `LazyMotion` component. This will break tree shaking. Import and render a `m` component instead.\";\n            renderedProps.ignoreStrict\n                ? warning(false, strictMessage)\n                : invariant(false, strictMessage);\n        }\n        for (let i = 0; i < numFeatures; i++) {\n            const name = featureNames[i];\n            const { isEnabled, Feature: FeatureConstructor, ProjectionNode, MeasureLayout: MeasureLayoutComponent, } = featureDefinitions[name];\n            if (ProjectionNode)\n                ProjectionNodeConstructor = ProjectionNode;\n            if (isEnabled(renderedProps)) {\n                if (!this.features[name] && FeatureConstructor) {\n                    this.features[name] = new FeatureConstructor(this);\n                }\n                if (MeasureLayoutComponent) {\n                    MeasureLayout = MeasureLayoutComponent;\n                }\n            }\n        }\n        if ((this.type === \"html\" || this.type === \"svg\") &&\n            !this.projection &&\n            ProjectionNodeConstructor) {\n            this.projection = new ProjectionNodeConstructor(this.latestValues, getClosestProjectingNode(this.parent));\n            const { layoutId, layout, drag, dragConstraints, layoutScroll, layoutRoot, } = renderedProps;\n            this.projection.setOptions({\n                layoutId,\n                layout,\n                alwaysMeasureLayout: Boolean(drag) ||\n                    (dragConstraints && isRefObject(dragConstraints)),\n                visualElement: this,\n                scheduleRender: () => this.scheduleRender(),\n                /**\n                 * TODO: Update options in an effect. This could be tricky as it'll be too late\n                 * to update by the time layout animations run.\n                 * We also need to fix this safeToRemove by linking it up to the one returned by usePresence,\n                 * ensuring it gets called if there's no potential layout animations.\n                 *\n                 */\n                animationType: typeof layout === \"string\" ? layout : \"both\",\n                initialPromotionConfig: initialLayoutGroupConfig,\n                layoutScroll,\n                layoutRoot,\n            });\n        }\n        return MeasureLayout;\n    }\n    updateFeatures() {\n        for (const key in this.features) {\n            const feature = this.features[key];\n            if (feature.isMounted) {\n                feature.update();\n            }\n            else {\n                feature.mount();\n                feature.isMounted = true;\n            }\n        }\n    }\n    triggerBuild() {\n        this.build(this.renderState, this.latestValues, this.options, this.props);\n    }\n    /**\n     * Measure the current viewport box with or without transforms.\n     * Only measures axis-aligned boxes, rotate and skew must be manually\n     * removed with a re-render to work.\n     */\n    measureViewportBox() {\n        return this.current\n            ? this.measureInstanceViewportBox(this.current, this.props)\n            : createBox();\n    }\n    getStaticValue(key) {\n        return this.latestValues[key];\n    }\n    setStaticValue(key, value) {\n        this.latestValues[key] = value;\n    }\n    /**\n     * Update the provided props. Ensure any newly-added motion values are\n     * added to our map, old ones removed, and listeners updated.\n     */\n    update(props, presenceContext) {\n        if (props.transformTemplate || this.props.transformTemplate) {\n            this.scheduleRender();\n        }\n        this.prevProps = this.props;\n        this.props = props;\n        this.prevPresenceContext = this.presenceContext;\n        this.presenceContext = presenceContext;\n        /**\n         * Update prop event handlers ie onAnimationStart, onAnimationComplete\n         */\n        for (let i = 0; i < propEventHandlers.length; i++) {\n            const key = propEventHandlers[i];\n            if (this.propEventSubscriptions[key]) {\n                this.propEventSubscriptions[key]();\n                delete this.propEventSubscriptions[key];\n            }\n            const listenerName = (\"on\" + key);\n            const listener = props[listenerName];\n            if (listener) {\n                this.propEventSubscriptions[key] = this.on(key, listener);\n            }\n        }\n        this.prevMotionValues = updateMotionValuesFromProps(this, this.scrapeMotionValuesFromProps(props, this.prevProps, this), this.prevMotionValues);\n        if (this.handleChildMotionValue) {\n            this.handleChildMotionValue();\n        }\n    }\n    getProps() {\n        return this.props;\n    }\n    /**\n     * Returns the variant definition with a given name.\n     */\n    getVariant(name) {\n        return this.props.variants ? this.props.variants[name] : undefined;\n    }\n    /**\n     * Returns the defined default transition on this component.\n     */\n    getDefaultTransition() {\n        return this.props.transition;\n    }\n    getTransformPagePoint() {\n        return this.props.transformPagePoint;\n    }\n    getClosestVariantNode() {\n        return this.isVariantNode\n            ? this\n            : this.parent\n                ? this.parent.getClosestVariantNode()\n                : undefined;\n    }\n    getVariantContext(startAtParent = false) {\n        if (startAtParent) {\n            return this.parent ? this.parent.getVariantContext() : undefined;\n        }\n        if (!this.isControllingVariants) {\n            const context = this.parent\n                ? this.parent.getVariantContext() || {}\n                : {};\n            if (this.props.initial !== undefined) {\n                context.initial = this.props.initial;\n            }\n            return context;\n        }\n        const context = {};\n        for (let i = 0; i < numVariantProps; i++) {\n            const name = variantProps[i];\n            const prop = this.props[name];\n            if (isVariantLabel(prop) || prop === false) {\n                context[name] = prop;\n            }\n        }\n        return context;\n    }\n    /**\n     * Add a child visual element to our set of children.\n     */\n    addVariantChild(child) {\n        const closestVariantNode = this.getClosestVariantNode();\n        if (closestVariantNode) {\n            closestVariantNode.variantChildren &&\n                closestVariantNode.variantChildren.add(child);\n            return () => closestVariantNode.variantChildren.delete(child);\n        }\n    }\n    /**\n     * Add a motion value and bind it to this visual element.\n     */\n    addValue(key, value) {\n        // Remove existing value if it exists\n        const existingValue = this.values.get(key);\n        if (value !== existingValue) {\n            if (existingValue)\n                this.removeValue(key);\n            this.bindToMotionValue(key, value);\n            this.values.set(key, value);\n            this.latestValues[key] = value.get();\n        }\n    }\n    /**\n     * Remove a motion value and unbind any active subscriptions.\n     */\n    removeValue(key) {\n        this.values.delete(key);\n        const unsubscribe = this.valueSubscriptions.get(key);\n        if (unsubscribe) {\n            unsubscribe();\n            this.valueSubscriptions.delete(key);\n        }\n        delete this.latestValues[key];\n        this.removeValueFromRenderState(key, this.renderState);\n    }\n    /**\n     * Check whether we have a motion value for this key\n     */\n    hasValue(key) {\n        return this.values.has(key);\n    }\n    getValue(key, defaultValue) {\n        if (this.props.values && this.props.values[key]) {\n            return this.props.values[key];\n        }\n        let value = this.values.get(key);\n        if (value === undefined && defaultValue !== undefined) {\n            value = motionValue(defaultValue === null ? undefined : defaultValue, { owner: this });\n            this.addValue(key, value);\n        }\n        return value;\n    }\n    /**\n     * If we're trying to animate to a previously unencountered value,\n     * we need to check for it in our state and as a last resort read it\n     * directly from the instance (which might have performance implications).\n     */\n    readValue(key, target) {\n        var _a;\n        let value = this.latestValues[key] !== undefined || !this.current\n            ? this.latestValues[key]\n            : (_a = this.getBaseTargetFromProps(this.props, key)) !== null && _a !== void 0 ? _a : this.readValueFromInstance(this.current, key, this.options);\n        if (value !== undefined && value !== null) {\n            if (typeof value === \"string\" &&\n                (isNumericalString(value) || isZeroValueString(value))) {\n                // If this is a number read as a string, ie \"0\" or \"200\", convert it to a number\n                value = parseFloat(value);\n            }\n            else if (!findValueType(value) && complex.test(target)) {\n                value = getAnimatableNone(key, target);\n            }\n            this.setBaseTarget(key, isMotionValue(value) ? value.get() : value);\n        }\n        return isMotionValue(value) ? value.get() : value;\n    }\n    /**\n     * Set the base target to later animate back to. This is currently\n     * only hydrated on creation and when we first read a value.\n     */\n    setBaseTarget(key, value) {\n        this.baseTarget[key] = value;\n    }\n    /**\n     * Find the base target for a value thats been removed from all animation\n     * props.\n     */\n    getBaseTarget(key) {\n        var _a;\n        const { initial } = this.props;\n        let valueFromInitial;\n        if (typeof initial === \"string\" || typeof initial === \"object\") {\n            const variant = resolveVariantFromProps(this.props, initial, (_a = this.presenceContext) === null || _a === void 0 ? void 0 : _a.custom);\n            if (variant) {\n                valueFromInitial = variant[key];\n            }\n        }\n        /**\n         * If this value still exists in the current initial variant, read that.\n         */\n        if (initial && valueFromInitial !== undefined) {\n            return valueFromInitial;\n        }\n        /**\n         * Alternatively, if this VisualElement config has defined a getBaseTarget\n         * so we can read the value from an alternative source, try that.\n         */\n        const target = this.getBaseTargetFromProps(this.props, key);\n        if (target !== undefined && !isMotionValue(target))\n            return target;\n        /**\n         * If the value was initially defined on initial, but it doesn't any more,\n         * return undefined. Otherwise return the value as initially read from the DOM.\n         */\n        return this.initialValues[key] !== undefined &&\n            valueFromInitial === undefined\n            ? undefined\n            : this.baseTarget[key];\n    }\n    on(eventName, callback) {\n        if (!this.events[eventName]) {\n            this.events[eventName] = new SubscriptionManager();\n        }\n        return this.events[eventName].add(callback);\n    }\n    notify(eventName, ...args) {\n        if (this.events[eventName]) {\n            this.events[eventName].notify(...args);\n        }\n    }\n}\n\nexport { VisualElement };\n","import { isBrowser } from '../is-browser.mjs';\nimport { hasReducedMotionListener, prefersReducedMotion } from './state.mjs';\n\nfunction initPrefersReducedMotion() {\n    hasReducedMotionListener.current = true;\n    if (!isBrowser)\n        return;\n    if (window.matchMedia) {\n        const motionMediaQuery = window.matchMedia(\"(prefers-reduced-motion)\");\n        const setReducedMotionPreferences = () => (prefersReducedMotion.current = motionMediaQuery.matches);\n        motionMediaQuery.addListener(setReducedMotionPreferences);\n        setReducedMotionPreferences();\n    }\n    else {\n        prefersReducedMotion.current = false;\n    }\n}\n\nexport { initPrefersReducedMotion };\n","import { isWillChangeMotionValue } from '../../value/use-will-change/is.mjs';\nimport { warnOnce } from '../../utils/warn-once.mjs';\nimport { motionValue } from '../../value/index.mjs';\nimport { isMotionValue } from '../../value/utils/is-motion-value.mjs';\n\nfunction updateMotionValuesFromProps(element, next, prev) {\n    const { willChange } = next;\n    for (const key in next) {\n        const nextValue = next[key];\n        const prevValue = prev[key];\n        if (isMotionValue(nextValue)) {\n            /**\n             * If this is a motion value found in props or style, we want to add it\n             * to our visual element's motion value map.\n             */\n            element.addValue(key, nextValue);\n            if (isWillChangeMotionValue(willChange)) {\n                willChange.add(key);\n            }\n            /**\n             * Check the version of the incoming motion value with this version\n             * and warn against mismatches.\n             */\n            if (process.env.NODE_ENV === \"development\") {\n                warnOnce(nextValue.version === \"11.1.7\", `Attempting to mix Framer Motion versions ${nextValue.version} with 11.1.7 may not work as expected.`);\n            }\n        }\n        else if (isMotionValue(prevValue)) {\n            /**\n             * If we're swapping from a motion value to a static value,\n             * create a new motion value from that\n             */\n            element.addValue(key, motionValue(nextValue, { owner: element }));\n            if (isWillChangeMotionValue(willChange)) {\n                willChange.remove(key);\n            }\n        }\n        else if (prevValue !== nextValue) {\n            /**\n             * If this is a flat value that has changed, update the motion value\n             * or create one if it doesn't exist. We only want to do this if we're\n             * not handling the value with our animation state.\n             */\n            if (element.hasValue(key)) {\n                const existingValue = element.getValue(key);\n                if (existingValue.liveStyle === true) {\n                    existingValue.jump(nextValue);\n                }\n                else if (!existingValue.hasAnimated) {\n                    existingValue.set(nextValue);\n                }\n            }\n            else {\n                const latestValue = element.getStaticValue(key);\n                element.addValue(key, motionValue(latestValue !== undefined ? latestValue : nextValue, { owner: element }));\n            }\n        }\n    }\n    // Handle removed values\n    for (const key in prev) {\n        if (next[key] === undefined)\n            element.removeValue(key);\n    }\n    return next;\n}\n\nexport { updateMotionValuesFromProps };\n","import { VisualElement } from '../VisualElement.mjs';\nimport { DOMKeyframesResolver } from './DOMKeyframesResolver.mjs';\n\nclass DOMVisualElement extends VisualElement {\n    constructor() {\n        super(...arguments);\n        this.KeyframeResolver = DOMKeyframesResolver;\n    }\n    sortInstanceNodePosition(a, b) {\n        /**\n         * compareDocumentPosition returns a bitmask, by using the bitwise &\n         * we're returning true if 2 in that bitmask is set to true. 2 is set\n         * to true if b preceeds a.\n         */\n        return a.compareDocumentPosition(b) & 2 ? 1 : -1;\n    }\n    getBaseTargetFromProps(props, key) {\n        return props.style\n            ? props.style[key]\n            : undefined;\n    }\n    removeValueFromRenderState(key, { vars, style }) {\n        delete vars[key];\n        delete style[key];\n    }\n}\n\nexport { DOMVisualElement };\n","import { buildHTMLStyles } from './utils/build-styles.mjs';\nimport { isCSSVariableName } from '../dom/utils/is-css-variable.mjs';\nimport { transformProps } from './utils/transform.mjs';\nimport { scrapeMotionValuesFromProps } from './utils/scrape-motion-values.mjs';\nimport { renderHTML } from './utils/render.mjs';\nimport { getDefaultValueType } from '../dom/value-types/defaults.mjs';\nimport { measureViewportBox } from '../../projection/utils/measure.mjs';\nimport { DOMVisualElement } from '../dom/DOMVisualElement.mjs';\nimport { isMotionValue } from '../../value/utils/is-motion-value.mjs';\n\nfunction getComputedStyle(element) {\n    return window.getComputedStyle(element);\n}\nclass HTMLVisualElement extends DOMVisualElement {\n    constructor() {\n        super(...arguments);\n        this.type = \"html\";\n    }\n    readValueFromInstance(instance, key) {\n        if (transformProps.has(key)) {\n            const defaultType = getDefaultValueType(key);\n            return defaultType ? defaultType.default || 0 : 0;\n        }\n        else {\n            const computedStyle = getComputedStyle(instance);\n            const value = (isCSSVariableName(key)\n                ? computedStyle.getPropertyValue(key)\n                : computedStyle[key]) || 0;\n            return typeof value === \"string\" ? value.trim() : value;\n        }\n    }\n    measureInstanceViewportBox(instance, { transformPagePoint }) {\n        return measureViewportBox(instance, transformPagePoint);\n    }\n    build(renderState, latestValues, options, props) {\n        buildHTMLStyles(renderState, latestValues, options, props.transformTemplate);\n    }\n    scrapeMotionValuesFromProps(props, prevProps, visualElement) {\n        return scrapeMotionValuesFromProps(props, prevProps, visualElement);\n    }\n    handleChildMotionValue() {\n        if (this.childSubscription) {\n            this.childSubscription();\n            delete this.childSubscription;\n        }\n        const { children } = this.props;\n        if (isMotionValue(children)) {\n            this.childSubscription = children.on(\"change\", (latest) => {\n                if (this.current)\n                    this.current.textContent = `${latest}`;\n            });\n        }\n    }\n    renderInstance(instance, renderState, styleProp, projection) {\n        renderHTML(instance, renderState, styleProp, projection);\n    }\n}\n\nexport { HTMLVisualElement, getComputedStyle };\n","import { scrapeMotionValuesFromProps } from './utils/scrape-motion-values.mjs';\nimport { DOMVisualElement } from '../dom/DOMVisualElement.mjs';\nimport { buildSVGAttrs } from './utils/build-attrs.mjs';\nimport { camelToDash } from '../dom/utils/camel-to-dash.mjs';\nimport { camelCaseAttributes } from './utils/camel-case-attrs.mjs';\nimport { transformProps } from '../html/utils/transform.mjs';\nimport { renderSVG } from './utils/render.mjs';\nimport { getDefaultValueType } from '../dom/value-types/defaults.mjs';\nimport { createBox } from '../../projection/geometry/models.mjs';\nimport { isSVGTag } from './utils/is-svg-tag.mjs';\n\nclass SVGVisualElement extends DOMVisualElement {\n    constructor() {\n        super(...arguments);\n        this.type = \"svg\";\n        this.isSVGTag = false;\n    }\n    getBaseTargetFromProps(props, key) {\n        return props[key];\n    }\n    readValueFromInstance(instance, key) {\n        if (transformProps.has(key)) {\n            const defaultType = getDefaultValueType(key);\n            return defaultType ? defaultType.default || 0 : 0;\n        }\n        key = !camelCaseAttributes.has(key) ? camelToDash(key) : key;\n        return instance.getAttribute(key);\n    }\n    measureInstanceViewportBox() {\n        return createBox();\n    }\n    scrapeMotionValuesFromProps(props, prevProps, visualElement) {\n        return scrapeMotionValuesFromProps(props, prevProps, visualElement);\n    }\n    build(renderState, latestValues, options, props) {\n        buildSVGAttrs(renderState, latestValues, options, this.isSVGTag, props.transformTemplate);\n    }\n    renderInstance(instance, renderState, styleProp, projection) {\n        renderSVG(instance, renderState, styleProp, projection);\n    }\n    mount(instance) {\n        this.isSVGTag = isSVGTag(instance.tagName);\n        super.mount(instance);\n    }\n}\n\nexport { SVGVisualElement };\n","import { Fragment } from 'react';\nimport { HTMLVisualElement } from '../html/HTMLVisualElement.mjs';\nimport { SVGVisualElement } from '../svg/SVGVisualElement.mjs';\nimport { isSVGComponent } from './utils/is-svg-component.mjs';\n\nconst createDomVisualElement = (Component, options) => {\n    return isSVGComponent(Component)\n        ? new SVGVisualElement(options, { enableHardwareAcceleration: false })\n        : new HTMLVisualElement(options, {\n            allowProjection: Component !== Fragment,\n            enableHardwareAcceleration: true,\n        });\n};\n\nexport { createDomVisualElement };\n","import { createMotionComponent } from '../../motion/index.mjs';\nimport { createMotionProxy } from './motion-proxy.mjs';\nimport { createDomMotionConfig } from './utils/create-config.mjs';\nimport { gestureAnimations } from '../../motion/features/gestures.mjs';\nimport { animations } from '../../motion/features/animations.mjs';\nimport { drag } from '../../motion/features/drag.mjs';\nimport { createDomVisualElement } from './create-visual-element.mjs';\nimport { layout } from '../../motion/features/layout.mjs';\n\nconst preloadedFeatures = {\n    ...animations,\n    ...gestureAnimations,\n    ...drag,\n    ...layout,\n};\n/**\n * HTML & SVG components, optimised for use with gestures and animation. These can be used as\n * drop-in replacements for any HTML & SVG component, all CSS & SVG properties are supported.\n *\n * @public\n */\nconst motion = /*@__PURE__*/ createMotionProxy((Component, config) => createDomMotionConfig(Component, config, preloadedFeatures, createDomVisualElement));\n/**\n * Create a DOM `motion` component with the provided string. This is primarily intended\n * as a full alternative to `motion` for consumers who have to support environments that don't\n * support `Proxy`.\n *\n * ```javascript\n * import { createDomMotionComponent } from \"framer-motion\"\n *\n * const motion = {\n *   div: createDomMotionComponent('div')\n * }\n * ```\n *\n * @public\n */\nfunction createDomMotionComponent(key) {\n    return createMotionComponent(createDomMotionConfig(key, { forwardMotionProps: false }, preloadedFeatures, createDomVisualElement));\n}\n\nexport { createDomMotionComponent, motion };\n","import { HTMLProjectionNode } from '../../projection/node/HTMLProjectionNode.mjs';\nimport { MeasureLayout } from './layout/MeasureLayout.mjs';\n\nconst layout = {\n    layout: {\n        ProjectionNode: HTMLProjectionNode,\n        MeasureLayout,\n    },\n};\n\nexport { layout };\n","import { isSVGComponent } from './is-svg-component.mjs';\nimport { createUseRender } from '../use-render.mjs';\nimport { svgMotionConfig } from '../../svg/config-motion.mjs';\nimport { htmlMotionConfig } from '../../html/config-motion.mjs';\n\nfunction createDomMotionConfig(Component, { forwardMotionProps = false }, preloadedFeatures, createVisualElement) {\n    const baseConfig = isSVGComponent(Component)\n        ? svgMotionConfig\n        : htmlMotionConfig;\n    return {\n        ...baseConfig,\n        preloadedFeatures,\n        useRender: createUseRender(forwardMotionProps),\n        createVisualElement,\n        Component,\n    };\n}\n\nexport { createDomMotionConfig };\n","const MotionGlobalConfig = {\n    skipAnimations: false,\n    useManualTiming: false,\n};\n\nexport { MotionGlobalConfig };\n","import { noop } from './noop.mjs';\n\nlet warning = noop;\nlet invariant = noop;\nif (process.env.NODE_ENV !== \"production\") {\n    warning = (check, message) => {\n        if (!check && typeof console !== \"undefined\") {\n            console.warn(message);\n        }\n    };\n    invariant = (check, message) => {\n        if (!check) {\n            throw new Error(message);\n        }\n    };\n}\n\nexport { invariant, warning };\n","const isBrowser = typeof document !== \"undefined\";\n\nexport { isBrowser };\n","const noop = (any) => any;\n\nexport { noop };\n","import { useRef } from 'react';\n\n/**\n * Creates a constant value over the lifecycle of a component.\n *\n * Even if `useMemo` is provided an empty array as its final argument, it doesn't offer\n * a guarantee that it won't re-run for performance reasons later on. By using `useConstant`\n * you can ensure that initialisers don't execute twice or more.\n */\nfunction useConstant(init) {\n    const ref = useRef(null);\n    if (ref.current === null) {\n        ref.current = init();\n    }\n    return ref.current;\n}\n\nexport { useConstant };\n","import { useLayoutEffect, useEffect } from 'react';\nimport { isBrowser } from './is-browser.mjs';\n\nconst useIsomorphicLayoutEffect = isBrowser ? useLayoutEffect : useEffect;\n\nexport { useIsomorphicLayoutEffect };\n"],"names":["LayoutGroupContext","createContext","MotionConfigContext","transformPagePoint","p","isStatic","reducedMotion","PresenceContext","Queue","constructor","this","order","scheduled","Set","add","process","has","push","remove","index","indexOf","splice","delete","clear","length","stepsOrder","maxElapsed","createRenderBatcher","scheduleNextBatch","allowKeepAlive","runNextFrame","useDefaultElapsed","state","delta","timestamp","isProcessing","steps","reduce","acc","key","thisFrame","nextFrame","numToRun","flushNextFrame","toKeepAlive","WeakSet","step","schedule","callback","addToCurrentFrame","arguments","undefined","queue","cancel","frameData","i","createRenderStep","processStep","stepId","processBatch","MotionGlobalConfig","useManualTiming","performance","now","Math","max","min","forEach","keepAlive","immediate","frame","cancelFrame","requestAnimationFrame","noop","MotionContext","LazyContext","strict","camelToDash","str","replace","toLowerCase","optimizedAppearDataAttribute","microtask","cancelMicrotask","queueMicrotask","isRefObject","ref","Object","prototype","hasOwnProperty","call","useMotionRef","visualState","visualElement","externalRef","useCallback","instance","mount","unmount","current","isVariantLabel","v","Array","isArray","isAnimationControls","start","variantPriorityOrder","variantProps","isControllingVariants","props","animate","some","name","isVariantNode","Boolean","variants","useCreateMotionContext","initial","context","inherit","getCurrentTreeVariants","useContext","useMemo","variantLabelsAsDependency","prop","join","featureProps","animation","exit","drag","focus","hover","tap","pan","inView","layout","featureDefinitions","isEnabled","SwitchLayoutGroupContext","motionComponentSymbol","Symbol","for","createMotionComponent","_ref","preloadedFeatures","createVisualElement","useRender","useVisualState","Component","features","loadFeatures","ForwardRefComponent","forwardRef","MeasureLayout","configAndProps","layoutId","useLayoutId","isBrowser","parent","lazyContext","presenceContext","reducedMotionConfig","visualElementRef","useRef","renderer","blockInitialAnimation","useInsertionEffect","update","wantsHandoff","window","HandoffComplete","useIsomorphicLayoutEffect","postRender","render","animationState","animateChanges","useEffect","updateFeatures","useVisualElement","initialLayoutGroupConfig","isStrict","jsxs","Provider","value","children","jsx","_ref2","layoutGroupId","id","createMotionProxy","createConfig","custom","Proxy","componentCache","Map","get","_target","set","lowercaseSVGElements","isSVGComponent","includes","test","scaleCorrectors","transformPropOrder","transformProps","isForcedMotionValue","startsWith","isMotionValue","getVelocity","translateAlias","x","y","z","transformPerspective","numTransforms","checkStringStartsWith","token","isCSSVariableName","startsAsVariableToken","isCSSVariableToken","singleCssVariableRegex","split","trim","getValueAsType","type","transform","clamp","number","parse","parseFloat","alpha","scale","default","sanitize","round","floatRegex","colorRegex","singleColorRegex","isString","createUnitType","unit","endsWith","concat","degrees","percent","px","vh","vw","progressPercentage","int","numberValueTypes","borderWidth","borderTopWidth","borderRightWidth","borderBottomWidth","borderLeftWidth","borderRadius","radius","borderTopLeftRadius","borderTopRightRadius","borderBottomRightRadius","borderBottomLeftRadius","width","maxWidth","height","maxHeight","size","top","right","bottom","left","padding","paddingTop","paddingRight","paddingBottom","paddingLeft","margin","marginTop","marginRight","marginBottom","marginLeft","rotate","rotateX","rotateY","rotateZ","scaleX","scaleY","scaleZ","skew","skewX","skewY","distance","translateX","translateY","translateZ","perspective","opacity","originX","originY","originZ","zIndex","backgroundPositionX","backgroundPositionY","fillOpacity","strokeOpacity","numOctaves","buildHTMLStyles","latestValues","options","transformTemplate","style","vars","transformOrigin","hasTransform","hasTransformOrigin","transformIsNone","valueType","valueAsType","transformIsDefault","enableHardwareAcceleration","allowTransformNone","transformString","transformName","buildTransform","createHtmlRenderState","copyRawValuesOnly","target","source","useStyle","assign","useInitialMotionValues","useHTMLProps","htmlProps","dragListener","draggable","userSelect","WebkitUserSelect","WebkitTouchCallout","touchAction","tabIndex","onTap","onTapStart","whileTap","validMotionProps","isValidMotionProp","shouldForward","isValidProp","require","_a","calcOrigin","origin","offset","dashKeys","array","camelKeys","buildSVGAttrs","isSVGTag","attrX","attrY","attrScale","pathLength","pathSpacing","pathOffset","latest","viewBox","attrs","dimensions","pxOriginX","pxOriginY","calcSVGTransformOrigin","spacing","useDashCase","keys","buildSVGPath","createSvgRenderState","tag","useSVGProps","_isStatic","visualProps","rawStyles","createUseRender","forwardMotionProps","filteredProps","isDom","values","filterProps","elementProps","Fragment","renderedChildren","createElement","renderHTML","element","styleProp","projection","getProjectionStyles","setProperty","camelCaseAttributes","renderSVG","renderState","_styleProp","setAttribute","scrapeMotionValuesFromProps","prevProps","newValues","getValue","liveStyle","scrapeMotionValuesFromProps$1","charAt","toUpperCase","substring","resolveVariantFromProps","definition","currentValues","currentVelocity","isKeyframesTarget","isCustomValue","mix","toValue","resolveFinalValueInKeyframes","resolveMotionValue","unwrappedValue","makeUseVisualState","config","make","createRenderState","onMount","makeLatestValues","makeState","useConstant","scrapeMotionValues","motionValues","isControllingVariants$1","isVariantNode$1","isInitialAnimationBlocked","variantToSet","resolved","transitionEnd","transition","valueTarget","svgMotionConfig","read","getBBox","getBoundingClientRect","e","tagName","htmlMotionConfig","addDomEvent","eventName","handler","passive","addEventListener","removeEventListener","isPrimaryPointer","event","pointerType","button","isPrimary","extractEventInfo","pointType","point","addPointerInfo","addPointerEvent","combineFunctions","a","b","pipe","_len","transformers","_key","createLock","lock","openLock","globalHorizontalLock","globalVerticalLock","getGlobalLock","openHorizontal","openVertical","isDragActive","openGestureLock","Feature","node","isMounted","addHoverEvent","isActive","callbackName","handleEvent","info","getProps","whileHover","setActive","isNodeOrChild","child","parentElement","fireSyntheticPointerEvent","syntheticPointerEvent","PointerEvent","observerCallbacks","WeakMap","observers","fireObserverCallback","entry","fireAllObserverCallbacks","entries","observeIntersection","rootInteresectionObserver","root","lookupRoot","document","rootObservers","JSON","stringify","IntersectionObserver","initIntersectionObserver","observe","unobserve","thresholdNames","all","gestureAnimations","super","hasEnteredView","isInView","startObserver","viewport","rootMargin","amount","once","threshold","isIntersecting","onViewportEnter","onViewportLeave","hasOptionsChanged","prevViewport","hasViewportOptionChanged","removeStartListeners","removeEndListeners","removeAccessibleListeners","startPointerPress","startEvent","startInfo","isPressing","removePointerUpListener","endPointerPress","endEvent","endInfo","checkPressEnd","onTapCancel","globalTapTarget","removePointerCancelListener","cancelEvent","cancelInfo","cancelPress","startPress","startAccessiblePress","removeKeydownListener","keydownEvent","keyupEvent","removeBlurListener","handleBlur","removePointerListener","removeFocusListener","onFocus","isFocusVisible","matches","onBlur","shallowCompare","next","prev","prevLength","resolveVariant","getCurrent","velocity","secondsToMilliseconds","seconds","millisecondsToSeconds","milliseconds","underDampedSpring","stiffness","damping","restSpeed","keyframesTransition","duration","ease","getDefaultTransition","valueKey","keyframes","sqrt","getValueTransition","instantAnimationState","isNotNull","getFinalKeyframe","finalKeyframe","repeat","repeatType","resolvedKeyframes","filter","clearTime","time","newTime","isZeroValueString","isNumericalString","splitCSSVariableRegex","getVariableValue","depth","invariant","fallback","match","exec","token1","token2","parseCSSVariable","getComputedStyle","getPropertyValue","trimmed","positionalKeys","isNumOrPxType","getPosFromMatrix","matrix","pos","getTranslateFromMatrix","pos2","pos3","_bbox","matrix3d","transformKeys","nonTranslationalTransformKeys","positionalValues","_ref3","_ref4","_ref5","_ref6","_ref7","_ref8","_ref9","_ref10","_ref11","testValueType","dimensionValueTypes","findDimensionValueType","find","toResolve","isScheduled","anyNeedsMeasurement","measureAllKeyframes","resolversToMeasure","from","resolver","needsMeasurement","elementsToMeasure","map","transformsToRestore","removedTransforms","removeNonTranslationalTransform","measureInitialState","restore","measureEndState","suspendedScrollY","scrollTo","complete","readAllKeyframes","readKeyframes","KeyframeResolver","unresolvedKeyframes","onComplete","motionValue","isAsync","isComplete","scheduleResolve","resolveKeyframes","currentValue","valueAsRead","readValue","setFinalKeyframe","renderEndStyles","resume","isColorString","testProp","splitColor","aName","bName","cName","c","rgbUnit","clampRgbUnit","rgba","red","green","blue","alpha$1","hex","r","g","parseInt","hsla","hue","saturation","lightness","color","NUMBER_TOKEN","COLOR_TOKEN","VAR_TOKEN","VAR_FUNCTION_TOKEN","SPLIT_TOKEN","complexRegex","analyseComplexValue","originalValue","toString","indexes","var","types","parsedValue","parseComplexValue","createTransformer","numSections","output","convertNumbersToZero","complex","_b","isNaN","getAnimatableNone","parsed","transformer","maxDefaults","applyDefaultFilter","slice","defaultValue","functionRegex","functions","defaultValueTypes","backgroundColor","outlineColor","fill","stroke","borderColor","borderTopColor","borderRightColor","borderBottomColor","borderLeftColor","WebkitFilter","getDefaultValueType","defaultValueType","DOMKeyframesResolver","owner","keyframe","resolveNoneKeyframes","originType","targetType","noneKeyframeIndexes","animatableTemplate","noneIndex","makeNoneKeyframesAnimatable","pageYOffset","measuredOrigin","measureViewportBox","measureKeyframe","jump","finalKeyframeIndex","unsetTransformName","unsetTransformValue","isAnimatable","BaseAnimation","autoplay","delay","repeatDelay","isStopped","hasAttemptedResolve","updateFinishedPromise","_resolved","onKeyframesResolved","onUpdate","isGenerator","originKeyframe","targetKeyframe","isOriginAnimatable","isTargetAnimatable","warning","hasKeyframesChanged","canAnimate","resolveFinishedPromise","resolvedAnimation","initPlayback","onPostResolved","then","resolve","reject","currentFinishedPromise","Promise","velocityPerSecond","frameDuration","velocitySampleDuration","calcGeneratorVelocity","resolveValue","t","prevT","safeMin","minDuration","maxDuration","minDamping","maxDamping","findSpring","envelope","derivative","bounce","mass","dampingRatio","undampedFreq","exponentialDecay","calcAngularFreq","exp","d","pow","f","initialGuess","result","rootIterations","approximateRoot","durationKeys","physicsKeys","isSpringType","spring","restDelta","done","isResolvedFromDuration","springOptions","derived","getSpringOptions","initialVelocity","initialDelta","undampedAngularFreq","isGranularScale","abs","resolveSpring","angularFreq","sin","cos","dampedAngularFreq","freqForT","sinh","cosh","calculatedDuration","isBelowVelocityThreshold","isBelowDisplacementThreshold","inertia","power","timeConstant","bounceDamping","bounceStiffness","modifyTarget","nearestBoundary","amplitude","ideal","calcDelta","calcLatest","applyFriction","timeReachedBoundary","spring$1","checkCatchBoundary","hasUpdatedFrame","calcBezier","a1","a2","subdivisionPrecision","subdivisionMaxIterations","cubicBezier","mX1","mY1","mX2","mY2","getTForX","aX","lowerBound","upperBound","currentX","currentT","binarySubdivide","easeIn","easeOut","easeInOut","mirrorEasing","easing","reverseEasing","circIn","acos","circOut","circInOut","backOut","backIn","backInOut","easingLookup","linear","anticipate","easingDefinitionToFunction","x1","y1","x2","y2","progress","to","toFromDifference","mixNumber","hueToRgb","q","mixLinearColor","fromExpo","expo","colorTypes","asRGBA","model","hslaToRgba","mixColor","fromRGBA","toRGBA","blended","mixImmediate","mixNumber$1","getMixer","mixComplex","mixArray","mixObject","numValues","blendValue","template","originStats","targetStats","orderedOrigin","pointers","originIndex","originValue","matchOrder","mixer","interpolate","input","isClamp","inputLength","reverse","mixers","customMixer","mixerFactory","numMixers","easingFunction","createMixers","interpolator","progressInRange","defaultOffset","arr","remaining","offsetProgress","fillOffset","keyframeValues","times","easingFunctions","isEasingArray","absoluteTimes","o","convertOffsetToTimes","mapTimeToKeyframe","frameloopDriver","passTimestamp","stop","generators","decay","tween","percentToProgress","MainThreadAnimation","KeyframeResolver$1","holdTime","startTime","cancelTime","currentTime","playbackSpeed","pendingPlayState","teardown","onStop","onResolved","keyframes$1","generatorFactory","mapPercentToKeyframes","mirroredGenerator","generator","Infinity","calcGeneratorDuration","resolvedDuration","totalDuration","play","pause","tick","sample","speed","timeWithoutDelay","isInDelayPhase","elapsed","frameGenerator","currentIteration","floor","iterationProgress","isAnimationFinished","finish","driver","newSpeed","hasChanged","onPlay","stopDriver","isBezierDefinition","isWaapiSupportedEasing","supportedWaapiEasing","every","cubicBezierAsString","mapEasingToNativeEasingWithDefault","mapEasingToNativeEasing","supportsWaapi","memo","Element","acceleratedValues","AcceleratedAnimation","pregeneratedAnimation","sampleAnimation","pregeneratedKeyframes","pregenerateKeyframes","valueName","keyframeOptions","iterations","direction","animateStyle","pendingTimeline","timeline","onfinish","playbackRate","playState","attachTimeline","sampleTime","setWithVelocity","supports","HTMLElement","animateMotionValue","isHandoff","valueTransition","when","_delay","delayChildren","staggerChildren","staggerDirection","isTransitionDefined","shouldSkip","skipAnimations","isWillChangeMotionValue","addUniqueItem","item","removeItem","SubscriptionManager","subscriptions","notify","numSubscriptions","getSize","collectMotionValues","MotionValue","init","_this","version","canTrackVelocity","events","updateAndNotify","updatedAt","setPrevFrameValue","setCurrent","change","renderRequest","hasAnimated","prevFrameValue","prevUpdatedAt","onChange","subscription","on","unsubscribe","clearListeners","eventManagers","attach","passiveEffect","stopPassiveEffect","endAnimation","getPrevious","startAnimation","animationStart","animationComplete","clearAnimation","animationCancel","isAnimating","destroy","setMotionValue","hasValue","addValue","shouldBlockAnimation","protectedKeys","needsAnimating","shouldBlock","animateTarget","targetAndTransition","transitionOverride","willChange","animations","animationTypeState","getState","HandoffAppearAnimations","appearId","shouldReduceMotion","setTarget","animateVariant","variant","getAnimation","getChildAnimations","variantChildren","forwardDelay","maxStaggerDuration","generateStaggerDuration","sort","sortByTreeOrder","animateChildren","first","last","sortNodePosition","reversePriorityOrder","numAnimationTypes","animateList","resolvedDefinition","animateVisualElement","createAnimationState","createTypeState","whileInView","whileDrag","whileFocus","isInitialRender","buildResolvedTypeValues","changedActiveType","getVariantContext","removedKeys","encounteredKeys","removedVariantIndex","typeState","propIsVariant","activeDelta","isInherited","manuallyAnimateOnMount","prevProp","shouldAnimateType","checkVariantsDidChange","handledRemovedValues","definitionList","resolvedValues","prevResolvedValues","allKeys","markToAnimate","valueHasChanged","fallbackAnimation","fallbackTarget","getBaseTarget","shouldAnimate","setAnimateFunction","makeAnimator","updateAnimationControlsSubscription","subscribe","prevAnimate","isPresent","onExitComplete","prevIsPresent","prevPresenceContext","exitAnimation","register","PanSession","handlers","contextWindow","dragSnapToOrigin","lastMoveEvent","lastMoveEventInfo","updatePoint","getPanInfo","history","isPanStarted","isDistancePastThreshold","xDelta","yDelta","distance2D","onStart","onMove","handlePointerMove","transformPoint","handlePointerUp","end","onEnd","onSessionEnd","resumeAnimation","panInfo","initialInfo","onSessionStart","removeListeners","updateHandlers","subtractPoint","lastDevicePoint","startDevicePoint","timeDelta","timestampedPoint","lastPoint","calcLength","axis","isNear","maxDistance","calcAxisDelta","originPoint","translate","calcBoxDelta","calcRelativeAxis","relative","calcRelativeAxisPosition","calcRelativePosition","calcRelativeAxisConstraints","calcViewportAxisConstraints","layoutAxis","constraintsAxis","defaultElastic","resolveAxisElastic","dragElastic","minLabel","maxLabel","resolvePointElastic","label","createDelta","createBox","eachAxis","convertBoundingBoxToBox","isIdentityScale","hasScale","has2DTranslate","is2DTranslate","scalePoint","applyPointDelta","boxScale","applyAxisDelta","applyBoxDelta","box","snapToDefault","Number","isInteger","translateAxis","transformAxis","transforms","scaleKey","originKey","axisOrigin","xKeys","yKeys","transformBox","topLeft","bottomRight","transformBoxPoints","getContextWindow","ownerDocument","defaultView","elementDragControls","VisualElementDragControls","openGlobalLock","isDragging","currentDirection","constraints","hasMutatedConstraints","elastic","originEvent","snapToCursor","panSession","pauseAnimation","stopAnimation","dragPropagation","onDragStart","resolveConstraints","isAnimationBlocked","getAxisMotionValue","measuredAxis","layoutBox","dragDirectionLock","onDirectionLock","onDrag","lockThreshold","getCurrentDirection","updateAxis","getAnimationState","getTransformPagePoint","onDragEnd","_point","shouldDrag","axisValue","applyConstraints","dragConstraints","measure","prevConstraints","resolveRefConstraints","calcRelativeConstraints","resolveDragElastic","relativeConstraints","rebaseAxisConstraints","onMeasureDragConstraints","constraintsElement","constraintsBox","rootProjectionNode","viewportBox","scroll","measurePageBox","measuredConstraints","calcViewportConstraints","userConstraints","convertBoxToBoundingBox","dragMomentum","dragTransition","onDragTransitionEnd","momentumAnimations","startAxisValueAnimation","dragKey","externalMotionValue","scalePositionWithinConstraints","boxProgress","sourceLength","targetLength","updateScroll","updateLayout","addListeners","stopPointerListener","measureDragConstraints","stopMeasureLayoutListener","stopResizeListener","stopLayoutUpdateListener","hasLayoutChanged","asyncHandler","globalProjectionState","hasAnimatedSinceResize","hasEverUpdated","pixelsToPercent","pixels","correctBorderRadius","correct","correctBoxShadow","treeScale","projectionDelta","original","shadow","xScale","yScale","averageScale","MeasureLayoutWithContext","componentDidMount","layoutGroup","switchLayoutGroup","correctors","defaultScaleCorrectors","group","didUpdate","safeToRemove","setOptions","getSnapshotBeforeUpdate","layoutDependency","willUpdate","promote","relegate","stack","getStack","members","componentDidUpdate","currentAnimation","isLead","componentWillUnmount","promoteContext","scheduleCheckAfterUnmount","deregister","useId","usePresence","applyTo","boxShadow","borders","numBorders","asNumber","isPx","getRadius","radiusName","easeCrossfadeIn","compress","easeCrossfadeOut","copyAxisInto","originAxis","copyBoxInto","originBox","removePointDelta","removeAxisTransforms","sourceAxis","removeAxisDelta","removeBoxTransforms","sourceBox","isAxisDeltaZero","isDeltaZero","boxEqualsRounded","aspectRatio","NodeStack","scheduleRender","prevLead","lead","indexOfNode","findIndex","member","preserveFollowOpacity","show","resumeFrom","preserveOpacity","snapshot","animationValues","isUpdating","isLayoutDirty","crossfade","hide","exitAnimationComplete","resumingFrom","removeLeadSnapshot","buildProjectionTransform","latestTransform","xTranslate","yTranslate","zTranslate","elementScaleX","elementScaleY","compareByDepth","FlatTree","isDirty","transformAxes","hiddenVisibility","visibility","projectionFrameData","totalNodes","resolvedTargetDeltas","recalculatedProjection","resetDistortingTransform","sharedAnimationValues","setStaticValue","createProjectionNode","attachResizeListener","defaultParent","measureScroll","checkIsScrollRoot","resetTransform","animationId","isTreeAnimating","isProjectionDirty","isSharedProjectionDirty","isTransformDirty","updateManuallyBlocked","updateBlockedByResize","isSVG","needsReset","shouldResetTransform","eventHandlers","hasTreeAnimated","updateScheduled","projectionUpdateScheduled","checkUpdateFailed","clearAllSnapshots","updateProjection","data","nodes","propagateDirtyNodes","resolveTargetDelta","calcProjection","cleanDirtyNodes","MotionDebug","record","hasProjected","isVisible","animationProgress","sharedNodes","path","notifyListeners","subscriptionManager","args","hasListeners","SVGElement","cancelDelay","resizeUnblockUpdate","timeout","checkElapsed","finishAnimation","registerSharedNode","hasRelativeTargetChanged","newLayout","isTreeAnimationBlocked","relativeTarget","layoutTransition","defaultLayoutTransition","onLayoutAnimationStart","onLayoutAnimationComplete","targetChanged","targetLayout","hasOnlyRelativeTargetChanged","layoutRoot","setAnimationOrigin","animationOptions","blockUpdate","unblockUpdate","isUpdateBlocked","startUpdate","resetSkewAndRotation","getTransformTemplate","shouldNotifyListeners","prevTransformTemplateValue","updateSnapshot","clearMeasurements","clearIsLayoutDirty","HandoffCancelAllAnimations","resetTransformStyle","notifyLayoutUpdate","preRender","clearSnapshot","removeLeadSnapshots","scheduleUpdateProjection","alwaysMeasureLayout","prevLayout","layoutCorrected","phase","layoutScroll","isRoot","isResetRequested","hasProjection","transformTemplateValue","transformTemplateHasChanged","removeTransform","pageBox","removeElementScroll","roundAxis","measuredBox","boxWithoutScroll","rootScroll","applyTransform","transformOnly","withTransforms","boxWithoutTransform","setTargetDelta","targetDelta","forceRelativeParentToResolveTarget","relativeParent","resolvedRelativeTargetAt","forceRecalculation","getLead","isShared","attemptToResolveRelativeTarget","getClosestProjectingParent","relativeTargetOrigin","targetWithTransforms","isProjecting","canSkip","pendingAnimation","prevTreeScaleX","prevTreeScaleY","treePath","isSharedTransition","treeLength","display","applyTreeDeltas","projectionTransform","projectionDeltaWithTransform","prevProjectionTransform","notifyAll","snapshotLatestValues","mixedValues","relativeLayout","isSharedLayoutAnimation","isOnlyMember","shouldCrossfadeOpacity","hasOpacityCrossfade","prevRelativeTarget","mixTargetDelta","mixAxisDelta","mixAxis","follow","opacityExit","borderLabel","followRadius","leadRadius","mixValues","motionValue$1","animateSingleValue","completeAnimation","applyTransformsToTarget","shouldAnimatePositionOnly","animationType","xLength","yLength","initialPromotionConfig","shouldPreserveFollowOpacity","getPrevLead","hasDistortingTransform","resetValues","styles","pointerEvents","emptyStyles","valuesToRender","corrected","num","resetTree","measuredLayout","axisSnapshot","layoutDelta","visualDelta","parentSnapshot","parentLayout","relativeSnapshot","onBeforeLayoutMeasure","userAgentContains","string","navigator","userAgent","roundPoint","DocumentProjectionNode","documentElement","scrollLeft","body","scrollTop","HTMLProjectionNode","documentNode","position","removePointerDownListener","onPointerDown","pointerDownEvent","session","createPanHandlers","onPanSessionStart","onPanStart","onPan","onPanEnd","removeGroupControls","controls","dragControls","ProjectionNode","prefersReducedMotion","hasReducedMotionListener","visualElementStore","valueTypes","featureNames","numFeatures","propEventHandlers","numVariantProps","getClosestProjectingNode","allowProjection","VisualElement","_props","_prevProps","_visualElement","valueSubscriptions","prevMotionValues","propEventSubscriptions","notifyUpdate","triggerBuild","renderInstance","baseTarget","initialValues","initialMotionValues","removeFromVariantTree","addVariantChild","bindToMotionValue","matchMedia","motionMediaQuery","setReducedMotionPreferences","addListener","initPrefersReducedMotion","valueIsTransform","removeOnChange","latestValue","removeOnRenderRequest","other","sortInstanceNodePosition","ProjectionNodeConstructor","renderedProps","FeatureConstructor","MeasureLayoutComponent","feature","build","measureInstanceViewportBox","getStaticValue","listener","nextValue","prevValue","existingValue","removeValue","updateMotionValuesFromProps","handleChildMotionValue","getVariant","getClosestVariantNode","closestVariantNode","removeValueFromRenderState","getBaseTargetFromProps","readValueFromInstance","setBaseTarget","valueFromInitial","DOMVisualElement","compareDocumentPosition","HTMLVisualElement","defaultType","computedStyle","childSubscription","textContent","SVGVisualElement","getAttribute","createDomVisualElement","motion","createDomMotionConfig","any","useLayoutEffect"],"sourceRoot":""}