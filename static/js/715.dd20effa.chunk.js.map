{"version":3,"file":"static/js/715.dd20effa.chunk.js","mappings":"6NAWe,SAASA,EAAIC,GAA+B,IAA9B,WAAEC,EAAU,GAAEC,EAAE,QAAEC,GAASH,EACpD,MAAOI,EAAeC,IAAoBC,EAAAA,EAAAA,WAAS,GAE7CC,EAAmBC,EAAAA,GAAW,CAChCT,KAAMS,EAAAA,KAAYC,IAAI,EAAG,kCAAkCC,SAAS,sBAwBlEC,GAASC,EAAAA,EAAAA,IAAU,CACrBC,cAAe,CACXd,KAAM,IACPQ,mBACHO,SAzBmBC,UACnBV,GAAiB,SAEXW,EAAAA,EAAMC,MAAM,GAADC,OAAIC,EAAAA,EAAQ,gBAAAD,OAAehB,GAAM,CAC9CkB,IAAK,OACLC,OAAQC,EAAOvB,MAChB,CACCwB,QAAS,CACLC,MAAOC,EAAAA,EAAkBC,IAAI,YAGnCC,MAAMC,IAEJvB,GAAiB,GACjBF,IACAF,GAAY,IACb4B,OAAOC,IACU,GAClB,IAgBN,OAAOC,EAAAA,EAAAA,KAAAC,EAAAA,SAAA,CAAAC,UACHF,EAAAA,EAAAA,KAACG,EAAAA,EAAOC,IAAG,CAACC,UAAU,YAAYC,QAAS,CAAEC,QAAS,GAAKC,QAAS,CAAED,QAAS,GAC3EE,WAAY,CAAEC,SAAU,GAAKC,KAAM,UAAWT,UAC9CU,EAAAA,EAAAA,MAACT,EAAAA,EAAOC,IAAG,CAACC,UAAU,WAAWC,QAAS,CAAEC,QAAS,GAAKC,QAAS,CAAED,QAAS,GAC1EE,WAAY,CAAEC,SAAU,EAAGC,KAAM,UAAWT,SAAA,EAC5CF,EAAAA,EAAAA,KAAA,OAAKK,UAAU,uBAAsBH,UACjCF,EAAAA,EAAAA,KAACa,EAAAA,IAAiB,CAACC,QAAS5C,OAEhC0C,EAAAA,EAAAA,MAAA,QAAMP,UAAU,OAAOtB,SAAUH,EAAOmC,aAAab,SAAA,EACjDF,EAAAA,EAAAA,KAAA,SAAOgB,QAAQ,OAAMd,SAAC,UACtBF,EAAAA,EAAAA,KAAA,KAAGK,UAAU,mBAAkBH,SAAC,qCAChCF,EAAAA,EAAAA,KAAA,YAAUW,KAAK,OAAON,UAAU,eAAeY,GAAG,OAAOC,KAAK,OAAOC,KAAK,KACtEC,SAlBAC,IAChB,MACMC,EADWC,MAAMC,KAAKH,EAAKI,OAAOC,MAAMC,MAAM,MACxBC,MAAM,GAAGC,KAAKC,GAAQA,EAAIC,QAAQ,KAAM,MACpEnD,EAAOoD,cAAc,OAAQV,EAAW,EAeFW,OAAQrD,EAAOsD,aACxCtD,EAAOuD,OAAOnE,MAAQY,EAAOwD,QAAQpE,MAClCgC,EAAAA,EAAAA,KAAA,OAAKK,UAAU,+BAA8BH,SAAEtB,EAAOuD,OAAOnE,OAAc,KAE9EK,GAAgB2B,EAAAA,EAAAA,KAAA,UAAQW,KAAK,SAASN,UAAU,8BAA6BH,UAC1EF,EAAAA,EAAAA,KAAA,KAAGK,UAAU,+BAEbL,EAAAA,EAAAA,KAAA,UAAQK,UAAU,WAAWM,KAAK,SAAQT,SAAC,oBAKnE,C","sources":["components/AppsCrud/UpdateApp/News/News.jsx"],"sourcesContent":["import React, { useState } from 'react'\r\nimport './News.scss'\r\nimport { motion } from 'framer-motion'\r\nimport { RiCloseCircleLine } from 'react-icons/ri'\r\nimport { useFormik } from 'formik';\r\nimport * as Yup from 'yup';\r\nimport axios from 'axios';\r\nimport { reactLocalStorage } from 'reactjs-localstorage';\r\nimport { HostLink } from '../../../Host/Host';\r\n\r\n\r\nexport default function News({ HandleShow, ID, refetch }) {\r\n    const [LoadingButton, setLoadingButton] = useState(false);\r\n\r\n    const validationSchema = Yup.object({\r\n        News: Yup.array().min(1, \"You should atleast add one new\").required(\"News is required\")\r\n    })\r\n\r\n    const SendNameUpdate = async (values) => {\r\n        setLoadingButton(true);\r\n        console.log(values);\r\n        await axios.patch(`${HostLink}/app/Update/${ID}`, {\r\n            key: \"news\",\r\n            result: values.News\r\n        }, {\r\n            headers: {\r\n                token: reactLocalStorage.get(\"token\")\r\n            }\r\n        },\r\n        ).then((res) => {\r\n            console.log(res);\r\n            setLoadingButton(false);\r\n            refetch();\r\n            HandleShow();\r\n        }).catch((err) => {\r\n            console.log(err);\r\n        })\r\n    }\r\n\r\n    const Formik = useFormik({\r\n        initialValues: {\r\n            News: \"\"\r\n        }, validationSchema,\r\n        onSubmit: SendNameUpdate\r\n    });\r\n\r\n    const HandleNews = (news) => {\r\n        const MainNews = Array.from(news.target.value.split(\"-\"));\r\n        const SecondNews = MainNews.slice(1).map((ele) => ele.replace(/\\n/, ''));\r\n        Formik.setFieldValue(\"News\", SecondNews);\r\n    }\r\n\r\n    return <>\r\n        <motion.div className=\"popupNews\" initial={{ opacity: 0 }} animate={{ opacity: 1 }}\r\n            transition={{ duration: 0.8, type: 'spring' }}>\r\n            <motion.div className=\"Newsform\" initial={{ opacity: 0 }} animate={{ opacity: 1 }}\r\n                transition={{ duration: 1, type: 'spring' }}>\r\n                <div className=\"close align-self-end\">\r\n                    <RiCloseCircleLine onClick={HandleShow} />\r\n                </div>\r\n                <form className='mt-5' onSubmit={Formik.handleSubmit}>\r\n                    <label htmlFor=\"News\">News</label>\r\n                    <p className='alert alert-dark'>Please add [-] before every new</p>\r\n                    <textarea type=\"text\" className=\"form-control\" id=\"News\" name=\"News\" rows='10'\r\n                        onChange={HandleNews} onBlur={Formik.handleBlur} />\r\n                    {Formik.errors.News && Formik.touched.News ?\r\n                        <div className=\"alert alert-danger py-2 mt-2\">{Formik.errors.News}</div> : null}\r\n\r\n                    {LoadingButton ? <button type='button' className='btn bg-main text-light mt-2'>\r\n                        <i className='fas fa-spinner fa-spin '></i>\r\n                    </button> :\r\n                        <button className='btn mt-3' type='submit'>Submit</button>}\r\n                </form>\r\n            </motion.div>\r\n        </motion.div >\r\n    </>\r\n}\r\n"],"names":["News","_ref","HandleShow","ID","refetch","LoadingButton","setLoadingButton","useState","validationSchema","Yup","min","required","Formik","useFormik","initialValues","onSubmit","async","axios","patch","concat","HostLink","key","result","values","headers","token","reactLocalStorage","get","then","res","catch","err","_jsx","_Fragment","children","motion","div","className","initial","opacity","animate","transition","duration","type","_jsxs","RiCloseCircleLine","onClick","handleSubmit","htmlFor","id","name","rows","onChange","news","SecondNews","Array","from","target","value","split","slice","map","ele","replace","setFieldValue","onBlur","handleBlur","errors","touched"],"sourceRoot":""}